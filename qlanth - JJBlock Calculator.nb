(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     31460,        694]
NotebookOptionsPosition[     30166,        662]
NotebookOutlinePosition[     30942,        686]
CellTagsIndexPosition[     30899,        683]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["qLanth : JJBlock Generator", "Title",
 CellChangeTimes->{{3.866561008726151*^9, 3.866561012858223*^9}, {
  3.866561154959708*^9, 3.866561182398954*^9}, {3.906728019105769*^9, 
  3.906728021136181*^9}, {3.9155747182149*^9, 3.915574719176509*^9}},
 TextAlignment->Center,ExpressionUUID->"f3dab00c-756e-4b1f-9a29-d532363347ff"],

Cell[TextData[{
 "In this notebook the matrix elements in the LSJMJ basis are evaluated by \
putting together the reduced matrix elements for the following operators:\n\
electrostatic, \nspin-orbit, \nconfig interaction via Casimir operators (\
\[Alpha], \[Beta], \[Gamma]), \nspin-other-orbit, \nelectrostatically \
correlated spin orbit, \nspin-spin, \nand the three-body effective operator.\n\
\nGoing from ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["f", "1"], TraditionalForm]],ExpressionUUID->
  "1c585450-dd78-4358-9f41-cec86710b441"],
 " to ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["f", "7"], TraditionalForm]],ExpressionUUID->
  "05edb338-7657-4274-800c-24a2b2142180"],
 " takes about ten minutes.\n\nFor this to run, all the data generated by the \
notebook \[OpenCurlyDoubleQuote]qlanth - Table Generator.nb\
\[CloseCurlyDoubleQuote] is required."
}], "Text",
 CellChangeTimes->{{3.884338541433605*^9, 3.884338573866145*^9}, {
   3.884339039840309*^9, 3.884339047838854*^9}, {3.892029591652556*^9, 
   3.892029591888661*^9}, {3.9064868171715384`*^9, 3.906486821664096*^9}, {
   3.906728781318788*^9, 3.9067288855603437`*^9}, {3.906728930043571*^9, 
   3.906728953785007*^9}, {3.906729603354409*^9, 3.906729621325438*^9}, {
   3.906732357692666*^9, 3.9067324537080297`*^9}, 3.9139961013745317`*^9, 
   3.914009057351668*^9, {3.9150973665688334`*^9, 3.9150974182334557`*^9}, {
   3.915574663916408*^9, 3.915574684477847*^9}},
 TextAlignment->Center,ExpressionUUID->"47503aaa-7b50-458a-bffb-5f91a3d860bc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"$Path", ",", 
    RowBox[{"NotebookDirectory", "[", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Get", "[", "\"\<qlanth.m\>\"", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Get", "[", "\"\<misc.m\>\"", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LoadAll", "[", "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.866625158893896*^9, 3.8666251699518127`*^9}, {
   3.86662565468071*^9, 3.866625655065934*^9}, {3.867925727834807*^9, 
   3.867925730467511*^9}, {3.878673720338455*^9, 3.878673721191774*^9}, 
   3.87867383810907*^9, 3.878675191901079*^9, 3.8786752835763073`*^9, 
   3.8787416478732557`*^9, {3.8799526959199963`*^9, 3.8799526960770903`*^9}, {
   3.892029582337204*^9, 3.8920295889408827`*^9}, {3.892552302793804*^9, 
   3.892552311308173*^9}, 3.8980141354678907`*^9, {3.9067294207882433`*^9, 
   3.906729421016581*^9}, {3.913996149608245*^9, 3.9139961544992*^9}, 
   3.9149401396091347`*^9, 3.915112303559952*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"2539f139-b8a7-430c-b1c8-4ad556ecc2d0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "TabulateManyJJBlockMatrixTables"}]], "Input",
 CellChangeTimes->{{3.873904145403717*^9, 3.873904145591063*^9}, {
  3.915469311917368*^9, 3.91546931847964*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"5826bdff-cd17-4a32-9677-5e983098066e"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"TabulateManyJJBlockMatrixTables[{n1, n2, ...}, {I1, \
I2, ...}] calculates the tables of matrix elements for the requested f^n_i \
configurations with the given nuclear spin I_i. The function does not return \
the matrices themselves. It instead returns an association whose keys are \
lists of the form {n, I} and whose values are the filenames where the output \
of TabulateJJBlockMatrixTables was saved to. When these files are loaded with \
Get, the following three symbols are thus defined: JJBlockMatrixTable, \
EnergyStatesTable, and AllowedM.\\n  JJBlockMatrixTable is an association \
whose keys are of the form {n, J, Jp, Ii, Ii} and whose values are matrix \
elements.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"TabulateManyJJBlockMatrixTables", "[", 
                    
                    RowBox[{
                    "qlanth`Private`ns_", ",", "qlanth`Private`Iis_", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"qlanth`Private`overwrite", "=", 
                    RowBox[{"OptionValue", "[", "\"Overwrite\"", "]"}]}], ";", 
                    RowBox[{"qlanth`Private`fNames", "=", 
                    RowBox[{"Association", "[", "]"}]}], ";", 
                    RowBox[{"qlanth`Private`fileApp", "=", 
                    
                    RowBox[{"OptionValue", "[", "\"FilenameAppendix\"", 
                    "]"}]}], ";", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"qlanth`Private`CFdataFilename", "=", 
                    RowBox[{"FileNameJoin", "[", 
                    RowBox[{"{", 
                    RowBox[{"moduleDir", ",", "\"data\"", ",", 
                    RowBox[{"\"CrystalFieldTable_f\"", "<>", 
                    RowBox[{"ToString", "[", "qlanth`Private`numE", "]"}], 
                    "<>", "\".zip\""}]}], "}"}], "]"}]}], ";", 
                    RowBox[{"PrintTemporary", "[", 
                    
                    RowBox[{"\"Importing CrystalFieldTable from \"", ",", 
                    "qlanth`Private`CFdataFilename", ",", "\" ...\""}], "]"}],
                     ";", 
                    RowBox[{"qlanth`Private`CrystalFieldTable", "=", 
                    
                    RowBox[{"qlanth`Private`ImportMZip", "[", 
                    "qlanth`Private`CFdataFilename", "]"}]}], ";", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"PrintTemporary", "[", 
                    
                    RowBox[{"\"#------- numE = \"", ",", 
                    "qlanth`Private`numE", ",", "\" | I = \"", ",", 
                    "qlanth`Private`Ii", ",", "\" -------#\""}], "]"}], ";", 
                    RowBox[{"qlanth`Private`exportFname", "=", 
                    RowBox[{"JJBlockMatrixFileName", "[", 
                    
                    RowBox[{"qlanth`Private`numE", ",", "qlanth`Private`Ii", 
                    ",", 
                    
                    RowBox[{"\"FilenameAppendix\"", "\[Rule]", 
                    "qlanth`Private`fileApp"}]}], "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"qlanth`Private`fNames", "[", 
                    RowBox[{"{", 
                    RowBox[{"qlanth`Private`numE", ",", "qlanth`Private`Ii"}],
                     "}"}], "]"}], "=", "qlanth`Private`exportFname"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"FileExistsQ", "[", "qlanth`Private`exportFname", 
                    "]"}], "&&", 
                    RowBox[{"!", "qlanth`Private`overwrite"}]}], ",", 
                    RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"JJBlockMatrixTable", ",", 
                    "qlanth`Private`EnergyStatesTable", ",", 
                    "qlanth`Private`AllowedM"}], "}"}], "=", 
                    RowBox[{"TabulateJJBlockMatrixTable", "[", 
                    
                    RowBox[{"qlanth`Private`numE", ",", "qlanth`Private`Ii", 
                    ",", "qlanth`Private`CrystalFieldTable", ",", 
                    RowBox[{"\"Sparse\"", "\[Rule]", 
                    RowBox[{"OptionValue", "[", "\"Sparse\"", "]"}]}], ",", 
                    RowBox[{"\"ChenDeltas\"", "\[Rule]", 
                    RowBox[{"OptionValue", "[", "\"ChenDeltas\"", "]"}]}]}], 
                    "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"FileExistsQ", "[", "qlanth`Private`exportFname", 
                    "]"}], "&&", "qlanth`Private`overwrite"}], ",", 
                    
                    RowBox[{"DeleteFile", "[", "qlanth`Private`exportFname", 
                    "]"}]}], "]"}], ";", 
                    RowBox[{"Save", "[", 
                    RowBox[{"qlanth`Private`exportFname", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"JJBlockMatrixTable", ",", 
                    "qlanth`Private`EnergyStatesTable", ",", 
                    "qlanth`Private`AllowedM"}], "}"}]}], "]"}], ";"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"qlanth`Private`Ii", ",", "qlanth`Private`Iis"}], 
                    "}"}]}], "]"}], ";", 
                    
                    RowBox[{"ClearAll", "[", 
                    "qlanth`Private`CrystalFieldTable", "]"}], ";"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"qlanth`Private`numE", ",", "qlanth`Private`ns"}],
                     "}"}]}], "]"}], ";", 
                    RowBox[{"Return", "[", "qlanth`Private`fNames", "]"}], 
                    ";"}], ")"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"\<\"Overwrite\"\>", "\[Rule]", "False"}]},
                    {
                    RowBox[{"\<\"Sparse\"\>", "\[Rule]", "True"}]},
                    {
                    RowBox[{"\<\"ChenDeltas\"\>", "\[Rule]", "False"}]},
                    {
                    
                    RowBox[{"\<\"FilenameAppendix\"\>", 
                    "\[Rule]", "\<\"\"\>"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "4", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"\<\"Overwrite\"\>", "\[Rule]", "False"}], 
                    "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "4", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], \
"\<\"qlanth`TabulateManyJJBlockMatrixTables\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"TabulateManyJJBlockMatrixTables[{n1, n2, ...}, {I1, \
I2, ...}] calculates the tables of matrix elements for the requested f^n_i \
configurations with the given nuclear spin I_i. The function does not return \
the matrices themselves. It instead returns an association whose keys are \
lists of the form {n, I} and whose values are the filenames where the output \
of TabulateJJBlockMatrixTables was saved to. When these files are loaded with \
Get, the following three symbols are thus defined: JJBlockMatrixTable, \
EnergyStatesTable, and AllowedM.\\n  JJBlockMatrixTable is an association \
whose keys are of the form {n, J, Jp, Ii, Ii} and whose values are matrix \
elements.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "TabulateManyJJBlockMatrixTables[{n1, n2, ...}, {I1, I2, ...}] calculates \
the tables of matrix elements for the requested f^n_i configurations with the \
given nuclear spin I_i. The function does not return the matrices themselves. \
It instead returns an association whose keys are lists of the form {n, I} and \
whose values are the filenames where the output of \
TabulateJJBlockMatrixTables was saved to. When these files are loaded with \
Get, the following three symbols are thus defined: JJBlockMatrixTable, \
EnergyStatesTable, and AllowedM.\n  JJBlockMatrixTable is an association \
whose keys are of the form {n, J, Jp, Ii, Ii} and whose values are matrix \
elements.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, qlanth`TabulateManyJJBlockMatrixTables, {
      qlanth`TabulateManyJJBlockMatrixTables[
         Pattern[qlanth`Private`ns, 
          Blank[]], 
         Pattern[qlanth`Private`Iis, 
          Blank[]], 
         OptionsPattern[]] :> (
        qlanth`Private`overwrite = OptionValue["Overwrite"]; 
        qlanth`Private`fNames = <||>; 
        qlanth`Private`fileApp = OptionValue["FilenameAppendix"]; 
        Do[qlanth`Private`CFdataFilename = 
           FileNameJoin[{
             qlanth`moduleDir, "data", "CrystalFieldTable_f" <> 
              ToString[qlanth`Private`numE] <> ".zip"}]; 
          PrintTemporary[
           "Importing CrystalFieldTable from ", qlanth`Private`CFdataFilename,
             " ..."]; 
          qlanth`Private`CrystalFieldTable = 
           qlanth`Private`ImportMZip[qlanth`Private`CFdataFilename]; 
          Do[PrintTemporary[
             "#------- numE = ", qlanth`Private`numE, " | I = ", 
              qlanth`Private`Ii, " -------#"]; 
            qlanth`Private`exportFname = 
             qlanth`JJBlockMatrixFileName[
              qlanth`Private`numE, qlanth`Private`Ii, "FilenameAppendix" -> 
               qlanth`Private`fileApp]; 
            qlanth`Private`fNames[{qlanth`Private`numE, qlanth`Private`Ii}] = 
             qlanth`Private`exportFname; If[
              And[
               FileExistsQ[qlanth`Private`exportFname], 
               Not[qlanth`Private`overwrite]], 
              Continue[]]; {
              qlanth`JJBlockMatrixTable, qlanth`Private`EnergyStatesTable, 
               qlanth`Private`AllowedM} = 
             qlanth`TabulateJJBlockMatrixTable[
              qlanth`Private`numE, qlanth`Private`Ii, 
               qlanth`Private`CrystalFieldTable, "Sparse" -> 
               OptionValue["Sparse"], "ChenDeltas" -> 
               OptionValue["ChenDeltas"]]; If[
              And[
               FileExistsQ[qlanth`Private`exportFname], 
               qlanth`Private`overwrite], 
              DeleteFile[qlanth`Private`exportFname]]; 
            Save[qlanth`Private`exportFname, {
              qlanth`JJBlockMatrixTable, qlanth`Private`EnergyStatesTable, 
               qlanth`Private`AllowedM}]; Null, {
            qlanth`Private`Ii, qlanth`Private`Iis}]; 
          ClearAll[qlanth`Private`CrystalFieldTable]; Null, {
          qlanth`Private`numE, qlanth`Private`ns}]; 
        Return[qlanth`Private`fNames]; Null)}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {
     "Overwrite" -> False, "Sparse" -> True, "ChenDeltas" -> False, 
      "FilenameAppendix" -> ""}, "Attributes" -> {}, "FullName" -> 
    "qlanth`TabulateManyJJBlockMatrixTables"|>, False]]], "Output",
 CellChangeTimes->{
  3.873904145877635*^9, 3.875697444802656*^9, 3.875697516087777*^9, 
   3.879332487158946*^9, 3.879333086733549*^9, 3.879343366707439*^9, 
   3.879434772001047*^9, 3.884338826970337*^9, 3.89205389673109*^9, 
   3.89230600960336*^9, 3.9067280776260223`*^9, 3.90672864779088*^9, 
   3.914188821331874*^9, 3.914190114817093*^9, 3.9141908795493717`*^9, 
   3.914191127699278*^9, 3.914191337085896*^9, 3.914191374137095*^9, 
   3.9141915171828957`*^9, 3.914195355569181*^9, 3.9144149291503057`*^9, 
   3.91492664954255*^9, 3.914927814069437*^9, 3.915011617895249*^9, 
   3.915011713208353*^9, {3.915469308091572*^9, 3.915469318741729*^9}},
 CellLabel->"Out[9]=",ExpressionUUID->"91329fb1-9eca-4442-acc2-022c0a8f956a"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"doThese", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}],
     "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TabulateManyJJBlockMatrixTables", "[", "\[IndentingNewLine]", 
   RowBox[{"doThese", ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<Overwrite\>\"", "->", "True"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<Sparse\>\"", "->", "True"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<ChenDeltas\>\"", "->", "True"}]}], "\[IndentingNewLine]", 
   "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.914415167394353*^9, 3.9144151736446257`*^9}, 
   3.9144248806074*^9, {3.914424932918448*^9, 3.914424933287858*^9}, {
   3.914425829252626*^9, 3.914425829316082*^9}, {3.914426344734047*^9, 
   3.91442634537435*^9}, 3.914432380266061*^9, {3.914432646521472*^9, 
   3.9144326484282837`*^9}, 3.914597088577465*^9, {3.914597644484715*^9, 
   3.914597646149692*^9}, {3.914939927291972*^9, 3.914939927447847*^9}, {
   3.914940404947938*^9, 3.914940406301906*^9}, {3.915011642011705*^9, 
   3.915011645173723*^9}, {3.91501208036425*^9, 3.915012090910236*^9}, {
   3.915012144941284*^9, 3.915012146120387*^9}, {3.9150122137336397`*^9, 
   3.915012214310672*^9}, {3.915396622915797*^9, 3.9153966659288054`*^9}, 
   3.915469322039455*^9, {3.915531792045342*^9, 3.915531792356843*^9}, {
   3.9155325916535997`*^9, 3.915532592173555*^9}, {3.915534173103706*^9, 
   3.915534174795642*^9}, {3.915566909430855*^9, 3.915566910027603*^9}, {
   3.915567522856555*^9, 
   3.915567524919497*^9}},ExpressionUUID->"a9e26d40-488e-4c1f-9208-\
a7d7f0787290"]
}, Open  ]]
},
WindowSize->{864, 1057},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
TaggingRules-><|"TryRealOnly" -> False|>,
CellEpilog:>SelectionMove[
  EvaluationNotebook[], Next, Cell],
SpellingDictionaries->{"CorrectWords"->{
 "Sugano", "Kurvits", "Tanabe", "Dq", "Undoped", "Nielson", "Koster", "numpy",
   "mrays", "Velkov", "qlanth", "Carnall", "Wybourne", "Crosswhite", 
  "Gruber"}},
FrontEndVersion->"13.2 for Mac OS X ARM (64-bit) (January 30, 2023)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"77e6bb94-2926-4014-bb5f-43edbd668f7c"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 330, 4, 97, "Title",ExpressionUUID->"f3dab00c-756e-4b1f-9a29-d532363347ff"],
Cell[913, 28, 1522, 28, 310, "Text",ExpressionUUID->"47503aaa-7b50-458a-bffb-5f91a3d860bc"],
Cell[2438, 58, 1271, 26, 126, "Input",ExpressionUUID->"2539f139-b8a7-430c-b1c8-4ad556ecc2d0",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[3734, 88, 266, 4, 41, "Input",ExpressionUUID->"5826bdff-cd17-4a32-9677-5e983098066e"],
Cell[4003, 94, 24493, 534, 222, "Output",ExpressionUUID->"91329fb1-9eca-4442-acc2-022c0a8f956a"]
}, Open  ]],
Cell[28511, 631, 1639, 28, 168, "Input",ExpressionUUID->"a9e26d40-488e-4c1f-9208-a7d7f0787290"]
}, Open  ]]
}
]
*)

