(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    234745,       4656]
NotebookOptionsPosition[    228906,       4569]
NotebookOutlinePosition[    229414,       4587]
CellTagsIndexPosition[    229371,       4584]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["The Lanthanides in Crystals", "Title",
 CellChangeTimes->{{3.898266835170755*^9, 3.89826683893224*^9}, {
  3.9067326832849813`*^9, 3.9067326844356003`*^9}, {3.915568713171242*^9, 
  3.915568714838993*^9}, {3.925653417370037*^9, 3.92565342217798*^9}, {
  3.9256550513971*^9, 3.925655052530312*^9}},
 TextAlignment->Center,ExpressionUUID->"00f00290-b5c1-4b84-8e96-c39f696e39a9"],

Cell[TextData[{
 "This notebook uses ",
 StyleBox["qlanth",
  FontWeight->"Bold"],
 " to calculate the energies and eigenstates for the trivalent lanthanide \
ions in a crystal host given values for the parameters of the effective \
Hamiltonian.\nFor each of the trivalent lanthanide ions a summary notebook is \
produced with the resulting data.\nIt also calculates magnetic dipole \
transition rates, and oscillator strengths, with accompanying notebooks and \
datasets.\n\nFor this notebook to run it is required that the following files \
be present in the ./hams/ folder:\nf{i}_JJBlockMatrixTable.[zip or .m], with \
i from 1 to 7,\nf[i]_JJBlockMatrixTable-magDip.[zip or .m], with i from 1 to \
7.\nThese are used in the assembly of the symbolic Hamiltonians used for the \
calculation."
}], "Text",
 CellChangeTimes->{{3.91392280701929*^9, 3.91392287618404*^9}, {
  3.9139229846715384`*^9, 3.913923039940261*^9}, {3.915572052025361*^9, 
  3.915572058705449*^9}, {3.915572092556159*^9, 3.9155721797826023`*^9}, {
  3.916491032737395*^9, 3.91649113670854*^9}, {3.92530633342305*^9, 
  3.925306339972967*^9}, {3.925636113219236*^9, 3.925636142802696*^9}, {
  3.9256528518620367`*^9, 3.92565285337786*^9}, {3.925655112960273*^9, 
  3.925655187459956*^9}},ExpressionUUID->"6f4b03bf-0801-4441-a693-\
47caedf36bf8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"$Path", ",", 
    RowBox[{"NotebookDirectory", "[", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Get", "[", "\"\<qalculations.m\>\"", "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.866625158893896*^9, 3.8666251699518127`*^9}, {
   3.86662565468071*^9, 3.866625655065934*^9}, {3.867925727834807*^9, 
   3.867925730467511*^9}, {3.878673720338455*^9, 3.878673721191774*^9}, 
   3.87867383810907*^9, 3.878675191901079*^9, 3.8786752835763073`*^9, 
   3.8787416478732557`*^9, {3.8799526959199963`*^9, 3.8799526960770903`*^9}, {
   3.892029582337204*^9, 3.8920295889408827`*^9}, {3.892552302793804*^9, 
   3.892552311308173*^9}, 3.8980141354678907`*^9, {3.9067315724329166`*^9, 
   3.9067315771116*^9}, {3.906737163164578*^9, 3.906737180324413*^9}, {
   3.907148130442646*^9, 3.907148134308312*^9}, 3.90714846878405*^9, 
   3.907149140625223*^9, 3.907149414202983*^9, 3.907150282200398*^9, {
   3.907162161604006*^9, 3.9071621850910683`*^9}, {3.907163063295448*^9, 
   3.907163077830838*^9}, {3.907232611133048*^9, 3.907232615404682*^9}, {
   3.913904577428018*^9, 3.913904587014327*^9}, {3.9139227635544786`*^9, 
   3.913922773989802*^9}, {3.913989554668012*^9, 3.913989556694536*^9}, {
   3.913994031987499*^9, 3.9139940334434*^9}, {3.914058969906992*^9, 
   3.914058974522495*^9}, {3.914099337581326*^9, 3.914099337628407*^9}, {
   3.9141008744267883`*^9, 3.9141008746196938`*^9}, {3.914100949190683*^9, 
   3.914100949436841*^9}, {3.9141021288491917`*^9, 3.914102129131316*^9}, {
   3.9141033705312023`*^9, 3.914103371240086*^9}, 3.914187077907639*^9, {
   3.914187284585255*^9, 3.914187284761961*^9}, {3.9141873834442787`*^9, 
   3.914187383783565*^9}, {3.914194073244761*^9, 3.914194074209165*^9}, {
   3.914227156282392*^9, 3.914227172118672*^9}, {3.9142545767321157`*^9, 
   3.914254578273937*^9}, {3.914255569461224*^9, 3.914255570061871*^9}, 
   3.914255613413218*^9, 3.914260304927865*^9, {3.914260527891437*^9, 
   3.914260529210451*^9}, 3.91442502281334*^9, {3.914425931657982*^9, 
   3.914425931930481*^9}, {3.914428078235532*^9, 3.9144280793356867`*^9}, {
   3.9144282426211853`*^9, 3.914428243929249*^9}, 3.91443242876323*^9, {
   3.914433986219117*^9, 3.9144339874124804`*^9}, 3.91459719844436*^9, {
   3.9145988223078213`*^9, 3.91459882337401*^9}, 3.914933082827853*^9, {
   3.914937239592571*^9, 3.914937240482049*^9}, 3.91494009575135*^9, {
   3.914950700132609*^9, 3.914950726677018*^9}, 3.915011851671408*^9, {
   3.915014076803012*^9, 3.915014077909352*^9}, 3.915044639163522*^9, 
   3.915046933598634*^9, 3.9153812766157293`*^9, {3.915568747174884*^9, 
   3.915568747542044*^9}, {3.915568992234049*^9, 3.915568992879759*^9}, {
   3.915570550086401*^9, 3.915570552733313*^9}, {3.9163329468458357`*^9, 
   3.916332955115675*^9}, 3.916491158493482*^9, 3.92564086144345*^9, 
   3.9256491233805857`*^9, 3.9292986419289093`*^9, {3.932731838671031*^9, 
   3.9327318480944633`*^9}, {3.932733611437463*^9, 3.93273361159673*^9}},
 CellLabel->
  "In[560]:=",ExpressionUUID->"aba5db8f-5736-4934-8ff0-47055ae7454f"],

Cell[TextData[{
 "The following loop calculates the symbolic Hamiltonians that may be used to \
calculate the results for the entire lanthanide row.  It is not necessary to \
run, and it may take a few minutes (if writing them anew), but it makes \
subsequent calculations run faster.\nEven when going across all the \
lanthanide row it is sufficient to pre-calculate the symbolic matrices up to ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["f", "7"], TraditionalForm]],ExpressionUUID->
  "09fd4b06-234a-4ba7-99b5-53a114c1ec83"],
 "."
}], "Text",
 CellChangeTimes->{{3.91556924245973*^9, 3.915569332937456*^9}, {
   3.915570624735506*^9, 3.915570649766789*^9}, {3.915571019930482*^9, 
   3.915571052232654*^9}, {3.915571227607321*^9, 3.915571261522875*^9}, {
   3.9164911728190823`*^9, 3.916491175797117*^9}, 3.925306352030136*^9, {
   3.925636176925202*^9, 3.925636180458201*^9}, {3.925653465957073*^9, 
   3.925653516547456*^9}, {3.925655254132268*^9, 
   3.92565531511443*^9}},ExpressionUUID->"7c8637bf-2097-4226-b6c5-\
cbdaca9d43d9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"NOTE", ":", " ", 
     RowBox[{
     "The", " ", "option", " ", "\"\<Overwrite\>\"", " ", "set", " ", "to", 
      " ", "False", " ", "on", " ", "the", " ", "SimplerSymbolicHamMatrix", 
      " ", "can", " ", "be", " ", "use", " ", "to", " ", "reload", " ", 
      "previously", " ", "calculated", " ", 
      RowBox[{"arrays", ".", " ", "Set"}], " ", "this", " ", "to", " ", 
      "False", " ", "if", " ", "they", " ", "have", " ", "already", " ", 
      "been", " ", "calculated"}]}], ",", " ", 
    RowBox[{
    "and", " ", "set", " ", "it", " ", "to", " ", "True", " ", "if", " ", 
     "calculating", " ", "them", " ", "from", " ", "scratch", " ", "or", " ", 
     "wanting", " ", "to", " ", "recalculate", " ", 
     RowBox[{"them", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"symGroup", ",", "symmetrySimplifier"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"\"\<C2v\>\"", ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"B12", "->", "0"}], ",", 
         RowBox[{"B14", "->", "0"}], ",", 
         RowBox[{"B16", "->", "0"}], ",", 
         RowBox[{"B34", "->", "0"}], ",", 
         RowBox[{"B36", "->", "0"}], ",", 
         RowBox[{"B56", "->", "0"}], ",", "\[IndentingNewLine]", 
         RowBox[{"S12", "->", "0"}], ",", 
         RowBox[{"S14", "->", "0"}], ",", 
         RowBox[{"S16", "->", "0"}], ",", 
         RowBox[{"S22", "->", "0"}], ",", 
         RowBox[{"S24", "->", "0"}], ",", 
         RowBox[{"S26", "->", "0"}], ",", 
         RowBox[{"S34", "->", "0"}], ",", 
         RowBox[{"S36", "->", "0"}], ",", "\[IndentingNewLine]", 
         RowBox[{"S44", "->", "0"}], ",", 
         RowBox[{"S46", "->", "0"}], ",", 
         RowBox[{"S56", "->", "0"}], ",", 
         RowBox[{"S66", "->", "0"}], ",", 
         RowBox[{"T11p", "->", "0"}], ",", 
         RowBox[{"T12", "->", "0"}], ",", 
         RowBox[{"T14", "->", "0"}], ",", 
         RowBox[{"T15", "->", "0"}], ",", "\[IndentingNewLine]", 
         RowBox[{"T16", "->", "0"}], ",", 
         RowBox[{"T18", "->", "0"}], ",", 
         RowBox[{"T17", "->", "0"}], ",", 
         RowBox[{"T19", "->", "0"}]}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"symbolicHamiltonians", "[", 
         RowBox[{"{", 
          RowBox[{"symGroup", ",", "numE"}], "}"}], "]"}], "=", 
        RowBox[{"SimplerSymbolicHamMatrix", "[", 
         RowBox[{
         "numE", ",", "\[IndentingNewLine]", "symmetrySimplifier", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"\"\<PrependToFilename\>\"", "->", 
           RowBox[{"symGroup", "<>", "\"\<-\>\""}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"\"\<Overwrite\>\"", "->", "False"}]}], "]"}]}], ";"}], 
      "\[IndentingNewLine]", ")"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"numE", ",", 
       RowBox[{"{", 
        RowBox[{
        "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}], 
        "}"}]}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.915568833769787*^9, 3.915568883815379*^9}, {
   3.915568965420673*^9, 3.915568966305799*^9}, {3.915569008597183*^9, 
   3.915569015027413*^9}, {3.915569189741917*^9, 3.915569209713108*^9}, {
   3.91556933632765*^9, 3.91556939891501*^9}, {3.915569784415702*^9, 
   3.915569786285749*^9}, {3.915569872698429*^9, 3.915569877426278*^9}, {
   3.915569914122233*^9, 3.915569957290882*^9}, {3.915570346358368*^9, 
   3.915570369760474*^9}, {3.915570622048781*^9, 3.915570622063009*^9}, {
   3.91557065637952*^9, 3.915570656887537*^9}, {3.915571160543169*^9, 
   3.915571164118162*^9}, 3.915571314821763*^9, 3.915571533291359*^9, 
   3.916489773457073*^9, 3.9164898042361937`*^9, {3.916491178936494*^9, 
   3.916491250226365*^9}, 3.91649166336058*^9, {3.917448299620339*^9, 
   3.917448320038261*^9}, {3.918224108184453*^9, 3.918224108227585*^9}, {
   3.918225375383097*^9, 3.918225419065067*^9}, {3.918225449482834*^9, 
   3.9182254505649443`*^9}, {3.918225663940126*^9, 3.918225678731412*^9}, {
   3.9182299325046473`*^9, 3.918229933024783*^9}, {3.91824990673057*^9, 
   3.918249907282855*^9}, {3.920815534879229*^9, 3.920815552841555*^9}, {
   3.920820900632121*^9, 3.920820905998036*^9}, {3.920892639511299*^9, 
   3.920892639569864*^9}, {3.920893155727662*^9, 3.920893158535832*^9}, {
   3.920893273786331*^9, 3.920893274602573*^9}, {3.9208937436630177`*^9, 
   3.920893743774774*^9}, {3.920970527023679*^9, 3.920970552560155*^9}, {
   3.920970797049185*^9, 3.9209707980136213`*^9}, {3.920970863070496*^9, 
   3.920970863535767*^9}, {3.920971219094078*^9, 3.920971220184168*^9}, {
   3.9209732901656857`*^9, 3.920973292544057*^9}, {3.923810708519205*^9, 
   3.92381070897444*^9}, {3.923811438071105*^9, 3.9238114385163403`*^9}, {
   3.9242582314678*^9, 3.9242582368297873`*^9}, 3.924692406068534*^9, {
   3.92529659110439*^9, 3.925296591502709*^9}, {3.925297164299129*^9, 
   3.925297164976882*^9}, {3.925306379199368*^9, 3.925306390587694*^9}, {
   3.925568939830893*^9, 3.925568951999113*^9}, {3.925640877493692*^9, 
   3.925640878453389*^9}, {3.925641132954035*^9, 3.925641189663969*^9}, {
   3.925642285502726*^9, 3.925642306779675*^9}, {3.925653533020241*^9, 
   3.9256535674852858`*^9}, {3.9256547117327023`*^9, 3.925654719564352*^9}, {
   3.9327336223830147`*^9, 3.932733626093094*^9}, 3.9327336728780413`*^9, {
   3.932734910601856*^9, 3.9327349123127937`*^9}},
 CellLabel->
  "In[508]:=",ExpressionUUID->"47a22e19-55fa-4988-b8dc-e9ee4ce2bc08"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"File \"\>", 
   "\[InvisibleSpace]", \
"\<\"/Users/juan/ZiaLab/Codebase/qlanth/hams/C2v-SymbolicMatrix-f1.mx\"\>", 
   "\[InvisibleSpace]", "\<\" already exists, and option \\\"Overwrite\\\" is \
set to False, loading file ...\"\>"}],
  SequenceForm[
  "File ", "/Users/juan/ZiaLab/Codebase/qlanth/hams/C2v-SymbolicMatrix-f1.mx",
    " already exists, and option \"Overwrite\" is set to False, loading file \
..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9256553527232*^9, 3.925655703934691*^9, 
  3.9259065368510838`*^9, 3.925913623931028*^9, 3.925913815594409*^9, 
  3.925916410780182*^9, 3.9259164630697536`*^9, 3.9283451490151854`*^9, 
  3.92866307551548*^9, 3.9292153575079613`*^9, 3.92929647820019*^9, 
  3.9294418244664583`*^9, 3.932727716215123*^9, 3.9327288582749443`*^9, 
  3.932731852546077*^9, 3.932733631810831*^9, 3.9327336792735853`*^9, 
  3.932734713005126*^9, 3.932734919636097*^9, 3.932735350933619*^9, 
  3.9327371260962067`*^9, 3.932751336054655*^9, 3.932752063363707*^9, 
  3.932757249304216*^9},
 CellLabel->
  "During evaluation of \
In[508]:=",ExpressionUUID->"8bcadc66-ef90-4db9-bb47-c7e427969d8e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"File \"\>", 
   "\[InvisibleSpace]", \
"\<\"/Users/juan/ZiaLab/Codebase/qlanth/hams/C2v-SymbolicMatrix-f2.mx\"\>", 
   "\[InvisibleSpace]", "\<\" already exists, and option \\\"Overwrite\\\" is \
set to False, loading file ...\"\>"}],
  SequenceForm[
  "File ", "/Users/juan/ZiaLab/Codebase/qlanth/hams/C2v-SymbolicMatrix-f2.mx",
    " already exists, and option \"Overwrite\" is set to False, loading file \
..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9256553527232*^9, 3.925655703934691*^9, 
  3.9259065368510838`*^9, 3.925913623931028*^9, 3.925913815594409*^9, 
  3.925916410780182*^9, 3.9259164630697536`*^9, 3.9283451490151854`*^9, 
  3.92866307551548*^9, 3.9292153575079613`*^9, 3.92929647820019*^9, 
  3.9294418244664583`*^9, 3.932727716215123*^9, 3.9327288582749443`*^9, 
  3.932731852546077*^9, 3.932733631810831*^9, 3.9327336792735853`*^9, 
  3.932734713005126*^9, 3.932734919636097*^9, 3.932735350933619*^9, 
  3.9327371260962067`*^9, 3.932751336054655*^9, 3.932752063363707*^9, 
  3.932757249346479*^9},
 CellLabel->
  "During evaluation of \
In[508]:=",ExpressionUUID->"6a1823ad-6e4d-4791-ad56-46c99fab97ee"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"File \"\>", 
   "\[InvisibleSpace]", \
"\<\"/Users/juan/ZiaLab/Codebase/qlanth/hams/C2v-SymbolicMatrix-f3.mx\"\>", 
   "\[InvisibleSpace]", "\<\" already exists, and option \\\"Overwrite\\\" is \
set to False, loading file ...\"\>"}],
  SequenceForm[
  "File ", "/Users/juan/ZiaLab/Codebase/qlanth/hams/C2v-SymbolicMatrix-f3.mx",
    " already exists, and option \"Overwrite\" is set to False, loading file \
..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9256553527232*^9, 3.925655703934691*^9, 
  3.9259065368510838`*^9, 3.925913623931028*^9, 3.925913815594409*^9, 
  3.925916410780182*^9, 3.9259164630697536`*^9, 3.9283451490151854`*^9, 
  3.92866307551548*^9, 3.9292153575079613`*^9, 3.92929647820019*^9, 
  3.9294418244664583`*^9, 3.932727716215123*^9, 3.9327288582749443`*^9, 
  3.932731852546077*^9, 3.932733631810831*^9, 3.9327336792735853`*^9, 
  3.932734713005126*^9, 3.932734919636097*^9, 3.932735350933619*^9, 
  3.9327371260962067`*^9, 3.932751336054655*^9, 3.932752063363707*^9, 
  3.9327572493812637`*^9},
 CellLabel->
  "During evaluation of \
In[508]:=",ExpressionUUID->"f398aef7-4163-4f31-b344-829af4fae4ac"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"File \"\>", 
   "\[InvisibleSpace]", \
"\<\"/Users/juan/ZiaLab/Codebase/qlanth/hams/C2v-SymbolicMatrix-f4.mx\"\>", 
   "\[InvisibleSpace]", "\<\" already exists, and option \\\"Overwrite\\\" is \
set to False, loading file ...\"\>"}],
  SequenceForm[
  "File ", "/Users/juan/ZiaLab/Codebase/qlanth/hams/C2v-SymbolicMatrix-f4.mx",
    " already exists, and option \"Overwrite\" is set to False, loading file \
..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9256553527232*^9, 3.925655703934691*^9, 
  3.9259065368510838`*^9, 3.925913623931028*^9, 3.925913815594409*^9, 
  3.925916410780182*^9, 3.9259164630697536`*^9, 3.9283451490151854`*^9, 
  3.92866307551548*^9, 3.9292153575079613`*^9, 3.92929647820019*^9, 
  3.9294418244664583`*^9, 3.932727716215123*^9, 3.9327288582749443`*^9, 
  3.932731852546077*^9, 3.932733631810831*^9, 3.9327336792735853`*^9, 
  3.932734713005126*^9, 3.932734919636097*^9, 3.932735350933619*^9, 
  3.9327371260962067`*^9, 3.932751336054655*^9, 3.932752063363707*^9, 
  3.932757249411762*^9},
 CellLabel->
  "During evaluation of \
In[508]:=",ExpressionUUID->"57000e10-d658-4190-8fae-6b0a5dd775e0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"File \"\>", 
   "\[InvisibleSpace]", \
"\<\"/Users/juan/ZiaLab/Codebase/qlanth/hams/C2v-SymbolicMatrix-f5.mx\"\>", 
   "\[InvisibleSpace]", "\<\" already exists, and option \\\"Overwrite\\\" is \
set to False, loading file ...\"\>"}],
  SequenceForm[
  "File ", "/Users/juan/ZiaLab/Codebase/qlanth/hams/C2v-SymbolicMatrix-f5.mx",
    " already exists, and option \"Overwrite\" is set to False, loading file \
..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9256553527232*^9, 3.925655703934691*^9, 
  3.9259065368510838`*^9, 3.925913623931028*^9, 3.925913815594409*^9, 
  3.925916410780182*^9, 3.9259164630697536`*^9, 3.9283451490151854`*^9, 
  3.92866307551548*^9, 3.9292153575079613`*^9, 3.92929647820019*^9, 
  3.9294418244664583`*^9, 3.932727716215123*^9, 3.9327288582749443`*^9, 
  3.932731852546077*^9, 3.932733631810831*^9, 3.9327336792735853`*^9, 
  3.932734713005126*^9, 3.932734919636097*^9, 3.932735350933619*^9, 
  3.9327371260962067`*^9, 3.932751336054655*^9, 3.932752063363707*^9, 
  3.9327572494429693`*^9},
 CellLabel->
  "During evaluation of \
In[508]:=",ExpressionUUID->"214cae93-c580-43b5-97a3-35b35bb9e6bf"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"File \"\>", 
   "\[InvisibleSpace]", \
"\<\"/Users/juan/ZiaLab/Codebase/qlanth/hams/C2v-SymbolicMatrix-f6.mx\"\>", 
   "\[InvisibleSpace]", "\<\" already exists, and option \\\"Overwrite\\\" is \
set to False, loading file ...\"\>"}],
  SequenceForm[
  "File ", "/Users/juan/ZiaLab/Codebase/qlanth/hams/C2v-SymbolicMatrix-f6.mx",
    " already exists, and option \"Overwrite\" is set to False, loading file \
..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9256553527232*^9, 3.925655703934691*^9, 
  3.9259065368510838`*^9, 3.925913623931028*^9, 3.925913815594409*^9, 
  3.925916410780182*^9, 3.9259164630697536`*^9, 3.9283451490151854`*^9, 
  3.92866307551548*^9, 3.9292153575079613`*^9, 3.92929647820019*^9, 
  3.9294418244664583`*^9, 3.932727716215123*^9, 3.9327288582749443`*^9, 
  3.932731852546077*^9, 3.932733631810831*^9, 3.9327336792735853`*^9, 
  3.932734713005126*^9, 3.932734919636097*^9, 3.932735350933619*^9, 
  3.9327371260962067`*^9, 3.932751336054655*^9, 3.932752063363707*^9, 
  3.93275724975006*^9},
 CellLabel->
  "During evaluation of \
In[508]:=",ExpressionUUID->"b051ce77-8280-476a-9eff-1a033d18fc36"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"File \"\>", 
   "\[InvisibleSpace]", \
"\<\"/Users/juan/ZiaLab/Codebase/qlanth/hams/C2v-SymbolicMatrix-f7.mx\"\>", 
   "\[InvisibleSpace]", "\<\" already exists, and option \\\"Overwrite\\\" is \
set to False, loading file ...\"\>"}],
  SequenceForm[
  "File ", "/Users/juan/ZiaLab/Codebase/qlanth/hams/C2v-SymbolicMatrix-f7.mx",
    " already exists, and option \"Overwrite\" is set to False, loading file \
..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9256553527232*^9, 3.925655703934691*^9, 
  3.9259065368510838`*^9, 3.925913623931028*^9, 3.925913815594409*^9, 
  3.925916410780182*^9, 3.9259164630697536`*^9, 3.9283451490151854`*^9, 
  3.92866307551548*^9, 3.9292153575079613`*^9, 3.92929647820019*^9, 
  3.9294418244664583`*^9, 3.932727716215123*^9, 3.9327288582749443`*^9, 
  3.932731852546077*^9, 3.932733631810831*^9, 3.9327336792735853`*^9, 
  3.932734713005126*^9, 3.932734919636097*^9, 3.932735350933619*^9, 
  3.9327371260962067`*^9, 3.932751336054655*^9, 3.932752063363707*^9, 
  3.932757250528273*^9},
 CellLabel->
  "During evaluation of \
In[508]:=",ExpressionUUID->"4fca7ae1-eb7c-4fd6-b84a-164d1650f8ad"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Level Structure Calculation", "Section",
 CellChangeTimes->{{3.9163328937833753`*^9, 3.916332909355706*^9}, {
  3.921164408227374*^9, 3.921164410054811*^9}, {3.9256362446284533`*^9, 
  3.925636249089231*^9}, {3.9256535747017527`*^9, 
  3.9256535784216022`*^9}},ExpressionUUID->"7963ed42-f029-4505-83e7-\
13c18f17b65d"],

Cell["\<\
The following loop loads the fitted parameters for the lanthanide ions from \
cerium to ytterbium using the values stored in a given folder and calculates \
the corresponding level structure.
The option includeSpinSpin allows including or excluding the spin-spin \
contribution to the terms with the Marvin integral parameters. To our best \
knowledge this factor was excluded from the actual calculations, although a \
literal reading of the article implies that it was indeed kept.
The option \[OpenCurlyDoubleQuote]Remove Kramers\[CloseCurlyDoubleQuote] \
allows controlling the removal or inclusion of Kramer\[CloseCurlyQuote]s \
degenerate states in the case of odd number of electrons.
The option \[OpenCurlyDoubleQuote]Explorer\[CloseCurlyDoubleQuote] controls \
whether the level diagram will or will not be interactive.\
\>", "Text",
 CellChangeTimes->{{3.91556924245973*^9, 3.915569332937456*^9}, {
  3.915570624735506*^9, 3.915570649766789*^9}, {3.9155708369243317`*^9, 
  3.915570886591668*^9}, {3.915571519491918*^9, 3.915571526041131*^9}, {
  3.915572213582939*^9, 3.915572276672016*^9}, {3.916084818802042*^9, 
  3.916084818953146*^9}, {3.916087059327479*^9, 3.916087091720418*^9}, {
  3.916087856329015*^9, 3.916087871801641*^9}, {3.9164913480510077`*^9, 
  3.916491394052766*^9}, {3.918226431044892*^9, 3.9182264319015923`*^9}, {
  3.921164707908325*^9, 3.92116474986932*^9}, {3.925306430960587*^9, 
  3.925306431204274*^9}, {3.9256553629078007`*^9, 
  3.9256554169470987`*^9}},ExpressionUUID->"efd1cce1-1620-4904-bcba-\
794d53250035"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "FastIonSolver"}]], "Input",
 CellChangeTimes->{{3.925309860383407*^9, 3.9253098613781843`*^9}, 
   3.925640893252864*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"a755dbe0-936c-44ff-b0cc-0d1b97ecccd4"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FastIonSolver[params] calculates energy levels and \
eigenvectors for the given parameters describing a trivalent lanthanide. It \
can use precomputed symbolic matrices for the Hamiltonian if they have been \
loaded already and defined as symbols of the form \
symbolicHamiltonians[{symmetry, numE}].\\n\\nThe function returns a list with \
six elements {eigenEnergies, ln, simplerStateLabels, eigensys, basis, \
truncatedStates}. The elements of the list are as follows:\\n\\n1. \
eigenEnergies are the calculated energies (in the case of an odd number of \
electrons the Kramers degeneracy may have been removed from this list \
according to the option \\\"Remove Kramers\\\");\\n2. ln is simply a string \
labelling the corresponding lanthanide;\\n3. simplerStateLabels is a list of \
strings providing the multiplet assignments that this function assumes;\\n3. \
eigensys is a list of tuples where the first element is the energy \
corresponding to the eigenvector given as the second element (in the case of \
an odd number of electrons the Kramers degeneracy may have been removed from \
this list according to the option \\\"Remove Kramers\\\");\\n5. basis is a \
list that specifies the basis in which the Hamiltonian was constructed and \
diagonalized, equal to BasisLSJMJ[numE];\\n6. truncatedStates is the same as \
eigensys but with the truncated eigenvectors so that the total probability \
adds up to at least eigenstateTruncationProbability (determined by the option \
\\\"eigenstateTruncationProbability\\\").\\n\\nThis function admits the \
following options:\\n  - \\\"MakeNotebook\\\" -> True or False. If True, a \
notebook with a summary of the data is created. Default is True.\\n  - \
\\\"NotebookSave\\\" -> True or False. If True, the results notebook is saved \
automatically. Default is True.\\n  - \\\"eigenstateTruncationProbability\\\" \
-> 0.9. The probability sum of the truncated eigenvectors. Default is 0.9.\\n \
 - \\\"Max Eigenstates in Table\\\" -> 100. The maximum number of eigenstates \
to be shown in the table shown in the results notebook. Default is 100.\\n  - \
\\\"Sparse\\\" -> True or False. If True, the numerical Hamiltonian is kept \
in sparse form. Default is True.\\n  - \\\"PrintFun\\\" -> Print, \
PrintTemporary, or other to serve as a printer for progress messages. Default \
is Print.\\n  - \\\"SaveData\\\" -> True or False. If True, the resulting \
data is saved to disk. Default is True.\\n  - \\\"Append to Filename\\\" -> \
\\\"\\\". A string to append to the filename of the saved notebook and data \
files. Default is \\\"\\\".\\n  - \\\"Remove Kramers\\\" -> True or False. If \
True, the Kramers degeneracy is removed from the eigenstates for odd electron \
cases. Default is True.\\n  - \\\"OutputDirectory\\\" -> \\\"calcs\\\". The \
directory where the output files are saved. Default is \\\"calcs\\\", may be \
a folder not yet created.\\n  - \\\"Explorer\\\" -> True or False. If True, \
the energy level diagram is interactive. Default is False.\\n  - \\\"Host\\\" \
-> \\\"crystalHost\\\". The host material. Default is \\\"LaF3\\\".\\n  - \
\\\"SymmetrySimplifier\\\" a list of two elements, the first one being the \
name of the assumed symmetry for the crystal field and the second being a \
list of replacement rules applied to simplify the Hamiltonian used to make \
calculations. Default is {\\\"C2v\\\", {B12 -> 0, ...}}\\n\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"FastIonSolver", "[", 
                    RowBox[{"params0_", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"params", "=", 
                    RowBox[{"Association", "[", "params0", "]"}]}], ",", 
                    "paramKeys", ",", "numE", ",", "PrintFun", ",", 
                    "makeNotebook", ",", "eigenstateTruncationProbability", 
                    ",", "maxStatesInTable", ",", "Duplicator", ",", "host", 
                    ",", "ln", ",", "terms", ",", "termNames", ",", 
                    "termSimplifier", ",", "startTime", ",", "numH", ",", 
                    "numEH", ",", "simpleHam", ",", "endTime", ",", 
                    "loadTime", ",", "numHam", ",", "basis", ",", "eigensys", 
                    ",", "eigenEnergies", ",", "titleTemplate", ",", "title", 
                    ",", "parsedStates", ",", "stateLabels", ",", 
                    "simplerStateLabels", ",", "truncatedStates", ",", 
                    "truncationTime", ",", "energyDiagram", ",", "appToFname",
                     ",", "statesTable", ",", "DefaultIfMissing", ",", 
                    "diffTableData", ",", "diffTable", ",", "nb", ",", 
                    "exportFname", ",", "tinyexportFname", ",", "tinyExport", 
                    ",", "nbFname", ",", "uncertaintySentence", ",", 
                    "sigmaRMS", ",", "energyUncertaintyTemplate", ",", 
                    "onlyEnergies", ",", "originalParams", ",", "epiThings"}],
                     "}"}], ",", 
                    RowBox[{
                    RowBox[{"paramKeys", "=", 
                    RowBox[{"Keys", "[", "params", "]"}]}], ";", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"paramKeys", ",", "nE"}], "]"}], ",", 
                    RowBox[{"numE", "=", 
                    RowBox[{"params", "[", "nE", "]"}]}], ",", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"paramKeys", ",", "\"nE\""}], "]"}], ",", 
                    RowBox[{"numE", "=", 
                    RowBox[{"params", "[", "\"nE\"", "]"}]}], ",", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"paramKeys", ",", "\"numE\""}], "]"}], ",", 
                    RowBox[{"numE", "=", 
                    RowBox[{"params", "[", "\"numE\"", "]"}]}], ",", "True", 
                    ",", 
                    RowBox[{
                    
                    RowBox[{"Print", "[", 
                    "\"The number of electrons was not specified in params, \
exiting ...\"", "]"}], ";", 
                    RowBox[{"Return", "[", "Null", "]"}], ";"}]}], "]"}], ";", 
                    RowBox[{
                    RowBox[{"NiceSort", "[", "params_", "]"}], ":=", 
                    RowBox[{"Association", "[", 
                    RowBox[{"SortBy", "[", 
                    RowBox[{
                    RowBox[{"Normal", "[", "params", "]"}], ",", 
                    RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{"paramSymbols", ",", 
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], "&"}]}], "]"}], 
                    "]"}]}], ";", 
                    RowBox[{"energyUncertaintyTemplate", "=", 
                    
                    RowBox[{"StringTemplate", "[", 
                    "\"\\nWhen the Hamiltonian was fitted to experimental \
data, the root mean square deviation between the data and the calculated \
energies was `energySigma` cm^-1.\\nThe red points in the diagram above (if \
present) indicate the energies of the known experimental data.\"", "]"}]}], 
                    ";", 
                    RowBox[{"sigmaRMS", "=", 
                    
                    RowBox[{"OptionValue", "[", "\"Energy Uncertainty in K\"",
                     "]"}]}], ";", 
                    RowBox[{"uncertaintySentence", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"sigmaRMS", "===", "0.`"}], ",", "\"\"", ",", 
                    RowBox[{"energyUncertaintyTemplate", "[", 
                    RowBox[{"Association", "[", 
                    RowBox[{"\"energySigma\"", "\[Rule]", "sigmaRMS"}], "]"}],
                     "]"}]}], "]"}]}], ";", 
                    RowBox[{"PrintFun", "=", 
                    RowBox[{"OptionValue", "[", "\"PrintFun\"", "]"}]}], ";", 
                    
                    RowBox[{"makeNotebook", "=", 
                    RowBox[{"OptionValue", "[", "\"MakeNotebook\"", "]"}]}], 
                    ";", 
                    RowBox[{"onlyEnergies", "=", 
                    RowBox[{"OptionValue", "[", "\"EnergiesOnly\"", "]"}]}], 
                    ";", 
                    RowBox[{"eigenstateTruncationProbability", "=", 
                    
                    RowBox[{"OptionValue", "[", 
                    "\"eigenstateTruncationProbability\"", "]"}]}], ";", 
                    RowBox[{"maxStatesInTable", "=", 
                    
                    RowBox[{"OptionValue", "[", 
                    "\"Max Eigenstates in Table\"", "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"Duplicator", "[", "aList_", "]"}], ":=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"#1", ",", "#1"}], "}"}], "&"}], ")"}], "/@", 
                    "aList"}], "]"}]}], ";", 
                    RowBox[{"host", "=", 
                    RowBox[{"OptionValue", "[", "\"Host\"", "]"}]}], ";", 
                    RowBox[{"ln", "=", 
                    
                    RowBox[{"theLanthanides", "\[LeftDoubleBracket]", "numE", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"terms", "=", 
                    RowBox[{"AllowedNKSLJTerms", "[", 
                    RowBox[{"Min", "[", 
                    RowBox[{"numE", ",", 
                    RowBox[{"14", "-", "numE"}]}], "]"}], "]"}]}], ";", 
                    RowBox[{"termNames", "=", 
                    RowBox[{"First", "/@", "terms"}]}], ";", 
                    
                    RowBox[{"PrintFun", "[", 
                    "\"> Calculating simpler term labels ...\"", "]"}], ";", 
                    RowBox[{"termSimplifier", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"termN", "\[Rule]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringLength", "[", "termN", "]"}], "\[Equal]", 
                    "3"}], ",", 
                    RowBox[{"StringTake", "[", 
                    RowBox[{"termN", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}]}], "]"}], ",", "termN"}], 
                    "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"termN", ",", "termNames"}], "}"}]}], "]"}]}], 
                    ";", 
                    RowBox[{"originalParams", "=", 
                    RowBox[{"NiceSort", "[", "params", "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"numE", ">", "7"}], ",", 
                    RowBox[{
                    
                    RowBox[{"PrintFun", "[", 
                    "\"> Conjugating the parameters accounting for the \
hole-particle equivalence ...\"", "]"}], ";", 
                    RowBox[{"params", "=", 
                    RowBox[{"HoleElectronConjugation", "[", "params", "]"}]}],
                     ";", 
                    RowBox[{
                    RowBox[{"params", "[", "t2Switch", "]"}], "=", "0"}], 
                    ";"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"params", "[", "t2Switch", "]"}], "=", "1"}], 
                    ";"}]}], "]"}], ";", 
                    
                    RowBox[{"PrintFun", "[", 
                    "\"> Loading the symbolic Hamiltonian for this \
configuration ...\"", "]"}], ";", 
                    RowBox[{"startTime", "=", "Now"}], ";", 
                    RowBox[{"numH", "=", 
                    RowBox[{"14", "-", "numE"}]}], ";", 
                    RowBox[{"numEH", "=", 
                    RowBox[{"Min", "[", 
                    RowBox[{"numE", ",", "numH"}], "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"symGroup", ",", "symmetrySimplifier"}], "}"}], 
                    "=", 
                    
                    RowBox[{"OptionValue", "[", "\"SymmetrySimplifier\"", 
                    "]"}]}], ";", 
                    RowBox[{"simpleHam", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"ValueQ", "[", 
                    RowBox[{"symbolicHamiltonians", "[", 
                    RowBox[{"{", 
                    RowBox[{"symGroup", ",", "numEH"}], "}"}], "]"}], "]"}], 
                    ",", 
                    RowBox[{"symbolicHamiltonians", "[", 
                    RowBox[{"{", 
                    RowBox[{"symGroup", ",", "numEH"}], "}"}], "]"}], ",", 
                    RowBox[{"SimplerSymbolicHamMatrix", "[", 
                    RowBox[{"numE", ",", "symmetrySimplifier", ",", 
                    RowBox[{"\"PrependToFilename\"", "\[Rule]", 
                    RowBox[{"symGroup", "<>", "\"-\""}]}], ",", 
                    RowBox[{"\"Overwrite\"", "\[Rule]", "False"}]}], "]"}]}], 
                    "]"}]}], ";", 
                    RowBox[{"endTime", "=", "Now"}], ";", 
                    RowBox[{"loadTime", "=", 
                    RowBox[{"QuantityMagnitude", "[", 
                    RowBox[{
                    RowBox[{"endTime", "-", "startTime"}], ",", 
                    "\"Seconds\""}], "]"}]}], ";", 
                    RowBox[{"PrintFun", "[", 
                    
                    RowBox[{"\">> Loading the symbolic Hamiltonian took \"", 
                    ",", "loadTime", ",", "\" seconds.\""}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"paramKeys", ",", "\[Sigma]SS"}], "]"}]}], ",", 
                    RowBox[{
                    
                    RowBox[{"PrintFun", "[", 
                    "\"> params does not implicitly specify if the spin-spin \
contribution should be included. Including it by default ...\"", "]"}], ";", 
                    RowBox[{
                    RowBox[{"params", "[", "\[Sigma]SS", "]"}], "=", "1"}], 
                    ";"}]}], "]"}], ";", 
                    RowBox[{"params", "=", 
                    RowBox[{"ParamPad", "[", 
                    RowBox[{"params", ",", 
                    RowBox[{"\"PrintFun\"", "\[Rule]", "PrintFun"}]}], 
                    "]"}]}], ";", 
                    RowBox[{"PrintFun", "[", "params", "]"}], ";", 
                    RowBox[{"numHam", "=", 
                    RowBox[{"ReplaceInSparseArray", "[", 
                    RowBox[{"simpleHam", ",", "params"}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"OptionValue", "[", "\"Sparse\"", "]"}]}], ",", 
                    RowBox[{"numHam", "=", 
                    RowBox[{"Normal", "[", "numHam", "]"}]}]}], "]"}], ";", 
                    
                    RowBox[{"PrintFun", "[", 
                    "\"> Calculating the SLJ basis ...\"", "]"}], ";", 
                    RowBox[{"basis", "=", 
                    RowBox[{"BasisLSJMJ", "[", "numE", "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"onlyEnergies", ",", 
                    RowBox[{
                    
                    RowBox[{"PrintFun", "[", 
                    "\"> Diagonalizing the numerical Hamiltonian to get just \
the energies ...\"", "]"}], ";", 
                    RowBox[{"startTime", "=", "Now"}], ";", 
                    RowBox[{"eigenEnergies", "=", 
                    RowBox[{"Eigenvalues", "[", "numHam", "]"}]}], ";", 
                    RowBox[{"endTime", "=", "Now"}], ";", 
                    RowBox[{"diagonalTime", "=", 
                    RowBox[{"QuantityMagnitude", "[", 
                    RowBox[{
                    RowBox[{"endTime", "-", "startTime"}], ",", 
                    "\"Seconds\""}], "]"}]}], ";", 
                    RowBox[{"PrintFun", "[", 
                    
                    RowBox[{"\">> Diagonalization took \"", ",", 
                    "diagonalTime", ",", "\" seconds.\""}], "]"}], ";", 
                    RowBox[{"eigenEnergies", "=", 
                    RowBox[{"Sort", "[", "eigenEnergies", "]"}]}], ";", 
                    RowBox[{"eigenEnergies", "=", 
                    RowBox[{"eigenEnergies", "-", 
                    
                    RowBox[{"eigenEnergies", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"Keys", "[", "params", "]"}], ",", "\[Epsilon]"}],
                     "]"}], ",", 
                    RowBox[{"eigenEnergies", "+=", 
                    RowBox[{"params", "[", "\[Epsilon]", "]"}]}]}], "]"}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"OddQ", "[", "numE", "]"}], "&&", 
                    RowBox[{"OptionValue", "[", "\"Remove Kramers\"", "]"}]}],
                     ",", 
                    RowBox[{
                    
                    RowBox[{"PrintFun", "[", 
                    "\"> Since there's an odd number of electrons energies \
come in pairs, taking just one for each pair ...\"", "]"}], ";", 
                    RowBox[{"eigenEnergies", "=", 
                    RowBox[{"eigenEnergies", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", "All", ";;", "2"}], 
                    "\[RightDoubleBracket]"}]}], ";"}]}], "]"}], ";", 
                    RowBox[{"Return", "[", "eigenEnergies", "]"}], ";"}], ",", 
                    RowBox[{
                    
                    RowBox[{"PrintFun", "[", 
                    "\"> Diagonalizing the numerical Hamiltonian ...\"", 
                    "]"}], ";", 
                    RowBox[{"startTime", "=", "Now"}], ";", 
                    RowBox[{"eigensys", "=", 
                    RowBox[{"Eigensystem", "[", "numHam", "]"}]}], ";", 
                    RowBox[{"endTime", "=", "Now"}], ";", 
                    RowBox[{"diagonalTime", "=", 
                    RowBox[{"QuantityMagnitude", "[", 
                    RowBox[{
                    RowBox[{"endTime", "-", "startTime"}], ",", 
                    "\"Seconds\""}], "]"}]}], ";", 
                    RowBox[{"PrintFun", "[", 
                    
                    RowBox[{"\">> Diagonalization took \"", ",", 
                    "diagonalTime", ",", "\" seconds.\""}], "]"}], ";", 
                    RowBox[{"eigensys", "=", 
                    RowBox[{"Chop", "[", "eigensys", "]"}]}], ";", 
                    RowBox[{"eigensys", "=", 
                    RowBox[{"Transpose", "[", "eigensys", "]"}]}], ";"}]}], 
                    "]"}], ";", 
                    RowBox[{"eigensys", "=", 
                    RowBox[{"ShiftedLevels", "[", "eigensys", "]"}]}], ";", 
                    RowBox[{"eigensys", "=", 
                    RowBox[{"SortBy", "[", 
                    RowBox[{"eigensys", ",", "First"}], "]"}]}], ";", 
                    RowBox[{"energyShift", "=", "0"}], ";", 
                    RowBox[{"energyShift", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"Keys", "[", "params", "]"}], ",", "\[Epsilon]"}],
                     "]"}], ",", 
                    RowBox[{"Chop", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{"params", "[", "\[Epsilon]", "]"}], ",", "0.1`"}],
                     "]"}], "]"}], ",", "0.`"}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"\[Epsilon]", "=!=", "0.`"}], ",", 
                    RowBox[{"eigensys", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", "energyShift"}], ",", 
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "}"}], "&"}], ")"}], "/@", 
                    "eigensys"}]}]}], "]"}], ";", 
                    RowBox[{"eigenEnergies", "=", 
                    RowBox[{"Chop", "[", 
                    RowBox[{"First", "/@", "eigensys"}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"OddQ", "[", "numE", "]"}], "&&", 
                    RowBox[{"OptionValue", "[", "\"Remove Kramers\"", "]"}]}],
                     ",", 
                    RowBox[{
                    
                    RowBox[{"PrintFun", "[", 
                    "\"> Since there's an odd number of electrons energies \
come in pairs, taking just one for each pair ...\"", "]"}], ";", 
                    RowBox[{"eigenEnergies", "=", 
                    RowBox[{"eigenEnergies", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", "All", ";;", "2"}], 
                    "\[RightDoubleBracket]"}]}], ";"}]}], "]"}], ";", 
                    RowBox[{"titleTemplate", "=", 
                    
                    RowBox[{"StringTemplate", "[", 
                    "\"Energy Level Diagram of \
\\!\\(\\*SuperscriptBox[\\(`ion`\\), \\(\\(3\\)\\(+\\)\\)]\\)\"", "]"}]}], 
                    ";", 
                    RowBox[{"title", "=", 
                    RowBox[{"titleTemplate", "[", 
                    RowBox[{"Association", "[", 
                    RowBox[{"\"ion\"", "\[Rule]", "ln"}], "]"}], "]"}]}], ";", 
                    RowBox[{"parsedStates", "=", 
                    RowBox[{"ParseStates", "[", 
                    RowBox[{"eigensys", ",", "basis"}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"OddQ", "[", "numE", "]"}], "&&", 
                    RowBox[{"OptionValue", "[", "\"Remove Kramers\"", "]"}]}],
                     ",", 
                    RowBox[{"parsedStates", "=", 
                    RowBox[{"parsedStates", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", "All", ";;", "2"}], 
                    "\[RightDoubleBracket]"}]}]}], "]"}], ";", 
                    RowBox[{"stateLabels", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#1", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "&"}], 
                    ")"}], "/@", "parsedStates"}]}], ";", 
                    RowBox[{"simplerStateLabels", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "/.", "\[VeryThinSpace]", 
                    "termSimplifier"}], ")"}], "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], ",", "InputForm"}], "]"}]}], 
                    "&"}], ")"}], "/@", "parsedStates"}]}], ";", 
                    
                    RowBox[{"PrintFun", "[", 
                    "\">> Truncating eigenvectors to given probability ...\"",
                     "]"}], ";", 
                    RowBox[{"startTime", "=", "Now"}], ";", 
                    RowBox[{"truncatedStates", "=", 
                    RowBox[{"ParseStatesByProbabilitySum", "[", 
                    
                    RowBox[{"eigensys", ",", "basis", ",", 
                    "eigenstateTruncationProbability", ",", "0.01`"}], 
                    "]"}]}], ";", 
                    RowBox[{"endTime", "=", "Now"}], ";", 
                    RowBox[{"truncationTime", "=", 
                    RowBox[{"QuantityMagnitude", "[", 
                    RowBox[{
                    RowBox[{"endTime", "-", "startTime"}], ",", 
                    "\"Seconds\""}], "]"}]}], ";", 
                    RowBox[{"PrintFun", "[", 
                    
                    RowBox[{"\">>> Truncation took \"", ",", "truncationTime",
                     ",", "\" seconds.\""}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"makeNotebook", ",", 
                    RowBox[{
                    RowBox[{"hamImage", "=", 
                    RowBox[{"HamTeX", "[", 
                    RowBox[{"numE", ",", 
                    RowBox[{"\"T2\"", "\[Rule]", 
                    RowBox[{
                    RowBox[{"params", "[", "T2", "]"}], "===", "0.`"}]}]}], 
                    "]"}]}], ";", 
                    RowBox[{"epiThings", "=", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"host", "\[Equal]", "\"LaF3\""}], ",", 
                    RowBox[{
                    RowBox[{"carnalKey", "=", 
                    
                    RowBox[{"\"appendix:\"", "<>", "ln", "<>", 
                    "\":RawTable\""}]}], ";", 
                    RowBox[{"expData", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", 
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "}"}], "&"}], ")"}], "/@", 
                    RowBox[{"Carnall", "[", "carnalKey", "]"}]}]}], ";", 
                    RowBox[{"expData", "=", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"First", "/@", "expData"}], ",", "NumericQ"}], 
                    "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Red", ",", 
                    RowBox[{"PointSize", "[", "0.002`", "]"}], ",", 
                    RowBox[{"Point", "[", 
                    RowBox[{"{", 
                    RowBox[{"#1", ",", "0.5`"}], "}"}], "]"}]}], "}"}], "&"}],
                     ")"}], "/@", "expData"}]}], ",", "True", ",", 
                    RowBox[{"{", "}"}]}], "]"}]}], ";", 
                    
                    RowBox[{"PrintFun", "[", 
                    "\"> Putting together results in a notebook ...\"", "]"}],
                     ";", 
                    RowBox[{"energyDiagram", "=", 
                    RowBox[{"Framed", "[", 
                    RowBox[{
                    RowBox[{"EnergyLevelDiagram", "[", 
                    RowBox[{"eigensys", ",", 
                    RowBox[{"\"Title\"", "\[Rule]", "title"}], ",", 
                    RowBox[{"\"Explorer\"", "\[Rule]", 
                    RowBox[{"OptionValue", "[", "\"Explorer\"", "]"}]}], ",", 
                    
                    RowBox[{"\"Background\"", "\[Rule]", "White"}], ",", 
                    RowBox[{"\"Epilog\"", "\[Rule]", "epiThings"}]}], "]"}], 
                    ",", 
                    RowBox[{"Background", "\[Rule]", "White"}], ",", 
                    RowBox[{"FrameMargins", "\[Rule]", "50"}]}], "]"}]}], ";", 
                    RowBox[{"appToFname", "=", 
                    
                    RowBox[{"OptionValue", "[", "\"Append to Filename\"", 
                    "]"}]}], ";", 
                    RowBox[{"statesTable", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Round", "[", 
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}], ",", 
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "}"}], "&"}], ")"}], "/@", 
                    RowBox[{"truncatedStates", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{"Length", "[", "eigensys", "]"}], ",", 
                    "maxStatesInTable"}], "]"}]}], 
                    "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{"statesTableHeader", "=", 
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Energy/\\!\\(\\*SuperscriptBox[\\(cm\\), \
\\(-1\\)]\\)\"", ",", "\"\[Psi]\""}], "}"}]}], ";", 
                    RowBox[{"statesTable", "=", 
                    RowBox[{"Prepend", "[", 
                    RowBox[{"statesTable", ",", "statesTableHeader"}], 
                    "]"}]}], ";", 
                    RowBox[{"statesTable", "=", 
                    RowBox[{"Grid", "[", 
                    RowBox[{"statesTable", ",", 
                    RowBox[{"Frame", "\[Rule]", "All"}], ",", 
                    RowBox[{"Spacings", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], ",", 
                    RowBox[{"FrameStyle", "\[Rule]", "Blue"}], ",", 
                    RowBox[{"Dividers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "True", ",", "False"}], "}"}], ",", 
                    
                    RowBox[{"{", 
                    RowBox[{"True", ",", "True"}], "}"}]}], "}"}]}]}], 
                    "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"DefaultIfMissing", "[", "expr_", "]"}], ":=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"FreeQ", "[", 
                    RowBox[{"expr", ",", 
                    RowBox[{"Missing", "[", "]"}]}], "]"}], ",", "expr", ",", 
                    "\"NA\""}], "]"}]}], ";", 
                    RowBox[{"diffTableData", "=", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{"simplerStateLabels", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Round", "[", 
                    RowBox[{"#1", ",", "1"}], "]"}], "&"}], ")"}], "/@", 
                    "eigenEnergies"}]}], "}"}], "]"}]}], ";", 
                    RowBox[{"diffTable", "=", 
                    RowBox[{"TableForm", "[", 
                    RowBox[{"diffTableData", ",", 
                    RowBox[{"TableHeadings", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"\"coarse label\"", ",", 
                    "\"E/\\!\\(\\*SuperscriptBox[\\(cm\\), \\(-1\\)]\\)\""}], 
                    "}"}]}], "}"}]}]}], "]"}]}], ";", 
                    RowBox[{"PrintFun", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"numE\"", ",", "numE"}], "}"}], "]"}], ";", 
                    RowBox[{"nb", "=", 
                    RowBox[{"CreateDocument", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"TextCell", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"DisplayForm", "[", 
                    RowBox[{"RowBox", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"SuperscriptBox", "[", 
                    RowBox[{
                    RowBox[{"host", "<>", "\":\"", "<>", "ln"}], ",", 
                    "\"3+\""}], "]"}], ",", "\"(\"", ",", 
                    RowBox[{"SuperscriptBox", "[", 
                    RowBox[{"\"f\"", ",", "numE"}], "]"}], ",", "\")\""}], 
                    "}"}], "]"}], "]"}], "]"}], ",", "\"Title\"", ",", 
                    RowBox[{"TextAlignment", "\[Rule]", "Center"}]}], "]"}], 
                    ",", 
                    RowBox[{"TextCell", "[", 
                    RowBox[{
                    RowBox[{"Show", "[", 
                    RowBox[{"hamImage", ",", 
                    RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}], ",", 
                    "\"Output\"", ",", 
                    RowBox[{"TextAlignment", "\[Rule]", "Center"}]}], "]"}], 
                    ",", 
                    RowBox[{"TextCell", "[", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"originalParams", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#1", "=!=", "0"}], "&&", 
                    RowBox[{"#1", "=!=", "0.`"}]}], "&"}]}], "]"}], ",", 
                    "\"Output\"", ",", 
                    RowBox[{"TextAlignment", "\[Rule]", "Center"}]}], "]"}], 
                    ",", 
                    RowBox[{"TextCell", "[", 
                    
                    RowBox[{"\"Calculated Energy Diagram\"", ",", 
                    "\"Section\"", ",", 
                    RowBox[{"TextAlignment", "\[Rule]", "Center"}]}], "]"}], 
                    ",", 
                    RowBox[{"TextCell", "[", 
                    RowBox[{"energyDiagram", ",", 
                    RowBox[{"TextAlignment", "\[Rule]", "Center"}]}], "]"}], 
                    ",", 
                    RowBox[{"TextCell", "[", 
                    
                    RowBox[{"\"Multiplet Assignments & Energy Levels\"", ",", 
                    "\"Section\"", ",", 
                    RowBox[{"TextAlignment", "\[Rule]", "Center"}]}], "]"}], 
                    ",", 
                    RowBox[{"TextCell", "[", 
                    RowBox[{
                    
                    RowBox[{
                    "\"The following table shows the multiplet assignments \
and energies of the eigenstates.\\nThe energies are rounded to the nearest \
cm^-1 .\\nThe coarse label for each state corresponds to the LSJ term with \
the largest contribution to the corresponding eigenvector.\"", "<>", 
                    "uncertaintySentence"}], ",", "\"Text\"", ",", 
                    RowBox[{"TextAlignment", "\[Rule]", "Center"}]}], "]"}], 
                    ",", 
                    RowBox[{"TextCell", "[", 
                    RowBox[{"diffTable", ",", "\"Output\"", ",", 
                    RowBox[{"TextAlignment", "\[Rule]", "Center"}]}], "]"}], 
                    ",", 
                    RowBox[{"TextCell", "[", 
                    
                    RowBox[{"\"Truncated Eigenstates\"", ",", "\"Section\"", 
                    ",", 
                    RowBox[{"TextAlignment", "\[Rule]", "Center"}]}], "]"}], 
                    ",", 
                    RowBox[{"TextCell", "[", 
                    RowBox[{
                    
                    RowBox[{
                    "\"These are some of the resultant eigenstates which add \
up to at least a total probability of \"", "<>", 
                    
                    RowBox[{"ToString", "[", 
                    "eigenstateTruncationProbability", "]"}], "<>", "\".\""}],
                     ",", "\"Text\"", ",", 
                    RowBox[{"TextAlignment", "\[Rule]", "Center"}]}], "]"}], 
                    ",", 
                    RowBox[{"TextCell", "[", 
                    RowBox[{"statesTable", ",", "\"Output\"", ",", 
                    RowBox[{"TextAlignment", "\[Rule]", "Center"}]}], "]"}]}],
                     "}"}], ",", 
                    RowBox[{"WindowSelected", "\[Rule]", "True"}], ",", 
                    RowBox[{"WindowTitle", "\[Rule]", 
                    
                    RowBox[{"ln", "<>", "\" in \"", "<>", "host", "<>", 
                    "appToFname"}]}], ",", 
                    RowBox[{"WindowSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1600", ",", "800"}], "}"}]}]}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "\"SaveData\"", "]"}], ",", 
                    RowBox[{
                    RowBox[{"exportFname", "=", 
                    RowBox[{"FileNameJoin", "[", 
                    RowBox[{"{", 
                    RowBox[{"workDir", ",", 
                    RowBox[{"OptionValue", "[", "\"OutputDirectory\"", "]"}], 
                    ",", 
                    RowBox[{
                    "ln", "<>", "\" in \"", "<>", "host", "<>", "appToFname", 
                    "<>", "\".mx\""}]}], "}"}], "]"}]}], ";", 
                    RowBox[{"SelectionMove", "[", 
                    RowBox[{"nb", ",", "After", ",", "Notebook"}], "]"}], ";", 
                    RowBox[{"NotebookWrite", "[", 
                    RowBox[{"nb", ",", 
                    RowBox[{"Cell", "[", 
                    RowBox[{"\"Reload Data\"", ",", "\"Section\"", ",", 
                    RowBox[{"TextAlignment", "\[Rule]", "Center"}]}], "]"}]}],
                     "]"}], ";", 
                    RowBox[{"NotebookWrite", "[", 
                    RowBox[{"nb", ",", 
                    RowBox[{"Cell", "[", 
                    RowBox[{
                    
                    RowBox[{
                    "\"{eigenEnergies, ln, simplerStateLabels, eigensys, \
basis, truncatedStates, params} = Import[FileNameJoin[{NotebookDirectory[],\\\
\"\"", "<>", 
                    RowBox[{
                    RowBox[{"StringSplit", "[", 
                    RowBox[{"exportFname", ",", "\"/\""}], "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "<>", 
                    "\"\\\"}]];\""}], ",", "\"Input\""}], "]"}]}], "]"}], ";", 
                    RowBox[{"NotebookWrite", "[", 
                    RowBox[{"nb", ",", 
                    RowBox[{"Cell", "[", 
                    
                    RowBox[{
                    "\"Manipulate[First[MinimalBy[truncatedStates, \
Abs[First[#] - energy] &]], {energy,0}]\"", ",", "\"Input\""}], "]"}]}], 
                    "]"}], ";", 
                    RowBox[{"SelectionMove", "[", 
                    RowBox[{"nb", ",", "Before", ",", "Notebook"}], "]"}], 
                    ";", 
                    RowBox[{"Export", "[", 
                    RowBox[{"exportFname", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"eigenEnergies", ",", "ln", ",", 
                    "simplerStateLabels", ",", "eigensys", ",", "basis", ",", 
                    "truncatedStates", ",", 
                    RowBox[{"Select", "[", 
                    RowBox[{"originalParams", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#1", "=!=", "0"}], "&&", 
                    RowBox[{"#1", "=!=", "0.`"}]}], "&"}]}], "]"}]}], "}"}]}],
                     "]"}], ";", 
                    RowBox[{"tinyexportFname", "=", 
                    RowBox[{"FileNameJoin", "[", 
                    RowBox[{"{", 
                    RowBox[{"workDir", ",", 
                    RowBox[{"OptionValue", "[", "\"OutputDirectory\"", "]"}], 
                    ",", 
                    RowBox[{
                    "ln", "<>", "\" in \"", "<>", "host", "<>", "appToFname", 
                    "<>", "\" - tiny.m\""}]}], "}"}], "]"}]}], ";", 
                    RowBox[{"tinyExport", "=", 
                    RowBox[{"Association", "[", 
                    RowBox[{
                    RowBox[{"\"ln\"", "\[Rule]", "ln"}], ",", 
                    RowBox[{"\"eigenEnergies\"", "\[Rule]", "eigenEnergies"}],
                     ",", 
                    
                    RowBox[{"\"simplerStateLabels\"", "\[Rule]", 
                    "simplerStateLabels"}], ",", 
                    RowBox[{"\"params\"", "\[Rule]", "params"}]}], "]"}]}], 
                    ";", 
                    RowBox[{"Export", "[", 
                    RowBox[{"tinyexportFname", ",", "tinyExport"}], "]"}], 
                    ";"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "\"NotebookSave\"", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"nbFname", "=", 
                    RowBox[{"FileNameJoin", "[", 
                    RowBox[{"{", 
                    RowBox[{"workDir", ",", 
                    RowBox[{"OptionValue", "[", "\"OutputDirectory\"", "]"}], 
                    ",", 
                    RowBox[{
                    "ln", "<>", "\" in \"", "<>", "host", "<>", "appToFname", 
                    "<>", "\".nb\""}]}], "}"}], "]"}]}], ";", 
                    RowBox[{"PrintFun", "[", 
                    
                    RowBox[{"\">> Saving notebook to \"", ",", "nbFname", ",",
                     "\" ...\""}], "]"}], ";", 
                    RowBox[{"NotebookSave", "[", 
                    RowBox[{"nb", ",", "nbFname"}], "]"}], ";"}]}], "]"}], 
                    ";"}]}], "]"}], ";", 
                    RowBox[{"Return", "[", 
                    RowBox[{"{", 
                    
                    RowBox[{"eigenEnergies", ",", "ln", ",", 
                    "simplerStateLabels", ",", "eigensys", ",", "basis", ",", 
                    "truncatedStates"}], "}"}], "]"}], ";"}]}], "]"}]}]}, {
                   " "}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"\<\"Sparse\"\>", "\[Rule]", "True"}]},
                    {
                    RowBox[{"\<\"Host\"\>", "\[Rule]", "\<\"LaF3\"\>"}]},
                    {
                    RowBox[{"\<\"SaveData\"\>", "\[Rule]", "True"}]},
                    {
                    RowBox[{"\<\"PrintFun\"\>", "\[Rule]", "Print"}]},
                    {
                    RowBox[{"\<\"Explorer\"\>", "\[Rule]", "False"}]},
                    {
                    RowBox[{"\<\"MakeNotebook\"\>", "\[Rule]", "True"}]},
                    {
                    RowBox[{"\<\"NotebookSave\"\>", "\[Rule]", "True"}]},
                    {
                    RowBox[{"\<\"EnergiesOnly\"\>", "\[Rule]", "False"}]},
                    {
                    RowBox[{"\<\"Remove Kramers\"\>", "\[Rule]", "True"}]},
                    {
                    
                    RowBox[{"\<\"Append to Filename\"\>", 
                    "\[Rule]", "\<\"\"\>"}]},
                    {
                    
                    RowBox[{"\<\"Energy Uncertainty in K\"\>", "\[Rule]", 
                    "1"}]},
                    {
                    
                    RowBox[{"\<\"OutputDirectory\"\>", 
                    "\[Rule]", "\<\"calcs\"\>"}]},
                    {
                    
                    RowBox[{"\<\"Max Eigenstates in Table\"\>", "\[Rule]", 
                    "100"}]},
                    {
                    
                    RowBox[{"\<\"eigenstateTruncationProbability\"\>", 
                    "\[Rule]", "0.9`"}]},
                    {
                    RowBox[{"\<\"SymmetrySimplifier\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\<\"C2v\"\>", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"B12", "\[Rule]", "0"}], ",", 
                    RowBox[{"B14", "\[Rule]", "0"}], ",", 
                    RowBox[{"B16", "\[Rule]", "0"}], ",", 
                    RowBox[{"B34", "\[Rule]", "0"}], ",", 
                    RowBox[{"B36", "\[Rule]", "0"}], ",", 
                    RowBox[{"B56", "\[Rule]", "0"}], ",", 
                    RowBox[{"S12", "\[Rule]", "0"}], ",", 
                    RowBox[{"S14", "\[Rule]", "0"}], ",", 
                    RowBox[{"S16", "\[Rule]", "0"}], ",", 
                    RowBox[{"S22", "\[Rule]", "0"}], ",", 
                    RowBox[{"S24", "\[Rule]", "0"}], ",", 
                    RowBox[{"S26", "\[Rule]", "0"}], ",", 
                    RowBox[{"S34", "\[Rule]", "0"}], ",", 
                    RowBox[{"S36", "\[Rule]", "0"}], ",", 
                    RowBox[{"S44", "\[Rule]", "0"}], ",", 
                    RowBox[{"S46", "\[Rule]", "0"}], ",", 
                    RowBox[{"S56", "\[Rule]", "0"}], ",", 
                    RowBox[{"S66", "\[Rule]", "0"}], ",", 
                    RowBox[{"T11p", "\[Rule]", "0"}], ",", 
                    RowBox[{"T12", "\[Rule]", "0"}], ",", 
                    RowBox[{"T14", "\[Rule]", "0"}], ",", 
                    RowBox[{"T15", "\[Rule]", "0"}], ",", 
                    RowBox[{"T16", "\[Rule]", "0"}], ",", 
                    RowBox[{"T18", "\[Rule]", "0"}], ",", 
                    RowBox[{"T17", "\[Rule]", "0"}], ",", 
                    RowBox[{"T19", "\[Rule]", "0"}]}], "}"}]}], "}"}]}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "15", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"\<\"Sparse\"\>", "\[Rule]", "True"}], 
                    "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "15", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`FastIonSolver\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FastIonSolver[params] calculates energy levels and \
eigenvectors for the given parameters describing a trivalent lanthanide. It \
can use precomputed symbolic matrices for the Hamiltonian if they have been \
loaded already and defined as symbols of the form \
symbolicHamiltonians[{symmetry, numE}].\\n\\nThe function returns a list with \
six elements {eigenEnergies, ln, simplerStateLabels, eigensys, basis, \
truncatedStates}. The elements of the list are as follows:\\n\\n1. \
eigenEnergies are the calculated energies (in the case of an odd number of \
electrons the Kramers degeneracy may have been removed from this list \
according to the option \\\"Remove Kramers\\\");\\n2. ln is simply a string \
labelling the corresponding lanthanide;\\n3. simplerStateLabels is a list of \
strings providing the multiplet assignments that this function assumes;\\n3. \
eigensys is a list of tuples where the first element is the energy \
corresponding to the eigenvector given as the second element (in the case of \
an odd number of electrons the Kramers degeneracy may have been removed from \
this list according to the option \\\"Remove Kramers\\\");\\n5. basis is a \
list that specifies the basis in which the Hamiltonian was constructed and \
diagonalized, equal to BasisLSJMJ[numE];\\n6. truncatedStates is the same as \
eigensys but with the truncated eigenvectors so that the total probability \
adds up to at least eigenstateTruncationProbability (determined by the option \
\\\"eigenstateTruncationProbability\\\").\\n\\nThis function admits the \
following options:\\n  - \\\"MakeNotebook\\\" -> True or False. If True, a \
notebook with a summary of the data is created. Default is True.\\n  - \
\\\"NotebookSave\\\" -> True or False. If True, the results notebook is saved \
automatically. Default is True.\\n  - \\\"eigenstateTruncationProbability\\\" \
-> 0.9. The probability sum of the truncated eigenvectors. Default is 0.9.\\n \
 - \\\"Max Eigenstates in Table\\\" -> 100. The maximum number of eigenstates \
to be shown in the table shown in the results notebook. Default is 100.\\n  - \
\\\"Sparse\\\" -> True or False. If True, the numerical Hamiltonian is kept \
in sparse form. Default is True.\\n  - \\\"PrintFun\\\" -> Print, \
PrintTemporary, or other to serve as a printer for progress messages. Default \
is Print.\\n  - \\\"SaveData\\\" -> True or False. If True, the resulting \
data is saved to disk. Default is True.\\n  - \\\"Append to Filename\\\" -> \
\\\"\\\". A string to append to the filename of the saved notebook and data \
files. Default is \\\"\\\".\\n  - \\\"Remove Kramers\\\" -> True or False. If \
True, the Kramers degeneracy is removed from the eigenstates for odd electron \
cases. Default is True.\\n  - \\\"OutputDirectory\\\" -> \\\"calcs\\\". The \
directory where the output files are saved. Default is \\\"calcs\\\", may be \
a folder not yet created.\\n  - \\\"Explorer\\\" -> True or False. If True, \
the energy level diagram is interactive. Default is False.\\n  - \\\"Host\\\" \
-> \\\"crystalHost\\\". The host material. Default is \\\"LaF3\\\".\\n  - \
\\\"SymmetrySimplifier\\\" a list of two elements, the first one being the \
name of the assumed symmetry for the crystal field and the second being a \
list of replacement rules applied to simplify the Hamiltonian used to make \
calculations. Default is {\\\"C2v\\\", {B12 -> 0, ...}}\\n\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "FastIonSolver[params] calculates energy levels and eigenvectors for the \
given parameters describing a trivalent lanthanide. It can use precomputed \
symbolic matrices for the Hamiltonian if they have been loaded already and \
defined as symbols of the form symbolicHamiltonians[{symmetry, numE}].\n\nThe \
function returns a list with six elements {eigenEnergies, ln, \
simplerStateLabels, eigensys, basis, truncatedStates}. The elements of the \
list are as follows:\n\n1. eigenEnergies are the calculated energies (in the \
case of an odd number of electrons the Kramers degeneracy may have been \
removed from this list according to the option \"Remove Kramers\");\n2. ln is \
simply a string labelling the corresponding lanthanide;\n3. \
simplerStateLabels is a list of strings providing the multiplet assignments \
that this function assumes;\n3. eigensys is a list of tuples where the first \
element is the energy corresponding to the eigenvector given as the second \
element (in the case of an odd number of electrons the Kramers degeneracy may \
have been removed from this list according to the option \"Remove Kramers\");\
\n5. basis is a list that specifies the basis in which the Hamiltonian was \
constructed and diagonalized, equal to BasisLSJMJ[numE];\n6. truncatedStates \
is the same as eigensys but with the truncated eigenvectors so that the total \
probability adds up to at least eigenstateTruncationProbability (determined \
by the option \"eigenstateTruncationProbability\").\n\nThis function admits \
the following options:\n  - \"MakeNotebook\" -> True or False. If True, a \
notebook with a summary of the data is created. Default is True.\n  - \
\"NotebookSave\" -> True or False. If True, the results notebook is saved \
automatically. Default is True.\n  - \"eigenstateTruncationProbability\" -> \
0.9. The probability sum of the truncated eigenvectors. Default is 0.9.\n  - \
\"Max Eigenstates in Table\" -> 100. The maximum number of eigenstates to be \
shown in the table shown in the results notebook. Default is 100.\n  - \
\"Sparse\" -> True or False. If True, the numerical Hamiltonian is kept in \
sparse form. Default is True.\n  - \"PrintFun\" -> Print, PrintTemporary, or \
other to serve as a printer for progress messages. Default is Print.\n  - \
\"SaveData\" -> True or False. If True, the resulting data is saved to disk. \
Default is True.\n  - \"Append to Filename\" -> \"\". A string to append to \
the filename of the saved notebook and data files. Default is \"\".\n  - \
\"Remove Kramers\" -> True or False. If True, the Kramers degeneracy is \
removed from the eigenstates for odd electron cases. Default is True.\n  - \
\"OutputDirectory\" -> \"calcs\". The directory where the output files are \
saved. Default is \"calcs\", may be a folder not yet created.\n  - \"Explorer\
\" -> True or False. If True, the energy level diagram is interactive. \
Default is False.\n  - \"Host\" -> \"crystalHost\". The host material. \
Default is \"LaF3\".\n  - \"SymmetrySimplifier\" a list of two elements, the \
first one being the name of the assumed symmetry for the crystal field and \
the second being a list of replacement rules applied to simplify the \
Hamiltonian used to make calculations. Default is {\"C2v\", {B12 -> 0, ...}}\n\
", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, $CellContext`FastIonSolver, {$CellContext`FastIonSolver[
         Pattern[$CellContext`params0, 
          Blank[]], 
         OptionsPattern[]] :> 
       Module[{$CellContext`params = <|$CellContext`params0|>, \
$CellContext`paramKeys, $CellContext`numE, $CellContext`PrintFun, \
$CellContext`makeNotebook, $CellContext`eigenstateTruncationProbability, \
$CellContext`maxStatesInTable, $CellContext`Duplicator, $CellContext`host, \
$CellContext`ln, $CellContext`terms, $CellContext`termNames, \
$CellContext`termSimplifier, $CellContext`startTime, $CellContext`numH, \
$CellContext`numEH, $CellContext`simpleHam, $CellContext`endTime, \
$CellContext`loadTime, $CellContext`numHam, $CellContext`basis, \
$CellContext`eigensys, $CellContext`eigenEnergies, \
$CellContext`titleTemplate, $CellContext`title, $CellContext`parsedStates, \
$CellContext`stateLabels, $CellContext`simplerStateLabels, \
$CellContext`truncatedStates, $CellContext`truncationTime, \
$CellContext`energyDiagram, $CellContext`appToFname, \
$CellContext`statesTable, $CellContext`DefaultIfMissing, \
$CellContext`diffTableData, $CellContext`diffTable, $CellContext`nb, \
$CellContext`exportFname, $CellContext`tinyexportFname, \
$CellContext`tinyExport, $CellContext`nbFname, \
$CellContext`uncertaintySentence, $CellContext`sigmaRMS, \
$CellContext`energyUncertaintyTemplate, $CellContext`onlyEnergies, \
$CellContext`originalParams, $CellContext`epiThings}, $CellContext`paramKeys = 
          Keys[$CellContext`params]; Which[
           
           MemberQ[$CellContext`paramKeys, 
            qlanth`nE], $CellContext`numE = $CellContext`params[qlanth`nE], 
           
           MemberQ[$CellContext`paramKeys, 
            "nE"], $CellContext`numE = $CellContext`params["nE"], 
           
           MemberQ[$CellContext`paramKeys, 
            "numE"], $CellContext`numE = $CellContext`params["numE"], True, 
           Print["The number of electrons was not specified in params, \
exiting ..."]; Return[Null]; Null]; $CellContext`NiceSort[
            Pattern[$CellContext`params, 
             Blank[]]] := <|
            SortBy[
             Normal[$CellContext`params], Position[qlanth`paramSymbols, 
              Part[#, 1]]& ]|>; $CellContext`energyUncertaintyTemplate = 
          StringTemplate[
           "\nWhen the Hamiltonian was fitted to experimental data, the root \
mean square deviation between the data and the calculated energies was \
`energySigma` cm^-1.\nThe red points in the diagram above (if present) \
indicate the energies of the known experimental data."]; \
$CellContext`sigmaRMS = 
          OptionValue[
           "Energy Uncertainty in K"]; $CellContext`uncertaintySentence = 
          If[$CellContext`sigmaRMS === 0., "", 
            $CellContext`energyUncertaintyTemplate[<|
             "energySigma" -> $CellContext`sigmaRMS|>]]; \
$CellContext`PrintFun = OptionValue["PrintFun"]; $CellContext`makeNotebook = 
          OptionValue["MakeNotebook"]; $CellContext`onlyEnergies = 
          OptionValue[
           "EnergiesOnly"]; $CellContext`eigenstateTruncationProbability = 
          OptionValue[
           "eigenstateTruncationProbability"]; $CellContext`maxStatesInTable = 
          OptionValue["Max Eigenstates in Table"]; $CellContext`Duplicator[
            Pattern[$CellContext`aList, 
             Blank[]]] := Flatten[
            Map[{#, #}& , $CellContext`aList]]; $CellContext`host = 
          OptionValue["Host"]; $CellContext`ln = 
          Part[qonstants`theLanthanides, $CellContext`numE]; \
$CellContext`terms = qlanth`AllowedNKSLJTerms[
            
            Min[$CellContext`numE, 
             14 - $CellContext`numE]]; $CellContext`termNames = 
          Map[First, $CellContext`terms]; $CellContext`PrintFun[
          "> Calculating simpler term labels ..."]; \
$CellContext`termSimplifier = 
          Table[$CellContext`termN -> 
            If[StringLength[$CellContext`termN] == 3, 
              
              StringTake[$CellContext`termN, {1, 
               2}], $CellContext`termN], {$CellContext`termN, \
$CellContext`termNames}]; $CellContext`originalParams = \
$CellContext`NiceSort[$CellContext`params]; 
         If[$CellContext`numE > 
           7, $CellContext`PrintFun[
            "> Conjugating the parameters accounting for the hole-particle \
equivalence ..."]; $CellContext`params = 
            qlanth`HoleElectronConjugation[$CellContext`params]; \
$CellContext`params[qlanth`t2Switch] = 0; 
           Null, $CellContext`params[qlanth`t2Switch] = 1; 
           Null]; $CellContext`PrintFun[
          "> Loading the symbolic Hamiltonian for this configuration ..."]; \
$CellContext`startTime = Now; $CellContext`numH = 
          14 - $CellContext`numE; $CellContext`numEH = 
          Min[$CellContext`numE, $CellContext`numH]; {$CellContext`symGroup, \
$CellContext`symmetrySimplifier} = 
          OptionValue["SymmetrySimplifier"]; $CellContext`simpleHam = If[
            ValueQ[
             
             qlanth`symbolicHamiltonians[{$CellContext`symGroup, \
$CellContext`numEH}]], 
            
            qlanth`symbolicHamiltonians[{$CellContext`symGroup, \
$CellContext`numEH}], 
            
            qlanth`SimplerSymbolicHamMatrix[$CellContext`numE, \
$CellContext`symmetrySimplifier, 
             "PrependToFilename" -> $CellContext`symGroup <> "-", "Overwrite" -> 
             False]]; $CellContext`endTime = Now; $CellContext`loadTime = 
          QuantityMagnitude[$CellContext`endTime - $CellContext`startTime, 
            "Seconds"]; $CellContext`PrintFun[
          ">> Loading the symbolic Hamiltonian took ", $CellContext`loadTime, 
           " seconds."]; If[
           Not[
            
            MemberQ[$CellContext`paramKeys, 
             qlanth`\[Sigma]SS]], $CellContext`PrintFun[
            "> params does not implicitly specify if the spin-spin \
contribution should be included. Including it by default ..."]; \
$CellContext`params[qlanth`\[Sigma]SS] = 1; Null]; $CellContext`params = 
          qlanth`ParamPad[$CellContext`params, 
            "PrintFun" -> $CellContext`PrintFun]; \
$CellContext`PrintFun[$CellContext`params]; $CellContext`numHam = 
          qlanth`ReplaceInSparseArray[$CellContext`simpleHam, \
$CellContext`params]; If[
           Not[
            OptionValue["Sparse"]], $CellContext`numHam = 
           Normal[$CellContext`numHam]]; $CellContext`PrintFun[
          "> Calculating the SLJ basis ..."]; $CellContext`basis = 
          qlanth`BasisLSJMJ[$CellContext`numE]; 
         If[$CellContext`onlyEnergies, $CellContext`PrintFun[
            "> Diagonalizing the numerical Hamiltonian to get just the \
energies ..."]; $CellContext`startTime = Now; $CellContext`eigenEnergies = 
            Eigenvalues[$CellContext`numHam]; $CellContext`endTime = 
            Now; $CellContext`diagonalTime = 
            QuantityMagnitude[$CellContext`endTime - $CellContext`startTime, 
              "Seconds"]; $CellContext`PrintFun[
            ">> Diagonalization took ", $CellContext`diagonalTime, 
             " seconds."]; $CellContext`eigenEnergies = 
            Sort[$CellContext`eigenEnergies]; $CellContext`eigenEnergies = \
$CellContext`eigenEnergies - Part[$CellContext`eigenEnergies, 1]; If[
             MemberQ[
              Keys[$CellContext`params], qlanth`\[Epsilon]], 
             AddTo[$CellContext`eigenEnergies, 
              $CellContext`params[qlanth`\[Epsilon]]]]; If[
             And[
              OddQ[$CellContext`numE], 
              OptionValue["Remove Kramers"]], $CellContext`PrintFun[
              "> Since there's an odd number of electrons energies come in \
pairs, taking just one for each pair ..."]; $CellContext`eigenEnergies = 
              Part[$CellContext`eigenEnergies, 
                Span[1, All, 2]]; Null]; Return[$CellContext`eigenEnergies]; 
           Null, $CellContext`PrintFun[
            "> Diagonalizing the numerical Hamiltonian ..."]; \
$CellContext`startTime = Now; $CellContext`eigensys = 
            Eigensystem[$CellContext`numHam]; $CellContext`endTime = 
            Now; $CellContext`diagonalTime = 
            QuantityMagnitude[$CellContext`endTime - $CellContext`startTime, 
              "Seconds"]; $CellContext`PrintFun[
            ">> Diagonalization took ", $CellContext`diagonalTime, 
             " seconds."]; $CellContext`eigensys = 
            Chop[$CellContext`eigensys]; $CellContext`eigensys = 
            Transpose[$CellContext`eigensys]; Null]; $CellContext`eigensys = 
          qlanth`ShiftedLevels[$CellContext`eigensys]; $CellContext`eigensys = 
          SortBy[$CellContext`eigensys, First]; $CellContext`energyShift = 
          0; $CellContext`energyShift = If[
            MemberQ[
             Keys[$CellContext`params], qlanth`\[Epsilon]], 
            Chop[
             Round[
              $CellContext`params[qlanth`\[Epsilon]], 0.1]], 0.]; 
         If[qlanth`\[Epsilon] =!= 0., $CellContext`eigensys = 
           Map[{Part[#, 1] + $CellContext`energyShift, 
              
              Part[#, 2]}& , $CellContext`eigensys]]; \
$CellContext`eigenEnergies = Chop[
            Map[First, $CellContext`eigensys]]; If[
           And[
            OddQ[$CellContext`numE], 
            OptionValue["Remove Kramers"]], $CellContext`PrintFun[
            "> Since there's an odd number of electrons energies come in \
pairs, taking just one for each pair ..."]; $CellContext`eigenEnergies = 
            Part[$CellContext`eigenEnergies, 
              Span[1, All, 2]]; Null]; $CellContext`titleTemplate = 
          StringTemplate[
           "Energy Level Diagram of \!\(\*SuperscriptBox[\(`ion`\), \
\(\(3\)\(+\)\)]\)"]; $CellContext`title = $CellContext`titleTemplate[<|
            "ion" -> $CellContext`ln|>]; $CellContext`parsedStates = 
          qlanth`ParseStates[$CellContext`eigensys, $CellContext`basis]; If[
           And[
            OddQ[$CellContext`numE], 
            OptionValue["Remove Kramers"]], $CellContext`parsedStates = 
           Part[$CellContext`parsedStates, 
             Span[1, All, 2]]]; $CellContext`stateLabels = 
          Map[Part[#, -1]& , $CellContext`parsedStates]; \
$CellContext`simplerStateLabels = Map[ReplaceAll[
              Part[#, 2], $CellContext`termSimplifier] <> ToString[
              Part[#, 3], 
              InputForm]& , $CellContext`parsedStates]; $CellContext`PrintFun[
          ">> Truncating eigenvectors to given probability ..."]; \
$CellContext`startTime = Now; $CellContext`truncatedStates = 
          qlanth`ParseStatesByProbabilitySum[$CellContext`eigensys, \
$CellContext`basis, $CellContext`eigenstateTruncationProbability, 
            0.01]; $CellContext`endTime = Now; $CellContext`truncationTime = 
          QuantityMagnitude[$CellContext`endTime - $CellContext`startTime, 
            "Seconds"]; $CellContext`PrintFun[
          ">>> Truncation took ", $CellContext`truncationTime, " seconds."]; 
         If[$CellContext`makeNotebook, $CellContext`hamImage = 
            misc`HamTeX[$CellContext`numE, 
              "T2" -> $CellContext`params[qlanth`T2] === 
               0.]; $CellContext`epiThings = 
            Which[$CellContext`host == 
              "LaF3", $CellContext`carnalKey = 
               "appendix:" <> $CellContext`ln <> 
                ":RawTable"; $CellContext`expData = Map[{
                  Part[#, 2], 
                  Part[#, 1], 
                  Part[#, 3]}& , 
                 
                 qlanth`Carnall[$CellContext`carnalKey]]; \
$CellContext`expData = Select[
                 Map[First, $CellContext`expData], NumericQ]; Map[{Red, 
                 PointSize[0.002], 
                 Point[{#, 0.5}]}& , $CellContext`expData], 
              True, {}]; $CellContext`PrintFun[
            "> Putting together results in a notebook ..."]; \
$CellContext`energyDiagram = Framed[
              
              qlanth`EnergyLevelDiagram[$CellContext`eigensys, 
               "Title" -> $CellContext`title, "Explorer" -> 
               OptionValue["Explorer"], "Background" -> White, 
               "Epilog" -> $CellContext`epiThings], Background -> White, 
              FrameMargins -> 50]; $CellContext`appToFname = 
            OptionValue["Append to Filename"]; $CellContext`statesTable = Map[{
               Round[
                Part[#, 1]], 
               Part[#, 2]}& , 
              Part[$CellContext`truncatedStates, 
               Span[1, 
                Min[
                 
                 Length[$CellContext`eigensys], \
$CellContext`maxStatesInTable]]]]; $CellContext`statesTableHeader = {
             "Energy/\!\(\*SuperscriptBox[\(cm\), \(-1\)]\)", 
              "\[Psi]"}; $CellContext`statesTable = 
            Prepend[$CellContext`statesTable, $CellContext`statesTableHeader]; \
$CellContext`statesTable = 
            Grid[$CellContext`statesTable, Frame -> All, Spacings -> {2, 2}, 
              FrameStyle -> Blue, 
              Dividers -> {{False, True, False}, {
                True, True}}]; $CellContext`DefaultIfMissing[
              Pattern[$CellContext`expr, 
               Blank[]]] := If[
              FreeQ[$CellContext`expr, 
               Missing[]], $CellContext`expr, 
              "NA"]; $CellContext`diffTableData = 
            Transpose[{$CellContext`simplerStateLabels, 
               Map[
               Round[#, 
                 1]& , $CellContext`eigenEnergies]}]; $CellContext`diffTable = 
            TableForm[$CellContext`diffTableData, 
              TableHeadings -> {
               None, {"coarse label", 
                 "E/\!\(\*SuperscriptBox[\(cm\), \(-1\)]\)"}}]; \
$CellContext`PrintFun[{"numE", $CellContext`numE}]; $CellContext`nb = 
            CreateDocument[{
               TextCell[
                Style[
                 DisplayForm[
                  RowBox[{
                    
                    SuperscriptBox[$CellContext`host <> 
                    ":" <> $CellContext`ln, "3+"], "(", 
                    SuperscriptBox["f", $CellContext`numE], ")"}]]], "Title", 
                TextAlignment -> Center], 
               TextCell[
                Show[$CellContext`hamImage, ImageSize -> 600], "Output", 
                TextAlignment -> Center], 
               TextCell[
                Select[$CellContext`originalParams, And[# =!= 0, # =!= 0.]& ],
                 "Output", TextAlignment -> Center], 
               TextCell[
               "Calculated Energy Diagram", "Section", TextAlignment -> 
                Center], 
               TextCell[$CellContext`energyDiagram, TextAlignment -> Center], 
               
               TextCell[
               "Multiplet Assignments & Energy Levels", "Section", 
                TextAlignment -> Center], 
               TextCell[
               "The following table shows the multiplet assignments and \
energies of the eigenstates.\nThe energies are rounded to the nearest cm^-1 .\
\nThe coarse label for each state corresponds to the LSJ term with the \
largest contribution to the corresponding eigenvector." <> \
$CellContext`uncertaintySentence, "Text", TextAlignment -> Center], 
               
               TextCell[$CellContext`diffTable, "Output", TextAlignment -> 
                Center], 
               TextCell[
               "Truncated Eigenstates", "Section", TextAlignment -> Center], 
               TextCell[
               "These are some of the resultant eigenstates which add up to \
at least a total probability of " <> 
                ToString[$CellContext`eigenstateTruncationProbability] <> ".",
                 "Text", TextAlignment -> Center], 
               TextCell[$CellContext`statesTable, "Output", TextAlignment -> 
                Center]}, WindowSelected -> True, 
              WindowTitle -> $CellContext`ln <> 
               " in " <> $CellContext`host <> $CellContext`appToFname, 
              WindowSize -> {1600, 800}]; If[
             OptionValue[
             "SaveData"], $CellContext`exportFname = 
              FileNameJoin[{$CellContext`workDir, 
                 OptionValue["OutputDirectory"], $CellContext`ln <> 
                 " in " <> $CellContext`host <> $CellContext`appToFname <> 
                 ".mx"}]; SelectionMove[$CellContext`nb, After, Notebook]; 
             NotebookWrite[$CellContext`nb, 
               Cell["Reload Data", "Section", TextAlignment -> Center]]; 
             NotebookWrite[$CellContext`nb, 
               Cell[
               "{eigenEnergies, ln, simplerStateLabels, eigensys, basis, \
truncatedStates, params} = Import[FileNameJoin[{NotebookDirectory[],\"" <> 
                Part[
                  StringSplit[$CellContext`exportFname, "/"], -1] <> "\"}]];",
                 "Input"]]; NotebookWrite[$CellContext`nb, 
               Cell[
               "Manipulate[First[MinimalBy[truncatedStates, Abs[First[#] - \
energy] &]], {energy,0}]", "Input"]]; 
             SelectionMove[$CellContext`nb, Before, Notebook]; 
             Export[$CellContext`exportFname, {$CellContext`eigenEnergies, \
$CellContext`ln, $CellContext`simplerStateLabels, $CellContext`eigensys, \
$CellContext`basis, $CellContext`truncatedStates, 
                
                Select[$CellContext`originalParams, 
                 And[# =!= 0, # =!= 0.]& ]}]; $CellContext`tinyexportFname = 
              FileNameJoin[{$CellContext`workDir, 
                 OptionValue["OutputDirectory"], $CellContext`ln <> 
                 " in " <> $CellContext`host <> $CellContext`appToFname <> 
                 " - tiny.m"}]; $CellContext`tinyExport = <|
               "ln" -> $CellContext`ln, 
                "eigenEnergies" -> $CellContext`eigenEnergies, 
                "simplerStateLabels" -> $CellContext`simplerStateLabels, 
                "params" -> $CellContext`params|>; 
             Export[$CellContext`tinyexportFname, $CellContext`tinyExport]; 
             Null]; If[
             OptionValue[
             "NotebookSave"], $CellContext`nbFname = 
              FileNameJoin[{$CellContext`workDir, 
                 OptionValue["OutputDirectory"], $CellContext`ln <> 
                 " in " <> $CellContext`host <> $CellContext`appToFname <> 
                 ".nb"}]; $CellContext`PrintFun[
              ">> Saving notebook to ", $CellContext`nbFname, " ..."]; 
             NotebookSave[$CellContext`nb, $CellContext`nbFname]; Null]; 
           Null]; Return[{$CellContext`eigenEnergies, $CellContext`ln, \
$CellContext`simplerStateLabels, $CellContext`eigensys, $CellContext`basis, \
$CellContext`truncatedStates}]; Null]}], "SubValues" -> None, "DefaultValues" -> 
    None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {
     "Sparse" -> True, "Host" -> "LaF3", "SaveData" -> True, "PrintFun" -> 
      Print, "Explorer" -> False, "MakeNotebook" -> True, "NotebookSave" -> 
      True, "EnergiesOnly" -> False, "Remove Kramers" -> True, 
      "Append to Filename" -> "", "Energy Uncertainty in K" -> 1, 
      "OutputDirectory" -> "calcs", "Max Eigenstates in Table" -> 100, 
      "eigenstateTruncationProbability" -> 0.9, 
      "SymmetrySimplifier" -> {
       "C2v", {qlanth`B12 -> 0, qlanth`B14 -> 0, qlanth`B16 -> 0, qlanth`B34 -> 
         0, qlanth`B36 -> 0, qlanth`B56 -> 0, qlanth`S12 -> 0, qlanth`S14 -> 
         0, qlanth`S16 -> 0, qlanth`S22 -> 0, qlanth`S24 -> 0, qlanth`S26 -> 
         0, qlanth`S34 -> 0, qlanth`S36 -> 0, qlanth`S44 -> 0, qlanth`S46 -> 
         0, qlanth`S56 -> 0, qlanth`S66 -> 0, qlanth`T11p -> 0, qlanth`T12 -> 
         0, qlanth`T14 -> 0, qlanth`T15 -> 0, qlanth`T16 -> 0, qlanth`T18 -> 
         0, qlanth`T17 -> 0, qlanth`T19 -> 0}}}, "Attributes" -> {}, 
    "FullName" -> "Global`FastIonSolver"|>, False]]], "Output",
 CellChangeTimes->{{3.925654074610426*^9, 3.925654090951528*^9}, 
   3.925654729597567*^9, 3.9256555355264387`*^9, 3.925655722570672*^9, 
   3.925913629399479*^9, 3.928345206789082*^9, 3.928663079435783*^9, 
   3.929215485823655*^9, 3.9327349272505217`*^9, 3.9327513451957607`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"79945022-82a5-4000-8cdb-c52027e8513c"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "folder", "=", 
   "\"\</Users/juan/ZiaLab/Codebase/qlanth/log/pathfinder-constraints-with-\
spinspin-and-no-truncation/\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fnames", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"StringSplit", "[", 
       RowBox[{"#", ",", "\"\</\>\""}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"-", "1"}], "]"}], "]"}], "&"}], "/@", 
    RowBox[{"FileNames", "[", 
     RowBox[{"folder", "<>", "\"\<*.m\>\""}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fnames", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"StringSplit", "[", 
         RowBox[{"#", ",", "\"\<-\>\""}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "->", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{"folder", ",", "#"}], "}"}], "]"}]}], ")"}], "&"}], "/@", 
    "fnames"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fnames", "=", 
   RowBox[{"Association", "[", "fnames", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"outputSubFolder", "=", "\"\<ql-LaF3-no-truncation\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"doThese", "=", "complementaryNumE"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"includeSpinSpin", "=", "True"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"appendToFname", "=", "\"\< - ql\>\""}], ";"}]}], "Input",
 CellChangeTimes->{
  3.928663116311967*^9, {3.9287004790927467`*^9, 3.928700479233481*^9}, 
   3.9292155044265842`*^9, {3.9327288800028763`*^9, 3.93272888022051*^9}, {
   3.932731862270667*^9, 3.9327318918312387`*^9}, {3.9327336316732407`*^9, 
   3.932733635317754*^9}, {3.932734860473329*^9, 3.932734860616455*^9}, {
   3.932752069616146*^9, 3.932752074453094*^9}, {3.9327536780165*^9, 
   3.932753678192083*^9}, 3.9327572804851713`*^9},
 CellLabel->
  "In[536]:=",ExpressionUUID->"a04e0247-7edd-4de0-8348-8d2e0e8693f5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Not", "[", "\[IndentingNewLine]", 
      RowBox[{"ValueQ", "[", "PrintToOutputNb", "]"}], "\[IndentingNewLine]", 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"PrintToOutputNb", "=", 
       RowBox[{"HelperNotebook", "[", "\"\<Lanthanides : OUT\>\"", "]"}]}], 
      ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ln", "=", 
       RowBox[{"theLanthanides", "[", 
        RowBox[{"[", "numE", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"fname", "=", 
       RowBox[{"fnames", "[", "ln", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"fittedData", "=", 
       RowBox[{"Import", "[", "fname", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"params", "=", 
       RowBox[{"Association", "@", 
        RowBox[{
        "fittedData", "[", "\"\<bestParamsWithConstraints\>\"", "]"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"\[Sigma]RMS", "=", 
       RowBox[{"Round", "[", 
        RowBox[{
         RowBox[{
         "fittedData", "[", "\"\<bestRMSwithFullDiagonalization\>\"", "]"}], 
         ",", "0.01"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"params", "[", "nE", "]"}], "=", "numE"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "eigenEnergies", ",", "ln", ",", "simplerStateLabels", ",", 
         "eigensys", ",", "basis", ",", "truncatedStates"}], "}"}], "=", 
       RowBox[{"FastIonSolver", "[", 
        RowBox[{"params", ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<MakeNotebook\>\"", "->", "True"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<OutputDirectory\>\"", "->", "outputSubFolder"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<PrintFun\>\"", "->", "PrintToOutputNb"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<Append to Filename\>\"", "->", "appendToFname"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<Remove Kramers\>\"", "->", "False"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<Energy Uncertainty in K\>\"", "->", "\[Sigma]RMS"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<AddToExport\>\"", "->", 
          RowBox[{"<|", 
           RowBox[{"\"\<fitResult\>\"", "->", "fittedData"}], "|>"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<Explorer\>\"", "->", "False"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
      "PrintToOutputNb", "[", "\"\<------------------------------------\>\"", 
       "]"}], ";"}], "\[IndentingNewLine]", ")"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"numE", ",", "doThese"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Run", "[", 
   "\"\<~/Scripts/pushover \\\"Calculation of level structures has \
finished.\\\"\>\"", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.91648967675707*^9, 3.9164897022210093`*^9}, {
   3.91649094116313*^9, 3.916490941172171*^9}, {3.916491408924289*^9, 
   3.9164914266771717`*^9}, {3.916491459615327*^9, 3.916491502361117*^9}, {
   3.916491672773436*^9, 3.916491678173745*^9}, {3.9164917267962427`*^9, 
   3.916491727827679*^9}, {3.916491778567657*^9, 3.91649177881106*^9}, {
   3.917449519242374*^9, 3.917449521708144*^9}, {3.9174495679338923`*^9, 
   3.91744957606616*^9}, {3.917449616004835*^9, 3.917449616324869*^9}, 
   3.917464724988861*^9, {3.9174648208486567`*^9, 3.917464842046617*^9}, {
   3.918225326306619*^9, 3.918225331983157*^9}, 3.918225408427301*^9, {
   3.918225458895665*^9, 3.918225479317298*^9}, {3.918226455599437*^9, 
   3.918226455996366*^9}, {3.918229887139844*^9, 3.918229892555298*^9}, {
   3.9182302580189*^9, 3.918230259625183*^9}, {3.918231407856454*^9, 
   3.91823140824189*^9}, {3.918249917284615*^9, 3.918249917708682*^9}, {
   3.920816180336082*^9, 3.92081619577074*^9}, {3.920816268812521*^9, 
   3.920816270899129*^9}, {3.920817944796561*^9, 3.920817949094666*^9}, {
   3.9208180024394913`*^9, 3.920818003319161*^9}, 3.920819312856081*^9, {
   3.920819347334916*^9, 3.920819347398836*^9}, {3.920819379711658*^9, 
   3.920819406638623*^9}, {3.920819525409727*^9, 3.920819525780384*^9}, {
   3.920819603488413*^9, 3.920819645097327*^9}, {3.9208929367046337`*^9, 
   3.920892939180729*^9}, {3.920893038005046*^9, 3.9208930550738993`*^9}, {
   3.9208931257062607`*^9, 3.920893146592421*^9}, {3.9208931812897873`*^9, 
   3.920893188103641*^9}, {3.92089325537055*^9, 3.920893255432215*^9}, {
   3.920893299717533*^9, 3.920893393782424*^9}, {3.920893441621188*^9, 
   3.920893518164655*^9}, {3.920893784577766*^9, 3.920893790591382*^9}, 
   3.920893826371751*^9, {3.9209706360386677`*^9, 3.9209706360832653`*^9}, {
   3.920970707721284*^9, 3.9209707276440067`*^9}, {3.9209733286790752`*^9, 
   3.92097334312868*^9}, {3.9209734586128798`*^9, 3.9209734844675417`*^9}, {
   3.920974485874983*^9, 3.920974494607912*^9}, {3.9209745250029097`*^9, 
   3.920974525734301*^9}, {3.921161529571085*^9, 3.921161584118039*^9}, {
   3.921163080948226*^9, 3.9211630840871687`*^9}, {3.921163122038287*^9, 
   3.921163138623489*^9}, {3.921163654825966*^9, 3.9211637048280163`*^9}, {
   3.9211644163508177`*^9, 3.921164431132815*^9}, {3.923756042344832*^9, 
   3.923756051696321*^9}, {3.924942987139398*^9, 3.924942987385028*^9}, {
   3.9253066106114273`*^9, 3.9253066131950493`*^9}, {3.925306645699527*^9, 
   3.925306657173751*^9}, {3.925640907438347*^9, 3.925641055028414*^9}, {
   3.925641088808805*^9, 3.925641110310431*^9}, {3.92564179804064*^9, 
   3.9256418065579367`*^9}, {3.925642059397255*^9, 3.925642082095696*^9}, {
   3.9256421844380836`*^9, 3.925642213822744*^9}, {3.925642319724859*^9, 
   3.925642320833761*^9}, {3.925642360264041*^9, 3.9256423688976507`*^9}, {
   3.925649048681294*^9, 3.9256490530284443`*^9}, {3.925655552600778*^9, 
   3.925655555402925*^9}, {3.925655879403335*^9, 3.925655924502901*^9}, {
   3.925656024515353*^9, 3.92565603397396*^9}, 3.925656192511855*^9, {
   3.9259136369010363`*^9, 3.925913639016296*^9}, {3.925914704322838*^9, 
   3.9259147202738533`*^9}, {3.92591504391926*^9, 3.9259150439891167`*^9}, {
   3.9259152687791853`*^9, 3.925915268891047*^9}, {3.92591544495511*^9, 
   3.925915445192004*^9}, {3.925915489960761*^9, 3.9259155079459143`*^9}, {
   3.92591564922896*^9, 3.9259156524747963`*^9}, {3.925915759829956*^9, 
   3.925915802534134*^9}, {3.925916154674994*^9, 3.92591615474082*^9}, {
   3.9259164502456923`*^9, 3.925916450418725*^9}, {3.9286634326864653`*^9, 
   3.928663451562409*^9}, {3.9286635061202602`*^9, 3.92866350637821*^9}, {
   3.9287004917732058`*^9, 3.928700495281272*^9}, {3.9292965325371513`*^9, 
   3.9292965625600758`*^9}, {3.9292965977542152`*^9, 
   3.9292965979109497`*^9}, {3.929296838039584*^9, 3.9292968486601057`*^9}, {
   3.929297362543756*^9, 3.929297365334135*^9}, {3.929297405867717*^9, 
   3.929297417913275*^9}, {3.929298545089686*^9, 3.929298548344021*^9}, {
   3.9292986824844522`*^9, 3.929298682675535*^9}, {3.932727730387245*^9, 
   3.932727740869802*^9}, {3.932727881915472*^9, 3.9327278820307293`*^9}, {
   3.932728408926159*^9, 3.93272840909521*^9}, {3.932728879197549*^9, 
   3.932728882005475*^9}, {3.932752133976077*^9, 3.932752151347609*^9}, {
   3.93275399708521*^9, 3.9327539980942183`*^9}, {3.932757292348201*^9, 
   3.9327572932511063`*^9}},
 CellLabel->
  "In[544]:=",ExpressionUUID->"6009bbd4-fdd1-4e00-9e5b-df2ea09d2617"],

Cell[BoxData[
 TemplateBox[{
  "Eigensystem", "arh", 
   "\"Because finding \\!\\(\\*RowBox[{\\\"1001\\\"}]\\) out of the \
\\!\\(\\*RowBox[{\\\"1001\\\"}]\\) eigenvalues and/or eigenvectors is likely \
to be faster with dense matrix methods, the sparse input matrix will be \
converted. If fewer eigenvalues and/or eigenvectors would be sufficient, \
consider restricting this number using the second argument to \
\\!\\(\\*RowBox[{\\\"Eigensystem\\\"}]\\).\"", 2, 545, 40, 
   19714889763830768362, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.932757322031228*^9, 3.932757350267384*^9}},
 CellLabel->
  "During evaluation of \
In[544]:=",ExpressionUUID->"008fa4a5-7d8a-4943-b0b9-b5771e265ac7"],

Cell[BoxData[
 TemplateBox[{
  "Eigensystem", "arh", 
   "\"Because finding \\!\\(\\*RowBox[{\\\"1001\\\"}]\\) out of the \
\\!\\(\\*RowBox[{\\\"1001\\\"}]\\) eigenvalues and/or eigenvectors is likely \
to be faster with dense matrix methods, the sparse input matrix will be \
converted. If fewer eigenvalues and/or eigenvectors would be sufficient, \
consider restricting this number using the second argument to \
\\!\\(\\*RowBox[{\\\"Eigensystem\\\"}]\\).\"", 2, 545, 41, 
   19714889763830768362, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.932757322031228*^9, 3.932757356134739*^9},
 CellLabel->
  "During evaluation of \
In[544]:=",ExpressionUUID->"f606d5e8-d22c-462e-9533-d904657c1950"],

Cell[BoxData[
 TemplateBox[{
  "Eigensystem", "arh", 
   "\"Because finding \\!\\(\\*RowBox[{\\\"2002\\\"}]\\) out of the \
\\!\\(\\*RowBox[{\\\"2002\\\"}]\\) eigenvalues and/or eigenvectors is likely \
to be faster with dense matrix methods, the sparse input matrix will be \
converted. If fewer eigenvalues and/or eigenvectors would be sufficient, \
consider restricting this number using the second argument to \
\\!\\(\\*RowBox[{\\\"Eigensystem\\\"}]\\).\"", 2, 545, 42, 
   19714889763830768362, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.932757322031228*^9, 3.9327573638188057`*^9},
 CellLabel->
  "During evaluation of \
In[544]:=",ExpressionUUID->"a6df88c5-a9b4-413c-8412-86e53b1e2828"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Eigensystem\\\", \\\"::\
\\\", \\\"arh\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 545, 43, 19714889763830768362, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.932757322031228*^9, 3.9327573638697567`*^9},
 CellLabel->
  "During evaluation of \
In[544]:=",ExpressionUUID->"046a1e3d-3170-4558-a78c-8a100497349a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Calculating the Magnetic Dipole Transition Rates and Oscillator Strengths\
\>", "Section",
 CellChangeTimes->{{3.914415167394353*^9, 3.9144151736446247`*^9}, 
   3.9144248806074*^9, {3.914424932918448*^9, 3.914424933287858*^9}, {
   3.914425829252626*^9, 3.914425829316082*^9}, {3.914426344734047*^9, 
   3.91442634537435*^9}, 3.914432380266061*^9, {3.914432646521472*^9, 
   3.9144326484282837`*^9}, 3.914597088577465*^9, {3.914597644484715*^9, 
   3.914597646149692*^9}, {3.914939927291972*^9, 3.914939927447847*^9}, {
   3.914940404947938*^9, 3.914940406301906*^9}, {3.915011642011705*^9, 
   3.915011645173723*^9}, {3.91501208036425*^9, 3.915012090910236*^9}, {
   3.915012144941284*^9, 3.915012146120387*^9}, {3.9150122137336392`*^9, 
   3.915012214310672*^9}, {3.915396622915797*^9, 3.915396665928805*^9}, 
   3.915469322039455*^9, {3.915531792045342*^9, 3.915531792356843*^9}, {
   3.9155325916535997`*^9, 3.915532592173555*^9}, {3.915534173103706*^9, 
   3.915534174795642*^9}, {3.915566909430855*^9, 3.915566910027603*^9}, {
   3.915567522856555*^9, 3.915567524919497*^9}, {3.916087017460621*^9, 
   3.916087044322266*^9}, {3.916332866922331*^9, 
   3.916332889764168*^9}},ExpressionUUID->"d8eb5b8f-6bce-4408-ad57-\
c67898c1dc01"],

Cell[BoxData[
 RowBox[{"?", "MagneticDipoleTransitions"}]], "Input",
 CellChangeTimes->{3.916401908899644*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"dbfda0db-4b46-4a0d-8b01-ffe9a209fb85"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"MagneticDipoleTransitions[params, fname] calculates \
the magnetic dipole transition rates and oscillator strengths for the \
lanthanide ion describe by params. This is done using the data saved in fname \
which corresponds to output files from FastIonSolverLaF3. This function saves \
a tabular file, a raw data file, and a CSV file. The tabular file contains \
the following columns: \\n    \[Psi]i:simple, (* main contribution to the \
wavefuction |i>*)\\n    \[Psi]f:simple, (* main contribution to the \
wavefuction |j>*)\\n    \[Psi]i:idx,    (* index of the wavefuction |i>*)\\n  \
  \[Psi]f:idx,    (* index of the wavefuction |j>*)\\n    Ei/K,           (* \
energy of the initial state in K *)\\n    Ef/K,           (* energy of the \
final state in K *)\\n    \[Lambda]/nm,   (* transition wavelength in nm \
*)\\n    \[CapitalDelta]\[Lambda]/nm, (* uncertainty in the transition \
wavelength in nm *)\\n    \[Tau]/s,       (* radiative lifetime in s *)\\n    \
AMD/s^-1        (* magnetic dipole transition rate in s^-1 *)\\n\\nThe raw \
data file contains the following keys: \\n    - Line Strength, (* Line \
strength array *)\\n    - AMD, (* Magnetic dipole transition rates in 1/s \
*)\\n    - fMD, (* Oscillator strengths from ground to excited states *)\\n   \
 - Radiative lifetimes, (* Radiative lifetimes in s *)\\n    - Transition \
Energies / K, (* Transition energies in K *)\\n    - Transition Wavelengths \
in nm. (* Transition wavelengths in nm *)\\n\\nThe CSV file contains the same \
information as the tabular file. \\n\\nThe function also creates a notebook \
with a Manipulate that allows the user to select a wavelength interval and a \
lifetime power of ten. The results notebook is saved in the examples \
directory.\\n\\nThe function takes the following options: \\n    - \\\"Make \
Notebook\\\" -> True or False. If True, the results notebook is created. \
Default is True.\\n    - \\\"Print Function\\\" -> PrintTemporary or Print. \
The function used to print the progress of the calculation. Default is \
PrintTemporary.\\n    - \\\"Host\\\" -> \\\"CrystalHost\\\". The host \
material. Default is LaF3.\\n    - \\\"Wavelength Range\\\" -> {50,2000}. The \
range of wavelengths in nm for the Manipulate object in the created notebook. \
Default is {50,2000}.\\n\\nThe function returns an association containing the \
following keys: Line Strength, AMD, fMD, Radiative lifetimes, Transition \
Energies / K, Transition Wavelengths in nm.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"MagneticDipoleTransitions", "[", 
                    RowBox[{"params_Association", ",", "fname_String", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"numE", ",", "host", ",", "PrintFun", ",", 
                    "\[Lambda]Range", ",", "header", ",", "ln", ",", 
                    "energy\[CapitalDelta]"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"paramKeys", "=", 
                    RowBox[{"Keys", "[", "params", "]"}]}], ";", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"paramKeys", ",", "nE"}], "]"}], ",", 
                    RowBox[{"numE", "=", 
                    RowBox[{"params", "[", "nE", "]"}]}], ",", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"paramKeys", ",", "\"nE\""}], "]"}], ",", 
                    RowBox[{"numE", "=", 
                    RowBox[{"params", "[", "\"nE\"", "]"}]}], ",", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"paramKeys", ",", "\"numE\""}], "]"}], ",", 
                    RowBox[{"numE", "=", 
                    RowBox[{"params", "[", "\"numE\"", "]"}]}], ",", "True", 
                    ",", 
                    RowBox[{
                    
                    RowBox[{"Print", "[", 
                    "\"The number of electrons was not specified in params, \
exiting ...\"", "]"}], ";", 
                    RowBox[{"Return", "[", "Null", "]"}], ";"}]}], "]"}], ";", 
                    RowBox[{"Print", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"numE\"", ",", "numE"}], "}"}], "]"}], ";", 
                    RowBox[{"host", "=", 
                    RowBox[{"OptionValue", "[", "\"Host\"", "]"}]}], ";", 
                    RowBox[{"\[Lambda]Range", "=", 
                    
                    RowBox[{"OptionValue", "[", "\"Wavelength Range\"", 
                    "]"}]}], ";", 
                    RowBox[{"PrintFun", "=", 
                    RowBox[{"OptionValue", "[", "\"Print Function\"", "]"}]}],
                     ";", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[Lambda]min", ",", "\[Lambda]max"}], "}"}], "=", 
                    
                    RowBox[{"OptionValue", "[", "\"Wavelength Range\"", 
                    "]"}]}], ";", 
                    RowBox[{"header", "=", 
                    RowBox[{"{", 
                    
                    RowBox[{"\"\[Psi]i:simple\"", ",", "\"\[Psi]f:simple\"", 
                    ",", "\"\[Psi]i:idx\"", ",", "\"\[Psi]f:idx\"", ",", 
                    "\"Ei/K\"", ",", "\"Ef/K\"", ",", "\"\[Lambda]/nm\"", ",",
                     "\"\[CapitalDelta]\[Lambda]/nm\"", ",", "\"\[Tau]/s\"", 
                    ",", "\"AMD/s^-1\""}], "}"}]}], ";", 
                    RowBox[{"ln", "=", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"\"Ce\"", ",", "\"Pr\"", ",", "\"Nd\"", ",", 
                    "\"Pm\"", ",", "\"Sm\"", ",", "\"Eu\"", ",", "\"Gd\"", 
                    ",", "\"Tb\"", ",", "\"Dy\"", ",", "\"Ho\"", ",", 
                    "\"Er\"", ",", "\"Tm\"", ",", "\"Yb\""}], "}"}], 
                    "\[LeftDoubleBracket]", "numE", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"eigenEnergies", ",", "ln", ",", 
                    "simplerStateLabels", ",", "eigensys", ",", "basis", ",", 
                    "truncatedStates", ",", "fittedParams"}], "}"}], "=", 
                    RowBox[{"Import", "[", "fname", "]"}]}], ";", 
                    RowBox[{"Clear", "[", "truncatedStates", "]"}], ";", 
                    RowBox[{"Clear", "[", "basis", "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"OddQ", "[", "numE", "]"}], ",", 
                    RowBox[{
                    RowBox[{"eigenEnergies", "=", 
                    RowBox[{"eigenEnergies", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", "All", ";;", "2"}], 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"simplerStateLabels", "=", 
                    RowBox[{"simplerStateLabels", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", "All", ";;", "2"}], 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"eigensys", "=", 
                    RowBox[{"eigensys", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", "All", ";;", "2"}], 
                    "\[RightDoubleBracket]"}]}], ";"}]}], "]"}], ";", 
                    RowBox[{"eigenEnergies", "=", 
                    RowBox[{"eigenEnergies", "-", 
                    
                    RowBox[{"eigenEnergies", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{"magIon", "=", 
                    RowBox[{"Association", "[", "]"}]}], ";", 
                    
                    RowBox[{"PrintFun", "[", 
                    "\"Calculating the M1 spontaneous transition rates ...\"",
                     "]"}], ";", 
                    RowBox[{
                    RowBox[{"magIon", "[", "\"AMD\"", "]"}], "=", 
                    RowBox[{"MagDipoleRates", "[", 
                    RowBox[{"eigensys", ",", "numE", ",", 
                    RowBox[{"\"Units\"", "\[Rule]", "\"SI\""}], ",", 
                    RowBox[{"\"Lifetime\"", "\[Rule]", "False"}]}], "]"}]}], 
                    ";", 
                    RowBox[{
                    RowBox[{"magIon", "[", "\"AMD\"", "]"}], "=", 
                    RowBox[{
                    RowBox[{"magIon", "[", "\"AMD\"", "]"}], "/.", 
                    "\[VeryThinSpace]", 
                    RowBox[{"{", 
                    RowBox[{"0.`", "\[Rule]", "Indeterminate"}], "}"}]}]}], 
                    ";", 
                    
                    RowBox[{"PrintFun", "[", 
                    "\"Calculating the oscillator strength for transitions \
from the ground state ...\"", "]"}], ";", 
                    RowBox[{
                    RowBox[{"magIon", "[", "\"fMD\"", "]"}], "=", 
                    RowBox[{"GroundMagDipoleOscillatorStrength", "[", 
                    RowBox[{"eigensys", ",", "numE"}], "]"}]}], ";", 
                    
                    RowBox[{"PrintFun", "[", 
                    "\"Calculating the natural radiative lifetimes ...\"", 
                    "]"}], ";", 
                    RowBox[{
                    RowBox[{"magIon", "[", "\"Radiative lifetimes\"", "]"}], 
                    "=", 
                    FractionBox["1.`", 
                    RowBox[{"magIon", "[", "\"AMD\"", "]"}]]}], ";", 
                    
                    RowBox[{"PrintFun", "[", 
                    "\"Calculating the transition energies in K ...\"", "]"}],
                     ";", 
                    RowBox[{"transitionEnergies", "=", 
                    RowBox[{"Outer", "[", 
                    RowBox[{"Subtract", ",", 
                    RowBox[{"First", "/@", "eigensys"}], ",", 
                    RowBox[{"First", "/@", "eigensys"}]}], "]"}]}], ";", 
                    RowBox[{
                    
                    RowBox[{"magIon", "[", "\"Transition Energies / K\"", 
                    "]"}], "=", 
                    RowBox[{"ReplaceDiagonal", "[", 
                    RowBox[{"transitionEnergies", ",", "Indeterminate"}], 
                    "]"}]}], ";", 
                    
                    RowBox[{"PrintFun", "[", 
                    "\"Calculating the transition wavelengths in nm ...\"", 
                    "]"}], ";", 
                    RowBox[{
                    
                    RowBox[{"magIon", "[", "\"Transition Wavelengths in nm\"",
                     "]"}], "=", 
                    FractionBox[
                    SuperscriptBox["10", "7"], 
                    
                    RowBox[{"magIon", "[", "\"Transition Energies / K\"", 
                    "]"}]]}], ";", 
                    RowBox[{"energy\[CapitalDelta]", "=", 
                    
                    RowBox[{"OptionValue", "[", "\"Energy Uncertainty in K\"",
                     "]"}]}], ";", 
                    RowBox[{"PrintFun", "[", 
                    RowBox[{
                    "\"Estimating the uncertainties in \[Lambda]/nm assuming \
a \"", "<>", 
                    RowBox[{"ToString", "[", "energy\[CapitalDelta]", "]"}], 
                    "<>", "\" K uncertainty in energies.\""}], "]"}], ";", 
                    RowBox[{"\[Lambda]uncertainty", "=", 
                    FractionBox[
                    RowBox[{"energy\[CapitalDelta]", " ", 
                    SqrtBox["2.`"], " ", 
                    SuperscriptBox[
                    
                    RowBox[{"magIon", "[", "\"Transition Wavelengths in nm\"",
                     "]"}], "2"]}], 
                    SuperscriptBox["10", "7"]]}], ";", 
                    
                    RowBox[{"PrintFun", "[", 
                    "\"Formatting a tabular output file ...\"", "]"}], ";", 
                    RowBox[{"startTime", "=", "Now"}], ";", 
                    RowBox[{"numEigenvecs", "=", 
                    RowBox[{"Length", "[", "eigensys", "]"}]}], ";", 
                    RowBox[{"roundedEnergies", "=", 
                    RowBox[{"Round", "[", 
                    RowBox[{"eigenEnergies", ",", "1.`"}], "]"}]}], ";", 
                    RowBox[{"simpleFromTo", "=", 
                    RowBox[{"Outer", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
                    "simplerStateLabels", ",", "simplerStateLabels"}], 
                    "]"}]}], ";", 
                    RowBox[{"fromTo", "=", 
                    RowBox[{"Outer", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
                    RowBox[{"Range", "[", "numEigenvecs", "]"}], ",", 
                    RowBox[{"Range", "[", "numEigenvecs", "]"}]}], "]"}]}], 
                    ";", 
                    RowBox[{"energyPairs", "=", 
                    RowBox[{"Outer", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
                    "roundedEnergies", ",", "roundedEnergies"}], "]"}]}], ";", 
                    RowBox[{"allTransitions", "=", 
                    RowBox[{"{", 
                    
                    RowBox[{"simpleFromTo", ",", "fromTo", ",", "energyPairs",
                     ",", 
                    
                    RowBox[{"magIon", "[", "\"Transition Wavelengths in nm\"",
                     "]"}], ",", "\[Lambda]uncertainty", ",", 
                    RowBox[{"magIon", "[", "\"AMD\"", "]"}], ",", 
                    RowBox[{"magIon", "[", "\"Radiative lifetimes\"", "]"}]}],
                     "}"}]}], ";", 
                    RowBox[{"allTransitions", "=", 
                    RowBox[{"Flatten", "/@", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"#1", ",", "1"}], "]"}], "&"}], ")"}], "/@", 
                    "allTransitions"}], "]"}]}]}], ";", 
                    RowBox[{"allTransitions", "=", 
                    RowBox[{"Select", "[", 
                    RowBox[{"allTransitions", ",", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "\[NotEqual]", 
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], "&"}]}], "]"}]}], ";", 
                    RowBox[{"allTransitions", "=", 
                    RowBox[{"Select", "[", 
                    RowBox[{"allTransitions", ",", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "10", 
                    "\[RightDoubleBracket]"}], ">", "0"}], "&"}]}], "]"}]}], 
                    ";", 
                    RowBox[{"allTransitions", "=", 
                    RowBox[{"Transpose", "[", "allTransitions", "]"}]}], ";", 
                    
                    RowBox[{"endTime", "=", "Now"}], ";", 
                    RowBox[{"PrintFun", "[", 
                    RowBox[{"\">> Formatting the tabular output took \"", ",", 
                    RowBox[{"QuantityMagnitude", "[", 
                    RowBox[{
                    RowBox[{"endTime", "-", "startTime"}], ",", 
                    "\"Seconds\""}], "]"}], ",", "\" seconds.\""}], "]"}], 
                    ";", 
                    
                    RowBox[{"PrintFun", "[", 
                    "\"Rounding wavelengths according to estimated \
uncertainties ...\"", "]"}], ";", 
                    RowBox[{"starTime", "=", "Now"}], ";", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"roundedWaves", ",", "roundedDeltas"}], "}"}], 
                    "=", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"MapThread", "[", 
                    RowBox[{"RoundValueWithUncertainty", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"allTransitions", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}], ",", 
                    
                    RowBox[{"allTransitions", "\[LeftDoubleBracket]", "8", 
                    "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], "]"}]}], ";", 
                    RowBox[{
                    
                    RowBox[{"allTransitions", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}], "=", "roundedWaves"}], ";", 
                    RowBox[{
                    
                    RowBox[{"allTransitions", "\[LeftDoubleBracket]", "8", 
                    "\[RightDoubleBracket]"}], "=", "roundedDeltas"}], ";", 
                    RowBox[{"endTime", "=", "Now"}], ";", 
                    RowBox[{"PrintFun", "[", 
                    RowBox[{"\">> Rounding the wavelengths took \"", ",", 
                    RowBox[{"QuantityMagnitude", "[", 
                    RowBox[{
                    RowBox[{"endTime", "-", "startTime"}], ",", 
                    "\"Seconds\""}], "]"}], ",", "\" seconds.\""}], "]"}], 
                    ";", 
                    
                    RowBox[{"PrintFun", "[", 
                    "\"Rounding lifetimes and transition rates to three \
significant figures ...\"", "]"}], ";", 
                    RowBox[{"startTime", "=", "Now"}], ";", 
                    RowBox[{
                    
                    RowBox[{"allTransitions", "\[LeftDoubleBracket]", "9", 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"RoundToSignificantFigures", "[", 
                    RowBox[{"#1", ",", "3"}], "]"}], "&"}], ")"}], "/@", 
                    
                    RowBox[{"allTransitions", "\[LeftDoubleBracket]", "9", 
                    "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{
                    
                    RowBox[{"allTransitions", "\[LeftDoubleBracket]", "10", 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"RoundToSignificantFigures", "[", 
                    RowBox[{"#1", ",", "3"}], "]"}], "&"}], ")"}], "/@", 
                    
                    RowBox[{"allTransitions", "\[LeftDoubleBracket]", "10", 
                    "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{"finalTable", "=", 
                    RowBox[{"Transpose", "[", "allTransitions", "]"}]}], ";", 
                    
                    RowBox[{"finalTable", "=", 
                    RowBox[{"Prepend", "[", 
                    RowBox[{"finalTable", ",", "header"}], "]"}]}], ";", 
                    RowBox[{"endTime", "=", "Now"}], ";", 
                    RowBox[{"PrintFun", "[", 
                    
                    RowBox[{
                    "\">> Rounding the lifetimes and transition rates took \
\"", ",", 
                    RowBox[{"QuantityMagnitude", "[", 
                    RowBox[{
                    RowBox[{"endTime", "-", "startTime"}], ",", 
                    "\"Seconds\""}], "]"}], ",", "\" seconds.\""}], "]"}], 
                    ";", 
                    RowBox[{"basename", "=", 
                    
                    RowBox[{"ln", "<>", "\" in \"", "<>", "host", "<>", 
                    "\" - ql - \"", "<>", "\"M1 - tabular.zip\""}]}], ";", 
                    RowBox[{"exportFname", "=", 
                    RowBox[{"FileNameJoin", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"DirectoryName", "[", "fname", "]"}], ",", 
                    "basename"}], "}"}], "]"}]}], ";", 
                    RowBox[{"PrintFun", "[", 
                    
                    RowBox[{"\"Exporting tabular data to \"", "<>", 
                    "exportFname", "<>", "\" ...\""}], "]"}], ";", 
                    RowBox[{"starTime", "=", "Now"}], ";", 
                    RowBox[{"exportKey", "=", 
                    RowBox[{"StringReplace", "[", 
                    RowBox[{"basename", ",", 
                    RowBox[{"\".zip\"", "\[Rule]", "\".m\""}]}], "]"}]}], ";", 
                    RowBox[{"Export", "[", 
                    RowBox[{"exportFname", ",", 
                    RowBox[{"Association", "[", 
                    RowBox[{"exportKey", "\[Rule]", "finalTable"}], "]"}]}], 
                    "]"}], ";", 
                    RowBox[{"endTime", "=", "Now"}], ";", 
                    RowBox[{"PrintFun", "[", 
                    RowBox[{"\">> Exporting the tabular data took \"", ",", 
                    RowBox[{"QuantityMagnitude", "[", 
                    RowBox[{
                    RowBox[{"endTime", "-", "starTime"}], ",", 
                    "\"Seconds\""}], "]"}], ",", "\" seconds.\""}], "]"}], 
                    ";", 
                    RowBox[{"basename", "=", 
                    
                    RowBox[{"ln", "<>", "\" in \"", "<>", "host", "<>", 
                    "\" - ql - \"", "<>", "\"M1 - raw.zip\""}]}], ";", 
                    RowBox[{"rawexportFname", "=", 
                    RowBox[{"FileNameJoin", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"DirectoryName", "[", "fname", "]"}], ",", 
                    "basename"}], "}"}], "]"}]}], ";", 
                    RowBox[{"starTime", "=", "Now"}], ";", 
                    RowBox[{"PrintFun", "[", 
                    
                    RowBox[{"\"Exporting raw data as an association to \"", 
                    "<>", "exportFname", "<>", "\" ...\""}], "]"}], ";", 
                    RowBox[{"rawexportKey", "=", 
                    RowBox[{"StringReplace", "[", 
                    RowBox[{"basename", ",", 
                    RowBox[{"\".zip\"", "\[Rule]", "\".m\""}]}], "]"}]}], ";", 
                    RowBox[{"Export", "[", 
                    RowBox[{"rawexportFname", ",", 
                    RowBox[{"Association", "[", 
                    RowBox[{"rawexportKey", "\[Rule]", "magIon"}], "]"}]}], 
                    "]"}], ";", 
                    RowBox[{"endTime", "=", "Now"}], ";", 
                    RowBox[{"PrintFun", "[", 
                    RowBox[{"\">> Exporting the raw data took \"", ",", 
                    RowBox[{"QuantityMagnitude", "[", 
                    RowBox[{
                    RowBox[{"endTime", "-", "starTime"}], ",", 
                    "\"Seconds\""}], "]"}], ",", "\" seconds.\""}], "]"}], 
                    ";", 
                    
                    RowBox[{"PrintFun", "[", 
                    "\"Formatting and exporting a CSV output...\"", "]"}], 
                    ";", 
                    RowBox[{"startTime", "=", "Now"}], ";", 
                    RowBox[{"csvOut", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"StringJoin", "[", 
                    RowBox[{"Riffle", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"#1", ",", "CForm"}], "]"}], "&"}], ")"}], "/@", 
                    
                    RowBox[{"finalTable", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}], ",", "\",\""}], "]"}], "]"}],
                     ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", 
                    RowBox[{"Length", "[", "finalTable", "]"}]}], "}"}]}], 
                    "]"}]}], ";", 
                    RowBox[{"csvOut", "=", 
                    RowBox[{"StringJoin", "[", 
                    RowBox[{"Riffle", "[", 
                    RowBox[{"csvOut", ",", "\"\\n\""}], "]"}], "]"}]}], ";", 
                    RowBox[{"endTime", "=", "Now"}], ";", 
                    RowBox[{"PrintFun", "[", 
                    RowBox[{"\">> Formatting the CSV output took \"", ",", 
                    RowBox[{"QuantityMagnitude", "[", 
                    RowBox[{
                    RowBox[{"endTime", "-", "startTime"}], ",", 
                    "\"Seconds\""}], "]"}], ",", "\" seconds.\""}], "]"}], 
                    ";", 
                    RowBox[{"basename", "=", 
                    
                    RowBox[{"ln", "<>", "\" in \"", "<>", "host", "<>", 
                    "\" - ql - \"", "<>", "\"M1.csv\""}]}], ";", 
                    RowBox[{"exportFname", "=", 
                    RowBox[{"FileNameJoin", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"DirectoryName", "[", "fname", "]"}], ",", 
                    "basename"}], "}"}], "]"}]}], ";", 
                    RowBox[{"PrintFun", "[", 
                    
                    RowBox[{"\"Exporting csv data to \"", "<>", "exportFname",
                     "<>", "\" ...\""}], "]"}], ";", 
                    RowBox[{"starTime", "=", "Now"}], ";", 
                    RowBox[{"Export", "[", 
                    RowBox[{"exportFname", ",", "csvOut", ",", "\"Text\""}], 
                    "]"}], ";", 
                    RowBox[{"endTime", "=", "Now"}], ";", 
                    RowBox[{"PrintFun", "[", 
                    RowBox[{"\">> Exporting the csv data took \"", ",", 
                    RowBox[{"QuantityMagnitude", "[", 
                    RowBox[{
                    RowBox[{"endTime", "-", "starTime"}], ",", 
                    "\"Seconds\""}], "]"}], ",", "\" seconds.\""}], "]"}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "\"Make Notebook\"", "]"}], 
                    ",", 
                    RowBox[{
                    
                    RowBox[{"PrintFun", "[", 
                    "\"Creating a notebook with a Manipulate to select a \
wavelength interval and a lifetime power of ten ...\"", "]"}], ";", 
                    RowBox[{"startTime", "=", "Now"}], ";", 
                    RowBox[{"finalTable", "=", 
                    RowBox[{"Rest", "[", "finalTable", "]"}]}], ";", 
                    RowBox[{"finalTable", "=", 
                    RowBox[{"SortBy", "[", 
                    RowBox[{"finalTable", ",", 
                    RowBox[{
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}], "&"}]}], "]"}]}], ";", 
                    RowBox[{"opticalTable", "=", 
                    RowBox[{"Select", "[", 
                    RowBox[{"finalTable", ",", 
                    RowBox[{
                    RowBox[{"\[Lambda]min", "\[LessEqual]", 
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    "\[Lambda]max"}], "&"}]}], "]"}]}], ";", 
                    RowBox[{"pows", "=", 
                    RowBox[{"Sort", "[", 
                    RowBox[{"DeleteDuplicates", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"MantissaExponent", "[", 
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "9", 
                    "\[RightDoubleBracket]"}], "]"}], "\[LeftDoubleBracket]", 
                    "2", "\[RightDoubleBracket]"}], "-", "1"}], "&"}], ")"}], 
                    "/@", "opticalTable"}], "]"}], "]"}]}], ";", 
                    RowBox[{"man", "=", 
                    RowBox[{"Manipulate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[Lambda]min", ",", "\[Lambda]max"}], "}"}], "=",
                     "\[Lambda]int"}], ";", 
                    RowBox[{"table", "=", 
                    RowBox[{"Select", "[", 
                    RowBox[{"opticalTable", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"\[Lambda]min", "\[LessEqual]", 
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    "\[Lambda]max"}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"MantissaExponent", "[", 
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "9", 
                    "\[RightDoubleBracket]"}], "]"}], "\[LeftDoubleBracket]", 
                    "2", "\[RightDoubleBracket]"}], "-", "1"}], "\[Equal]", 
                    "log10\[Tau]"}]}], "&"}]}], "]"}]}], ";", 
                    RowBox[{"tab", "=", 
                    RowBox[{"TableForm", "[", 
                    RowBox[{"table", ",", 
                    RowBox[{"TableHeadings", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "header"}], "}"}]}]}], "]"}]}], ";", 
                    
                    RowBox[{"Column", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"\[Lambda]min=\"", "<>", 
                    RowBox[{"ToString", "[", "\[Lambda]min", "]"}], "<>", 
                    "\" nm\""}], ",", 
                    RowBox[{"\"\[Lambda]max=\"", "<>", 
                    RowBox[{"ToString", "[", "\[Lambda]max", "]"}], "<>", 
                    "\" nm\""}], ",", "log10\[Tau]"}], "}"}], ",", "tab"}], 
                    "}"}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"\[Lambda]int", ",", "\[Lambda]Range", ",", 
                    "\"\[Lambda] interval\""}], "}"}], ",", 
                    
                    RowBox[{"\[Lambda]Range", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    
                    RowBox[{"\[Lambda]Range", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", "50", ",", 
                    RowBox[{"ControlType", "\[Rule]", "IntervalSlider"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"log10\[Tau]", ",", 
                    RowBox[{"pows", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], "}"}], 
                    ",", "pows"}], "}"}], ",", 
                    RowBox[{"TrackedSymbols", "\[RuleDelayed]", 
                    RowBox[{"{", 
                    RowBox[{"\[Lambda]int", ",", "log10\[Tau]"}], "}"}]}], 
                    ",", 
                    RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]}],
                     ";", 
                    RowBox[{"nb", "=", 
                    RowBox[{"CreateDocument", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"TextCell", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"DisplayForm", "[", 
                    RowBox[{"RowBox", "[", 
                    RowBox[{"{", 
                    
                    RowBox[{"\"Magnetic Dipole Transitions\"", ",", "\"\\n\"",
                     ",", 
                    RowBox[{"SuperscriptBox", "[", 
                    RowBox[{
                    RowBox[{"host", "<>", "\":\"", "<>", "ln"}], ",", 
                    "\"3+\""}], "]"}], ",", "\"(\"", ",", 
                    RowBox[{"SuperscriptBox", "[", 
                    RowBox[{"\"f\"", ",", "numE"}], "]"}], ",", "\")\""}], 
                    "}"}], "]"}], "]"}], "]"}], ",", "\"Title\"", ",", 
                    RowBox[{"TextAlignment", "\[Rule]", "Center"}]}], "]"}], 
                    ",", 
                    RowBox[{"TextCell", "[", 
                    RowBox[{"man", ",", "\"Output\"", ",", 
                    RowBox[{"TextAlignment", "\[Rule]", "Center"}]}], "]"}]}],
                     "}"}], ",", 
                    RowBox[{"WindowSelected", "\[Rule]", "True"}], ",", 
                    RowBox[{"WindowTitle", "\[Rule]", 
                    
                    RowBox[{"\"M1 - \"", "<>", "ln", "<>", "\" in \"", "<>", 
                    "host"}]}], ",", 
                    RowBox[{"WindowSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1600", ",", "800"}], "}"}]}]}], "]"}]}], ";", 
                    RowBox[{"reloadDataTemplate", "=", 
                    RowBox[{"StringTemplate", "[", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"EvenQ", "[", "numE", "]"}], ",", 
                    "\"{eigenEnergies, ln, simplerStateLabels, eigensys, \
basis, truncatedStates, params} = Import[FileNameJoin[{NotebookDirectory[],\\\
\"`ln` in `host` - ql.mx\\\"}]];\"", ",", 
                    "\"{eigenEnergies, ln, simplerStateLabels, eigensys, \
basis, truncatedStates, params} = Import[FileNameJoin[{NotebookDirectory[],\\\
\"`ln` in `host` - ql.mx\\\"}]];\\neigenEnergies = \
eigenEnergies[[;;;;2]];\\nsimplerStateLabels = \
simplerStateLabels[[;;;;2]];\\neigensys = \
eigensys[[;;;;2]];\\ntruncatedStates= truncatedStates[[;;;;2]];\""}], "]"}], 
                    "]"}]}], ";", 
                    RowBox[{"SelectionMove", "[", 
                    RowBox[{"nb", ",", "After", ",", "Notebook"}], "]"}], ";", 
                    RowBox[{"NotebookWrite", "[", 
                    RowBox[{"nb", ",", 
                    RowBox[{"Cell", "[", 
                    RowBox[{"\"Reload Data\"", ",", "\"Section\"", ",", 
                    RowBox[{"TextAlignment", "\[Rule]", "Center"}]}], "]"}]}],
                     "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"OddQ", "[", "numE", "]"}], ",", 
                    RowBox[{
                    RowBox[{"NotebookWrite", "[", 
                    RowBox[{"nb", ",", 
                    RowBox[{"Cell", "[", 
                    
                    RowBox[{
                    "\"(* NOTE: the transition data elides Kramer's \
degeneracy, only one state from each pair is included *)\"", ",", 
                    "\"Text\""}], "]"}]}], "]"}], ";"}]}], "]"}], ";", 
                    RowBox[{"NotebookWrite", "[", 
                    RowBox[{"nb", ",", 
                    RowBox[{"Cell", "[", 
                    RowBox[{
                    RowBox[{"reloadDataTemplate", "[", 
                    RowBox[{"Association", "[", 
                    RowBox[{
                    RowBox[{"\"host\"", "\[Rule]", "host"}], ",", 
                    RowBox[{"\"ln\"", "\[Rule]", "ln"}]}], "]"}], "]"}], ",", 
                    "\"Input\""}], "]"}]}], "]"}], ";", 
                    RowBox[{"NotebookWrite", "[", 
                    RowBox[{"nb", ",", 
                    RowBox[{"Cell", "[", 
                    RowBox[{
                    
                    RowBox[{
                    "\"magTransitions = \
Import[FileNameJoin[{NotebookDirectory[],\\\"\"", "<>", 
                    RowBox[{
                    RowBox[{"StringSplit", "[", 
                    RowBox[{"rawexportFname", ",", "\"/\""}], "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "<>", 
                    "\"\\\"}],\\\"\"", "<>", "rawexportKey", "<>", 
                    "\"\\\"];\""}], ",", "\"Input\""}], "]"}]}], "]"}], ";", 
                    RowBox[{"SelectionMove", "[", 
                    RowBox[{"nb", ",", "Before", ",", "Notebook"}], "]"}], 
                    ";", 
                    RowBox[{"nbFname", "=", 
                    RowBox[{"FileNameJoin", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"DirectoryName", "[", "fname", "]"}], ",", 
                    
                    RowBox[{"\"M1 - \"", "<>", "ln", "<>", "\" in \"", "<>", 
                    "\"LaF3\"", "<>", "\".nb\""}]}], "}"}], "]"}]}], ";", 
                    RowBox[{"endTime", "=", "Now"}], ";", 
                    RowBox[{"PrintFun", "[", 
                    RowBox[{"\">> Creating the notebook took \"", ",", 
                    RowBox[{"QuantityMagnitude", "[", 
                    RowBox[{
                    RowBox[{"endTime", "-", "startTime"}], ",", 
                    "\"Seconds\""}], "]"}], ",", "\" seconds.\""}], "]"}], 
                    ";", 
                    RowBox[{"PrintFun", "[", 
                    
                    RowBox[{"\">> Saving notebook to \"", ",", "nbFname", ",",
                     "\" ...\""}], "]"}], ";", 
                    RowBox[{"startTime", "=", "Now"}], ";", 
                    RowBox[{"NotebookSave", "[", 
                    RowBox[{"nb", ",", "nbFname"}], "]"}], ";", 
                    RowBox[{"endTime", "=", "Now"}], ";", 
                    RowBox[{"PrintFun", "[", 
                    RowBox[{"\">> Saving the notebook took \"", ",", 
                    RowBox[{"QuantityMagnitude", "[", 
                    RowBox[{
                    RowBox[{"endTime", "-", "startTime"}], ",", 
                    "\"Seconds\""}], "]"}], ",", "\" seconds.\""}], "]"}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "\"Close Notebook\"", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"NotebookClose", "[", "nb", "]"}], ";"}]}], "]"}],
                     ";"}]}], "]"}], ";", 
                    RowBox[{"Return", "[", "magIon", "]"}], ";"}]}], 
                    "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"\<\"Make Notebook\"\>", "\[Rule]", "True"}]},
                    {
                    RowBox[{"\<\"Close Notebook\"\>", "\[Rule]", "True"}]},
                    {
                    
                    RowBox[{"\<\"Print Function\"\>", "\[Rule]", 
                    "PrintTemporary"}]},
                    {
                    RowBox[{"\<\"Host\"\>", "\[Rule]", "\<\"LaF3\"\>"}]},
                    {
                    
                    RowBox[{"\<\"Energy Uncertainty in K\"\>", "\[Rule]", 
                    "1.`"}]},
                    {
                    RowBox[{"\<\"Wavelength Range\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"50", ",", "2000"}], "}"}]}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "6", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"\<\"Make Notebook\"\>", "\[Rule]", "True"}], 
                    "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "6", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], \
"\<\"Global`MagneticDipoleTransitions\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"MagneticDipoleTransitions[params, fname] calculates \
the magnetic dipole transition rates and oscillator strengths for the \
lanthanide ion describe by params. This is done using the data saved in fname \
which corresponds to output files from FastIonSolverLaF3. This function saves \
a tabular file, a raw data file, and a CSV file. The tabular file contains \
the following columns: \\n    \[Psi]i:simple, (* main contribution to the \
wavefuction |i>*)\\n    \[Psi]f:simple, (* main contribution to the \
wavefuction |j>*)\\n    \[Psi]i:idx,    (* index of the wavefuction |i>*)\\n  \
  \[Psi]f:idx,    (* index of the wavefuction |j>*)\\n    Ei/K,           (* \
energy of the initial state in K *)\\n    Ef/K,           (* energy of the \
final state in K *)\\n    \[Lambda]/nm,   (* transition wavelength in nm \
*)\\n    \[CapitalDelta]\[Lambda]/nm, (* uncertainty in the transition \
wavelength in nm *)\\n    \[Tau]/s,       (* radiative lifetime in s *)\\n    \
AMD/s^-1        (* magnetic dipole transition rate in s^-1 *)\\n\\nThe raw \
data file contains the following keys: \\n    - Line Strength, (* Line \
strength array *)\\n    - AMD, (* Magnetic dipole transition rates in 1/s \
*)\\n    - fMD, (* Oscillator strengths from ground to excited states *)\\n   \
 - Radiative lifetimes, (* Radiative lifetimes in s *)\\n    - Transition \
Energies / K, (* Transition energies in K *)\\n    - Transition Wavelengths \
in nm. (* Transition wavelengths in nm *)\\n\\nThe CSV file contains the same \
information as the tabular file. \\n\\nThe function also creates a notebook \
with a Manipulate that allows the user to select a wavelength interval and a \
lifetime power of ten. The results notebook is saved in the examples \
directory.\\n\\nThe function takes the following options: \\n    - \\\"Make \
Notebook\\\" -> True or False. If True, the results notebook is created. \
Default is True.\\n    - \\\"Print Function\\\" -> PrintTemporary or Print. \
The function used to print the progress of the calculation. Default is \
PrintTemporary.\\n    - \\\"Host\\\" -> \\\"CrystalHost\\\". The host \
material. Default is LaF3.\\n    - \\\"Wavelength Range\\\" -> {50,2000}. The \
range of wavelengths in nm for the Manipulate object in the created notebook. \
Default is {50,2000}.\\n\\nThe function returns an association containing the \
following keys: Line Strength, AMD, fMD, Radiative lifetimes, Transition \
Energies / K, Transition Wavelengths in nm.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "MagneticDipoleTransitions[params, fname] calculates the magnetic dipole \
transition rates and oscillator strengths for the lanthanide ion describe by \
params. This is done using the data saved in fname which corresponds to \
output files from FastIonSolverLaF3. This function saves a tabular file, a \
raw data file, and a CSV file. The tabular file contains the following \
columns: \n    \[Psi]i:simple, (* main contribution to the wavefuction |i>*)\n\
    \[Psi]f:simple, (* main contribution to the wavefuction |j>*)\n    \
\[Psi]i:idx,    (* index of the wavefuction |i>*)\n    \[Psi]f:idx,    (* \
index of the wavefuction |j>*)\n    Ei/K,           (* energy of the initial \
state in K *)\n    Ef/K,           (* energy of the final state in K *)\n    \
\[Lambda]/nm,   (* transition wavelength in nm *)\n    \[CapitalDelta]\
\[Lambda]/nm, (* uncertainty in the transition wavelength in nm *)\n    \
\[Tau]/s,       (* radiative lifetime in s *)\n    AMD/s^-1        (* \
magnetic dipole transition rate in s^-1 *)\n\nThe raw data file contains the \
following keys: \n    - Line Strength, (* Line strength array *)\n    - AMD, \
(* Magnetic dipole transition rates in 1/s *)\n    - fMD, (* Oscillator \
strengths from ground to excited states *)\n    - Radiative lifetimes, (* \
Radiative lifetimes in s *)\n    - Transition Energies / K, (* Transition \
energies in K *)\n    - Transition Wavelengths in nm. (* Transition \
wavelengths in nm *)\n\nThe CSV file contains the same information as the \
tabular file. \n\nThe function also creates a notebook with a Manipulate that \
allows the user to select a wavelength interval and a lifetime power of ten. \
The results notebook is saved in the examples directory.\n\nThe function \
takes the following options: \n    - \"Make Notebook\" -> True or False. If \
True, the results notebook is created. Default is True.\n    - \"Print \
Function\" -> PrintTemporary or Print. The function used to print the \
progress of the calculation. Default is PrintTemporary.\n    - \"Host\" -> \
\"CrystalHost\". The host material. Default is LaF3.\n    - \"Wavelength \
Range\" -> {50,2000}. The range of wavelengths in nm for the Manipulate \
object in the created notebook. Default is {50,2000}.\n\nThe function returns \
an association containing the following keys: Line Strength, AMD, fMD, \
Radiative lifetimes, Transition Energies / K, Transition Wavelengths in nm.", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, $CellContext`MagneticDipoleTransitions, \
{$CellContext`MagneticDipoleTransitions[
         Pattern[$CellContext`params, 
          Blank[Association]], 
         Pattern[$CellContext`fname, 
          Blank[String]], 
         OptionsPattern[]] :> 
       Module[{$CellContext`numE, $CellContext`host, $CellContext`PrintFun, \
$CellContext`\[Lambda]Range, $CellContext`header, $CellContext`ln, \
$CellContext`energy\[CapitalDelta]}, $CellContext`paramKeys = 
          Keys[$CellContext`params]; Which[
           
           MemberQ[$CellContext`paramKeys, 
            qlanth`nE], $CellContext`numE = $CellContext`params[qlanth`nE], 
           
           MemberQ[$CellContext`paramKeys, 
            "nE"], $CellContext`numE = $CellContext`params["nE"], 
           
           MemberQ[$CellContext`paramKeys, 
            "numE"], $CellContext`numE = $CellContext`params["numE"], True, 
           Print["The number of electrons was not specified in params, \
exiting ..."]; Return[Null]; Null]; 
         Print[{"numE", $CellContext`numE}]; $CellContext`host = 
          OptionValue["Host"]; $CellContext`\[Lambda]Range = 
          OptionValue["Wavelength Range"]; $CellContext`PrintFun = 
          OptionValue[
           "Print Function"]; {$CellContext`\[Lambda]min, $CellContext`\
\[Lambda]max} = 
          OptionValue["Wavelength Range"]; $CellContext`header = {
           "\[Psi]i:simple", "\[Psi]f:simple", "\[Psi]i:idx", "\[Psi]f:idx", 
            "Ei/K", "Ef/K", "\[Lambda]/nm", "\[CapitalDelta]\[Lambda]/nm", 
            "\[Tau]/s", "AMD/s^-1"}; $CellContext`ln = 
          Part[{"Ce", "Pr", "Nd", "Pm", "Sm", "Eu", "Gd", "Tb", "Dy", "Ho", 
             "Er", "Tm", 
             "Yb"}, $CellContext`numE]; {$CellContext`eigenEnergies, \
$CellContext`ln, $CellContext`simplerStateLabels, $CellContext`eigensys, \
$CellContext`basis, $CellContext`truncatedStates, $CellContext`fittedParams} = 
          Import[$CellContext`fname]; Clear[$CellContext`truncatedStates]; 
         Clear[$CellContext`basis]; If[
           
           OddQ[$CellContext`numE], $CellContext`eigenEnergies = 
            Part[$CellContext`eigenEnergies, 
              Span[1, All, 2]]; $CellContext`simplerStateLabels = 
            Part[$CellContext`simplerStateLabels, 
              Span[1, All, 2]]; $CellContext`eigensys = 
            Part[$CellContext`eigensys, 
              Span[1, All, 2]]; 
           Null]; $CellContext`eigenEnergies = $CellContext`eigenEnergies - 
           Part[$CellContext`eigenEnergies, 
            1]; $CellContext`magIon = <||>; $CellContext`PrintFun[
          "Calculating the M1 spontaneous transition rates ..."]; \
$CellContext`magIon["AMD"] = 
          qlanth`MagDipoleRates[$CellContext`eigensys, $CellContext`numE, 
            "Units" -> "SI", "Lifetime" -> False]; $CellContext`magIon["AMD"] = 
          ReplaceAll[
            $CellContext`magIon["AMD"], {
            0. -> Indeterminate}]; $CellContext`PrintFun[
          "Calculating the oscillator strength for transitions from the \
ground state ..."]; $CellContext`magIon["fMD"] = 
          qlanth`GroundMagDipoleOscillatorStrength[$CellContext`eigensys, \
$CellContext`numE]; $CellContext`PrintFun[
          "Calculating the natural radiative lifetimes ..."]; \
$CellContext`magIon["Radiative lifetimes"] = 
          1./$CellContext`magIon["AMD"]; $CellContext`PrintFun[
          "Calculating the transition energies in K ..."]; \
$CellContext`transitionEnergies = Outer[Subtract, 
            Map[First, $CellContext`eigensys], 
            Map[First, $CellContext`eigensys]]; $CellContext`magIon[
           "Transition Energies / K"] = 
          misc`ReplaceDiagonal[$CellContext`transitionEnergies, 
            Indeterminate]; $CellContext`PrintFun[
          "Calculating the transition wavelengths in nm ..."]; \
$CellContext`magIon["Transition Wavelengths in nm"] = 
          10^7/$CellContext`magIon[
           "Transition Energies / K"]; $CellContext`energy\[CapitalDelta] = 
          OptionValue[
           "Energy Uncertainty in K"]; $CellContext`PrintFun[(
            "Estimating the uncertainties in \[Lambda]/nm assuming a " <> 
            ToString[$CellContext`energy\[CapitalDelta]]) <> 
           " K uncertainty in energies."]; $CellContext`\[Lambda]uncertainty = \
(($CellContext`energy\[CapitalDelta] Sqrt[2.]) 
            10^(-7)) $CellContext`magIon[
             "Transition Wavelengths in nm"]^2; $CellContext`PrintFun[
          "Formatting a tabular output file ..."]; $CellContext`startTime = 
          Now; $CellContext`numEigenvecs = 
          Length[$CellContext`eigensys]; $CellContext`roundedEnergies = 
          Round[$CellContext`eigenEnergies, 1.]; $CellContext`simpleFromTo = 
          Outer[{#, #2}& , $CellContext`simplerStateLabels, \
$CellContext`simplerStateLabels]; $CellContext`fromTo = Outer[{#, #2}& , 
            Range[$CellContext`numEigenvecs], 
            Range[$CellContext`numEigenvecs]]; $CellContext`energyPairs = 
          Outer[{#, #2}& , $CellContext`roundedEnergies, \
$CellContext`roundedEnergies]; $CellContext`allTransitions = \
{$CellContext`simpleFromTo, $CellContext`fromTo, $CellContext`energyPairs, 
            $CellContext`magIon[
            "Transition Wavelengths in nm"], \
$CellContext`\[Lambda]uncertainty, 
            $CellContext`magIon["AMD"], 
            $CellContext`magIon[
            "Radiative lifetimes"]}; $CellContext`allTransitions = 
          Map[Flatten, 
            Transpose[
             Map[
             Flatten[#, 
               1]& , $CellContext`allTransitions]]]; \
$CellContext`allTransitions = 
          Select[$CellContext`allTransitions, Part[#, 3] != 
            Part[#, 4]& ]; $CellContext`allTransitions = 
          Select[$CellContext`allTransitions, Part[#, 10] > 
            0& ]; $CellContext`allTransitions = 
          Transpose[$CellContext`allTransitions]; $CellContext`endTime = 
          Now; $CellContext`PrintFun[">> Formatting the tabular output took ", 
           
           QuantityMagnitude[$CellContext`endTime - $CellContext`startTime, 
            "Seconds"], " seconds."]; $CellContext`PrintFun[
          "Rounding wavelengths according to estimated uncertainties ..."]; \
$CellContext`starTime = 
          Now; {$CellContext`roundedWaves, $CellContext`roundedDeltas} = 
          Transpose[
            MapThread[misc`RoundValueWithUncertainty, {
              Part[$CellContext`allTransitions, 7], 
              Part[$CellContext`allTransitions, 8]}]]; 
         Part[$CellContext`allTransitions, 7] = $CellContext`roundedWaves; 
         Part[$CellContext`allTransitions, 
            8] = $CellContext`roundedDeltas; $CellContext`endTime = 
          Now; $CellContext`PrintFun[">> Rounding the wavelengths took ", 
           
           QuantityMagnitude[$CellContext`endTime - $CellContext`startTime, 
            "Seconds"], " seconds."]; $CellContext`PrintFun[
          "Rounding lifetimes and transition rates to three significant \
figures ..."]; $CellContext`startTime = Now; 
         Part[$CellContext`allTransitions, 9] = 
          Map[misc`RoundToSignificantFigures[#, 3]& , 
            Part[$CellContext`allTransitions, 9]]; 
         Part[$CellContext`allTransitions, 10] = 
          Map[misc`RoundToSignificantFigures[#, 3]& , 
            Part[$CellContext`allTransitions, 10]]; $CellContext`finalTable = 
          Transpose[$CellContext`allTransitions]; $CellContext`finalTable = 
          Prepend[$CellContext`finalTable, $CellContext`header]; \
$CellContext`endTime = Now; $CellContext`PrintFun[
          ">> Rounding the lifetimes and transition rates took ", 
           
           QuantityMagnitude[$CellContext`endTime - $CellContext`startTime, 
            "Seconds"], 
           " seconds."]; $CellContext`basename = ((($CellContext`ln <> 
              " in ") <> $CellContext`host) <> " - ql - ") <> 
           "M1 - tabular.zip"; $CellContext`exportFname = FileNameJoin[{
             
             DirectoryName[$CellContext`fname], $CellContext`basename}]; \
$CellContext`PrintFun[(
            "Exporting tabular data to " <> $CellContext`exportFname) <> 
           " ..."]; $CellContext`starTime = Now; $CellContext`exportKey = 
          StringReplace[$CellContext`basename, ".zip" -> ".m"]; 
         Export[$CellContext`exportFname, <|$CellContext`exportKey -> \
$CellContext`finalTable|>]; $CellContext`endTime = Now; $CellContext`PrintFun[
          ">> Exporting the tabular data took ", 
           
           QuantityMagnitude[$CellContext`endTime - $CellContext`starTime, 
            "Seconds"], 
           " seconds."]; $CellContext`basename = ((($CellContext`ln <> 
              " in ") <> $CellContext`host) <> " - ql - ") <> 
           "M1 - raw.zip"; $CellContext`rawexportFname = FileNameJoin[{
             
             DirectoryName[$CellContext`fname], $CellContext`basename}]; \
$CellContext`starTime = 
          Now; $CellContext`PrintFun[(
            "Exporting raw data as an association to " <> \
$CellContext`exportFname) <> " ..."]; $CellContext`rawexportKey = 
          StringReplace[$CellContext`basename, ".zip" -> ".m"]; 
         Export[$CellContext`rawexportFname, <|$CellContext`rawexportKey -> \
$CellContext`magIon|>]; $CellContext`endTime = Now; $CellContext`PrintFun[
          ">> Exporting the raw data took ", 
           
           QuantityMagnitude[$CellContext`endTime - $CellContext`starTime, 
            "Seconds"], " seconds."]; $CellContext`PrintFun[
          "Formatting and exporting a CSV output..."]; $CellContext`startTime = 
          Now; $CellContext`csvOut = Table[
            StringJoin[
             Riffle[
              Map[ToString[#, CForm]& , 
               Part[$CellContext`finalTable, $CellContext`i]], 
              ","]], {$CellContext`i, 1, 
             Length[$CellContext`finalTable]}]; $CellContext`csvOut = 
          StringJoin[
            Riffle[$CellContext`csvOut, "\n"]]; $CellContext`endTime = 
          Now; $CellContext`PrintFun[">> Formatting the CSV output took ", 
           
           QuantityMagnitude[$CellContext`endTime - $CellContext`startTime, 
            "Seconds"], 
           " seconds."]; $CellContext`basename = ((($CellContext`ln <> 
              " in ") <> $CellContext`host) <> " - ql - ") <> 
           "M1.csv"; $CellContext`exportFname = FileNameJoin[{
             
             DirectoryName[$CellContext`fname], $CellContext`basename}]; \
$CellContext`PrintFun[("Exporting csv data to " <> $CellContext`exportFname) <> 
           " ..."]; $CellContext`starTime = Now; 
         Export[$CellContext`exportFname, $CellContext`csvOut, 
           "Text"]; $CellContext`endTime = Now; $CellContext`PrintFun[
          ">> Exporting the csv data took ", 
           
           QuantityMagnitude[$CellContext`endTime - $CellContext`starTime, 
            "Seconds"], " seconds."]; If[
           OptionValue[
           "Make Notebook"], $CellContext`PrintFun[
            "Creating a notebook with a Manipulate to select a wavelength \
interval and a lifetime power of ten ..."]; $CellContext`startTime = 
            Now; $CellContext`finalTable = 
            Rest[$CellContext`finalTable]; $CellContext`finalTable = 
            SortBy[$CellContext`finalTable, 
              Part[#, 7]& ]; $CellContext`opticalTable = 
            Select[$CellContext`finalTable, $CellContext`\[Lambda]min <= 
              Part[#, 7] <= $CellContext`\[Lambda]max& ]; $CellContext`pows = 
            Sort[
              DeleteDuplicates[
               Map[Part[
                  MantissaExponent[
                   Part[#, 9]], 2] - 
                1& , $CellContext`opticalTable]]]; $CellContext`man = 
            
            Manipulate[{$CellContext`\[Lambda]min, $CellContext`\[Lambda]max} = \
$CellContext`\[Lambda]int; $CellContext`table = 
               Select[$CellContext`opticalTable, 
                 And[$CellContext`\[Lambda]min <= 
                  Part[#, 7] <= $CellContext`\[Lambda]max, Part[
                    MantissaExponent[
                    Part[#, 9]], 2] - 
                   1 == $CellContext`log10\[Tau]]& ]; $CellContext`tab = 
               TableForm[$CellContext`table, 
                 TableHeadings -> {None, $CellContext`header}]; 
              Column[{{("\[Lambda]min=" <> 
                   ToString[$CellContext`\[Lambda]min]) <> 
                  " nm", ("\[Lambda]max=" <> 
                   ToString[$CellContext`\[Lambda]max]) <> 
                  " nm", $CellContext`log10\[Tau]}, $CellContext`tab}], \
{{$CellContext`\[Lambda]int, $CellContext`\[Lambda]Range, 
                "\[Lambda] interval"}, 
               Part[$CellContext`\[Lambda]Range, 1], 
               Part[$CellContext`\[Lambda]Range, 2], 50, ControlType -> 
               IntervalSlider}, {{$CellContext`log10\[Tau], 
                Part[$CellContext`pows, -1]}, $CellContext`pows}, 
              TrackedSymbols :> {$CellContext`\[Lambda]int, \
$CellContext`log10\[Tau]}, SaveDefinitions -> True]; $CellContext`nb = 
            CreateDocument[{
               TextCell[
                Style[
                 DisplayForm[
                  RowBox[{"Magnetic Dipole Transitions", "\n", 
                    
                    SuperscriptBox[($CellContext`host <> 
                    ":") <> $CellContext`ln, "3+"], "(", 
                    SuperscriptBox["f", $CellContext`numE], ")"}]]], "Title", 
                TextAlignment -> Center], 
               TextCell[$CellContext`man, "Output", TextAlignment -> Center]},
               WindowSelected -> True, 
              WindowTitle -> (("M1 - " <> $CellContext`ln) <> 
                " in ") <> $CellContext`host, 
              WindowSize -> {1600, 800}]; $CellContext`reloadDataTemplate = 
            StringTemplate[
              If[
               EvenQ[$CellContext`numE], 
               "{eigenEnergies, ln, simplerStateLabels, eigensys, basis, \
truncatedStates, params} = Import[FileNameJoin[{NotebookDirectory[],\"`ln` in \
`host` - ql.mx\"}]];", 
               "{eigenEnergies, ln, simplerStateLabels, eigensys, basis, \
truncatedStates, params} = Import[FileNameJoin[{NotebookDirectory[],\"`ln` in \
`host` - ql.mx\"}]];\neigenEnergies = eigenEnergies[[;;;;2]];\n\
simplerStateLabels = simplerStateLabels[[;;;;2]];\neigensys = \
eigensys[[;;;;2]];\ntruncatedStates= truncatedStates[[;;;;2]];"]]; 
           SelectionMove[$CellContext`nb, After, Notebook]; 
           NotebookWrite[$CellContext`nb, 
             Cell["Reload Data", "Section", TextAlignment -> Center]]; If[
             OddQ[$CellContext`numE], NotebookWrite[$CellContext`nb, 
               Cell[
               "(* NOTE: the transition data elides Kramer's degeneracy, only \
one state from each pair is included *)", "Text"]]; Null]; 
           NotebookWrite[$CellContext`nb, 
             Cell[
              $CellContext`reloadDataTemplate[<|
               "host" -> $CellContext`host, "ln" -> $CellContext`ln|>], 
              "Input"]]; NotebookWrite[$CellContext`nb, 
             
             Cell[((("magTransitions = \
Import[FileNameJoin[{NotebookDirectory[],\"" <> Part[
                   StringSplit[$CellContext`rawexportFname, "/"], -1]) <> 
                "\"}],\"") <> $CellContext`rawexportKey) <> "\"];", "Input"]]; 
           SelectionMove[$CellContext`nb, Before, 
             Notebook]; $CellContext`nbFname = FileNameJoin[{
               
               DirectoryName[$CellContext`fname], (((
                  "M1 - " <> $CellContext`ln) <> " in ") <> "LaF3") <> 
               ".nb"}]; $CellContext`endTime = Now; $CellContext`PrintFun[
            ">> Creating the notebook took ", 
             
             QuantityMagnitude[$CellContext`endTime - $CellContext`startTime, 
              "Seconds"], " seconds."]; $CellContext`PrintFun[
            ">> Saving notebook to ", $CellContext`nbFname, 
             " ..."]; $CellContext`startTime = Now; 
           NotebookSave[$CellContext`nb, $CellContext`nbFname]; \
$CellContext`endTime = Now; $CellContext`PrintFun[
            ">> Saving the notebook took ", 
             
             QuantityMagnitude[$CellContext`endTime - $CellContext`startTime, 
              "Seconds"], " seconds."]; If[
             OptionValue["Close Notebook"], NotebookClose[$CellContext`nb]; 
             Null]; Null]; Return[$CellContext`magIon]; Null]}], "SubValues" -> 
    None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {
     "Make Notebook" -> True, "Close Notebook" -> True, "Print Function" -> 
      PrintTemporary, "Host" -> "LaF3", "Energy Uncertainty in K" -> 1., 
      "Wavelength Range" -> {50, 2000}}, "Attributes" -> {}, "FullName" -> 
    "Global`MagneticDipoleTransitions"|>, False]]], "Input",
 CellChangeTimes->{3.93275704983772*^9},
 CellLabel->"",ExpressionUUID->"fc4e7e52-94fb-4117-b20c-461c04d252bb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "folder", "=", 
   "\"\</Users/juan/ZiaLab/Codebase/qlanth/log/pathfinder-constraints-with-\
spinspin-and-no-truncation/\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fnames", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"StringSplit", "[", 
       RowBox[{"#", ",", "\"\</\>\""}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"-", "1"}], "]"}], "]"}], "&"}], "/@", 
    RowBox[{"FileNames", "[", 
     RowBox[{"folder", "<>", "\"\<*.m\>\""}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fnames", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"StringSplit", "[", 
         RowBox[{"#", ",", "\"\<-\>\""}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "->", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{"folder", ",", "#"}], "}"}], "]"}]}], ")"}], "&"}], "/@", 
    "fnames"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fnames", "=", 
   RowBox[{"Association", "[", "fnames", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"paramFnames", "=", "fnames"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "calcDir", "=", 
   "\"\</Users/juan/ZiaLab/Codebase/qlanth/ql-LaF3-no-truncation/\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fnames", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"StringSplit", "[", 
       RowBox[{"#", ",", "\"\</\>\""}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"-", "1"}], "]"}], "]"}], "&"}], "/@", 
    RowBox[{"FileNames", "[", 
     RowBox[{"calcDir", "<>", "\"\<*.mx\>\""}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fnames", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"StringSplit", "[", 
         RowBox[{"#", ",", "\"\< \>\""}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "->", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{"calcDir", ",", "#"}], "}"}], "]"}]}], ")"}], "&"}], "/@", 
    "fnames"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"calcFnames", "=", 
   RowBox[{"Association", "[", "fnames", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.928664331963768*^9, 3.928664333556383*^9}, {
   3.928666666971284*^9, 3.928666667525872*^9}, {3.9287006961896467`*^9, 
   3.928700729196254*^9}, {3.932729069017446*^9, 3.932729069778719*^9}, 
   3.932757319157939*^9},
 CellLabel->
  "In[563]:=",ExpressionUUID->"8c9deead-5eb5-43cc-8c10-2755b2726bcd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"doThese", "=", "complementaryNumE"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wavelengthRangeInNM", "=", 
   RowBox[{"{", 
    RowBox[{"50", ",", "2000"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ln", "=", 
       RowBox[{"theLanthanides", "[", 
        RowBox[{"[", "numE", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"paramsFname", "=", 
       RowBox[{"paramFnames", "[", "ln", "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"fitResults", "=", 
       RowBox[{"Import", "[", "paramsFname", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"params", "=", 
       RowBox[{"Association", "@", 
        RowBox[{
        "fitResults", "[", "\"\<bestParamsWithConstraints\>\"", "]"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"energySigma", "=", 
       RowBox[{"fitResults", "[", "\"\<bestRMSwithTruncation\>\"", "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"params", "[", "nE", "]"}], "=", "numE"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"calcFname", "=", 
       RowBox[{"calcFnames", "[", "ln", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"magDT", "=", 
       RowBox[{"MagneticDipoleTransitions", "[", 
        RowBox[{
        "params", ",", "\[IndentingNewLine]", "calcFname", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<Make Notebook\>\"", "->", "True"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<Close Notebook\>\"", "->", 
          RowBox[{"Not", "[", 
           RowBox[{"MemberQ", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2", ",", "3"}], "}"}], ",", "numE"}], "]"}], "]"}]}], 
         ",", "\[IndentingNewLine]", " ", 
         RowBox[{"\"\<Print Function\>\"", "->", "Print"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<Energy Uncertainty in K\>\"", "->", "energySigma"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Wavelength Range\>\"", "->", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"ln", "==", "\"\<Ce\>\""}], ",", 
            RowBox[{"{", 
             RowBox[{"100", ",", "30000"}], "}"}], ",", 
            "wavelengthRangeInNM"}], "]"}]}]}], "\[IndentingNewLine]", 
        "]"}]}], ";"}], "\[IndentingNewLine]", ")"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"numE", ",", "doThese"}], "}"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Run", "[", 
   "\"\<~/Scripts/pushover \\\"Calculation of magnetic dipole transitions has \
finished.\\\"\>\"", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.9164013984837832`*^9, 3.916401399485074*^9}, {
   3.916401618770542*^9, 3.9164016220228987`*^9}, {3.916401800074551*^9, 
   3.916401808413102*^9}, {3.91640252087792*^9, 3.916402571596848*^9}, {
   3.916402640033778*^9, 3.916402681347136*^9}, {3.916402982450912*^9, 
   3.916402982585507*^9}, {3.916403224200314*^9, 3.916403228910646*^9}, {
   3.916403549717725*^9, 3.916403552160259*^9}, {3.9164040947794724`*^9, 
   3.916404095506074*^9}, 3.91640521661616*^9, {3.9164179391440063`*^9, 
   3.916417963330139*^9}, {3.91744944594248*^9, 3.917449478000691*^9}, {
   3.925307237213377*^9, 3.925307251725627*^9}, {3.925568964827632*^9, 
   3.925568971097218*^9}, {3.925569040316373*^9, 3.925569043838478*^9}, {
   3.9255692751982927`*^9, 3.925569278108548*^9}, {3.925644616217812*^9, 
   3.925644629320382*^9}, {3.9256448383175917`*^9, 3.925644881464254*^9}, {
   3.925644932064679*^9, 3.92564495741111*^9}, {3.925645070208992*^9, 
   3.9256451017407923`*^9}, {3.925648261300645*^9, 3.925648350949492*^9}, {
   3.9256483976665983`*^9, 3.925648402332734*^9}, {3.925648456277684*^9, 
   3.925648456555592*^9}, {3.925648804126584*^9, 3.925648837768873*^9}, {
   3.925656209826799*^9, 3.925656226129745*^9}, {3.925661459500208*^9, 
   3.925661465607142*^9}, 3.9256616725914307`*^9, 3.92566279063274*^9, 
   3.925663096547781*^9, 3.925663278445922*^9, 3.92566335246873*^9, {
   3.9256639218312407`*^9, 3.925663921998255*^9}, {3.925906719061699*^9, 
   3.925906786089911*^9}, {3.925918917091854*^9, 3.925918925169121*^9}, {
   3.925918971582254*^9, 3.92591899661714*^9}, {3.92591905123166*^9, 
   3.9259190514058867`*^9}, {3.9286665970110598`*^9, 3.928666601640909*^9}, {
   3.9286667537204638`*^9, 3.928666753940996*^9}, {3.928700761797248*^9, 
   3.92870083632588*^9}, {3.928700983025579*^9, 3.928701006626774*^9}, {
   3.928701129759596*^9, 3.928701133222506*^9}, 3.932728693750743*^9, 
   3.932728776552387*^9, {3.9327289320103188`*^9, 3.9327289366158867`*^9}, {
   3.9327320863471107`*^9, 3.932732086966497*^9}, {3.9327322399820127`*^9, 
   3.932732240630481*^9}, {3.9327323512731133`*^9, 3.932732368184743*^9}, {
   3.932733703321805*^9, 3.9327337060801*^9}, {3.9327351297099733`*^9, 
   3.932735129908642*^9}, 3.932735188563408*^9, {3.932735335729302*^9, 
   3.9327353364373827`*^9}, {3.9327353746050453`*^9, 3.932735404546186*^9}, {
   3.932736019664484*^9, 3.932736019719407*^9}, {3.93273613719051*^9, 
   3.9327361372264*^9}, {3.932736218093004*^9, 3.932736219671818*^9}, {
   3.932736279182534*^9, 3.9327362873375998`*^9}, {3.932736946224265*^9, 
   3.932737009393894*^9}, {3.932737152626123*^9, 3.9327371541511087`*^9}, {
   3.932754177791456*^9, 3.932754178835903*^9}, {3.932754560101377*^9, 
   3.9327545601681023`*^9}, 3.9327572363593187`*^9, {3.932759136311997*^9, 
   3.932759140638974*^9}, {3.932759207296039*^9, 
   3.93275920962494*^9}},ExpressionUUID->"3540dc69-2435-46f5-bec5-\
27a00aa70142"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"numE\"\>", ",", "3"}], "}"}]], "Print",
 CellChangeTimes->{{3.932736949633649*^9, 3.93273698205582*^9}, {
   3.932737139053205*^9, 3.9327371563577137`*^9}, 3.932754179474306*^9, 
   3.9327542435558167`*^9, 3.932754508551993*^9, 3.9327545605938683`*^9, 
   3.9327550102727413`*^9, 3.932755188328085*^9, 3.932756067407352*^9, {
   3.932756243117978*^9, 3.9327562850945787`*^9}, 3.93275645379286*^9, 
   3.9327565357716417`*^9, 3.932756806063693*^9, 3.932756842290435*^9, 
   3.9327569805126543`*^9, 3.932757053448591*^9, 3.932757085441546*^9, 
   3.932757204241365*^9, 3.932757518489917*^9, 3.9327591419103193`*^9},
 CellLabel->
  "During evaluation of \
In[572]:=",ExpressionUUID->"1b0bcd8e-64c9-49e9-a34e-8f77310b1df0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Loading the data from \"\>", 
   "\[InvisibleSpace]", \
"\<\"/Users/juan/ZiaLab/Codebase/qlanth/ql-LaF3-no-truncation/Nd in LaF3 - \
ql.mx\"\>", "\[InvisibleSpace]", "\<\" ...\"\>"}],
  SequenceForm[
  "Loading the data from ", 
   "/Users/juan/ZiaLab/Codebase/qlanth/ql-LaF3-no-truncation/Nd in LaF3 - \
ql.mx", " ..."],
  Editable->False]], "Print",
 CellChangeTimes->{{3.932736949633649*^9, 3.93273698205582*^9}, {
   3.932737139053205*^9, 3.9327371563577137`*^9}, 3.932754179474306*^9, 
   3.9327542435558167`*^9, 3.932754508551993*^9, 3.9327545605938683`*^9, 
   3.9327550102727413`*^9, 3.932755188328085*^9, 3.932756067407352*^9, {
   3.932756243117978*^9, 3.9327562850945787`*^9}, 3.93275645379286*^9, 
   3.9327565357716417`*^9, 3.932756806063693*^9, 3.932756842290435*^9, 
   3.9327569805126543`*^9, 3.932757053448591*^9, 3.932757085441546*^9, 
   3.932757204241365*^9, 3.932757518489917*^9, 3.9327591419486094`*^9},
 CellLabel->
  "During evaluation of \
In[572]:=",ExpressionUUID->"5285fa2e-0bd6-4639-bfcd-1fe113532c6a"],

Cell[BoxData["\<\"Calculating the M1 spontaneous transition rates ...\"\>"], \
"Print",
 CellChangeTimes->{{3.932736949633649*^9, 3.93273698205582*^9}, {
   3.932737139053205*^9, 3.9327371563577137`*^9}, 3.932754179474306*^9, 
   3.9327542435558167`*^9, 3.932754508551993*^9, 3.9327545605938683`*^9, 
   3.9327550102727413`*^9, 3.932755188328085*^9, 3.932756067407352*^9, {
   3.932756243117978*^9, 3.9327562850945787`*^9}, 3.93275645379286*^9, 
   3.9327565357716417`*^9, 3.932756806063693*^9, 3.932756842290435*^9, 
   3.9327569805126543`*^9, 3.932757053448591*^9, 3.932757085441546*^9, 
   3.932757204241365*^9, 3.932757518489917*^9, 3.932759142369644*^9},
 CellLabel->
  "During evaluation of \
In[572]:=",ExpressionUUID->"7e12bd88-5237-4d75-867c-4919a8ba6627"],

Cell[BoxData["\<\"Calculating the oscillator strength for transitions from \
the ground state ...\"\>"], "Print",
 CellChangeTimes->{{3.932736949633649*^9, 3.93273698205582*^9}, {
   3.932737139053205*^9, 3.9327371563577137`*^9}, 3.932754179474306*^9, 
   3.9327542435558167`*^9, 3.932754508551993*^9, 3.9327545605938683`*^9, 
   3.9327550102727413`*^9, 3.932755188328085*^9, 3.932756067407352*^9, {
   3.932756243117978*^9, 3.9327562850945787`*^9}, 3.93275645379286*^9, 
   3.9327565357716417`*^9, 3.932756806063693*^9, 3.932756842290435*^9, 
   3.9327569805126543`*^9, 3.932757053448591*^9, 3.932757085441546*^9, 
   3.932757204241365*^9, 3.932757518489917*^9, 3.932759142484578*^9},
 CellLabel->
  "During evaluation of \
In[572]:=",ExpressionUUID->"b44d19fc-2833-415a-9bf5-321ce5cdcfe0"],

Cell[BoxData["\<\"Calculating the natural radiative lifetimes ...\"\>"], \
"Print",
 CellChangeTimes->{{3.932736949633649*^9, 3.93273698205582*^9}, {
   3.932737139053205*^9, 3.9327371563577137`*^9}, 3.932754179474306*^9, 
   3.9327542435558167`*^9, 3.932754508551993*^9, 3.9327545605938683`*^9, 
   3.9327550102727413`*^9, 3.932755188328085*^9, 3.932756067407352*^9, {
   3.932756243117978*^9, 3.9327562850945787`*^9}, 3.93275645379286*^9, 
   3.9327565357716417`*^9, 3.932756806063693*^9, 3.932756842290435*^9, 
   3.9327569805126543`*^9, 3.932757053448591*^9, 3.932757085441546*^9, 
   3.932757204241365*^9, 3.932757518489917*^9, 3.9327591425153713`*^9},
 CellLabel->
  "During evaluation of \
In[572]:=",ExpressionUUID->"41353609-be7e-4406-9f4f-6ae6f354191f"],

Cell[BoxData["\<\"Calculating the transition energies in K ...\"\>"], "Print",
 CellChangeTimes->{{3.932736949633649*^9, 3.93273698205582*^9}, {
   3.932737139053205*^9, 3.9327371563577137`*^9}, 3.932754179474306*^9, 
   3.9327542435558167`*^9, 3.932754508551993*^9, 3.9327545605938683`*^9, 
   3.9327550102727413`*^9, 3.932755188328085*^9, 3.932756067407352*^9, {
   3.932756243117978*^9, 3.9327562850945787`*^9}, 3.93275645379286*^9, 
   3.9327565357716417`*^9, 3.932756806063693*^9, 3.932756842290435*^9, 
   3.9327569805126543`*^9, 3.932757053448591*^9, 3.932757085441546*^9, 
   3.932757204241365*^9, 3.932757518489917*^9, 3.932759142544716*^9},
 CellLabel->
  "During evaluation of \
In[572]:=",ExpressionUUID->"fcb29e1b-d7f2-4fc5-b12a-7069548fce19"],

Cell[BoxData["\<\"Calculating the transition wavelengths in nm ...\"\>"], \
"Print",
 CellChangeTimes->{{3.932736949633649*^9, 3.93273698205582*^9}, {
   3.932737139053205*^9, 3.9327371563577137`*^9}, 3.932754179474306*^9, 
   3.9327542435558167`*^9, 3.932754508551993*^9, 3.9327545605938683`*^9, 
   3.9327550102727413`*^9, 3.932755188328085*^9, 3.932756067407352*^9, {
   3.932756243117978*^9, 3.9327562850945787`*^9}, 3.93275645379286*^9, 
   3.9327565357716417`*^9, 3.932756806063693*^9, 3.932756842290435*^9, 
   3.9327569805126543`*^9, 3.932757053448591*^9, 3.932757085441546*^9, 
   3.932757204241365*^9, 3.932757518489917*^9, 3.932759142575226*^9},
 CellLabel->
  "During evaluation of \
In[572]:=",ExpressionUUID->"ce5d9c38-e989-4ca3-aa18-8021680329b6"],

Cell[BoxData["\<\"Estimating the uncertainties in \[Lambda]/nm assuming a \
12.9982 K uncertainty in energies.\"\>"], "Print",
 CellChangeTimes->{{3.932736949633649*^9, 3.93273698205582*^9}, {
   3.932737139053205*^9, 3.9327371563577137`*^9}, 3.932754179474306*^9, 
   3.9327542435558167`*^9, 3.932754508551993*^9, 3.9327545605938683`*^9, 
   3.9327550102727413`*^9, 3.932755188328085*^9, 3.932756067407352*^9, {
   3.932756243117978*^9, 3.9327562850945787`*^9}, 3.93275645379286*^9, 
   3.9327565357716417`*^9, 3.932756806063693*^9, 3.932756842290435*^9, 
   3.9327569805126543`*^9, 3.932757053448591*^9, 3.932757085441546*^9, 
   3.932757204241365*^9, 3.932757518489917*^9, 3.932759142606627*^9},
 CellLabel->
  "During evaluation of \
In[572]:=",ExpressionUUID->"3ddc1b27-9a7b-46b6-a03d-f24874262b6d"],

Cell[BoxData["\<\"Formatting a tabular output file ...\"\>"], "Print",
 CellChangeTimes->{{3.932736949633649*^9, 3.93273698205582*^9}, {
   3.932737139053205*^9, 3.9327371563577137`*^9}, 3.932754179474306*^9, 
   3.9327542435558167`*^9, 3.932754508551993*^9, 3.9327545605938683`*^9, 
   3.9327550102727413`*^9, 3.932755188328085*^9, 3.932756067407352*^9, {
   3.932756243117978*^9, 3.9327562850945787`*^9}, 3.93275645379286*^9, 
   3.9327565357716417`*^9, 3.932756806063693*^9, 3.932756842290435*^9, 
   3.9327569805126543`*^9, 3.932757053448591*^9, 3.932757085441546*^9, 
   3.932757204241365*^9, 3.932757518489917*^9, 3.932759142637268*^9},
 CellLabel->
  "During evaluation of \
In[572]:=",ExpressionUUID->"79c75b5f-a57b-4d94-9900-87073ba33541"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\">> Formatting the tabular output took \"\>", 
   "\[InvisibleSpace]", "0.3391329999999968`", 
   "\[InvisibleSpace]", "\<\" seconds.\"\>"}],
  SequenceForm[
  ">> Formatting the tabular output took ", 0.3391329999999968, " seconds."],
  Editable->False]], "Print",
 CellChangeTimes->{{3.932736949633649*^9, 3.93273698205582*^9}, {
   3.932737139053205*^9, 3.9327371563577137`*^9}, 3.932754179474306*^9, 
   3.9327542435558167`*^9, 3.932754508551993*^9, 3.9327545605938683`*^9, 
   3.9327550102727413`*^9, 3.932755188328085*^9, 3.932756067407352*^9, {
   3.932756243117978*^9, 3.9327562850945787`*^9}, 3.93275645379286*^9, 
   3.9327565357716417`*^9, 3.932756806063693*^9, 3.932756842290435*^9, 
   3.9327569805126543`*^9, 3.932757053448591*^9, 3.932757085441546*^9, 
   3.932757204241365*^9, 3.932757518489917*^9, 3.932759142913609*^9},
 CellLabel->
  "During evaluation of \
In[572]:=",ExpressionUUID->"42cabe82-cde6-42d8-9f70-5e1e4c42db82"],

Cell[BoxData["\<\"Rounding wavelengths according to estimated uncertainties \
...\"\>"], "Print",
 CellChangeTimes->{{3.932736949633649*^9, 3.93273698205582*^9}, {
   3.932737139053205*^9, 3.9327371563577137`*^9}, 3.932754179474306*^9, 
   3.9327542435558167`*^9, 3.932754508551993*^9, 3.9327545605938683`*^9, 
   3.9327550102727413`*^9, 3.932755188328085*^9, 3.932756067407352*^9, {
   3.932756243117978*^9, 3.9327562850945787`*^9}, 3.93275645379286*^9, 
   3.9327565357716417`*^9, 3.932756806063693*^9, 3.932756842290435*^9, 
   3.9327569805126543`*^9, 3.932757053448591*^9, 3.932757085441546*^9, 
   3.932757204241365*^9, 3.932757518489917*^9, 3.9327591429534187`*^9},
 CellLabel->
  "During evaluation of \
In[572]:=",ExpressionUUID->"99b956c0-f6a8-42b7-ad47-ea57acf58c8e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\">> Rounding the wavelengths took \"\>", "\[InvisibleSpace]", 
   "0.6745400000000004`", "\[InvisibleSpace]", "\<\" seconds.\"\>"}],
  SequenceForm[
  ">> Rounding the wavelengths took ", 0.6745400000000004, " seconds."],
  Editable->False]], "Print",
 CellChangeTimes->{{3.932736949633649*^9, 3.93273698205582*^9}, {
   3.932737139053205*^9, 3.9327371563577137`*^9}, 3.932754179474306*^9, 
   3.9327542435558167`*^9, 3.932754508551993*^9, 3.9327545605938683`*^9, 
   3.9327550102727413`*^9, 3.932755188328085*^9, 3.932756067407352*^9, {
   3.932756243117978*^9, 3.9327562850945787`*^9}, 3.93275645379286*^9, 
   3.9327565357716417`*^9, 3.932756806063693*^9, 3.932756842290435*^9, 
   3.9327569805126543`*^9, 3.932757053448591*^9, 3.932757085441546*^9, 
   3.932757204241365*^9, 3.932757518489917*^9, 3.932759143248446*^9},
 CellLabel->
  "During evaluation of \
In[572]:=",ExpressionUUID->"f6061353-81d5-40c8-bbea-adf93033a412"],

Cell[BoxData["\<\"Rounding lifetimes and transition rates to three \
significant figures ...\"\>"], "Print",
 CellChangeTimes->{{3.932736949633649*^9, 3.93273698205582*^9}, {
   3.932737139053205*^9, 3.9327371563577137`*^9}, 3.932754179474306*^9, 
   3.9327542435558167`*^9, 3.932754508551993*^9, 3.9327545605938683`*^9, 
   3.9327550102727413`*^9, 3.932755188328085*^9, 3.932756067407352*^9, {
   3.932756243117978*^9, 3.9327562850945787`*^9}, 3.93275645379286*^9, 
   3.9327565357716417`*^9, 3.932756806063693*^9, 3.932756842290435*^9, 
   3.9327569805126543`*^9, 3.932757053448591*^9, 3.932757085441546*^9, 
   3.932757204241365*^9, 3.932757518489917*^9, 3.932759143287738*^9},
 CellLabel->
  "During evaluation of \
In[572]:=",ExpressionUUID->"22a7c9fd-a39c-4b8e-9ab7-6d8ce0dce3c5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\">> Rounding the lifetimes and transition rates took \"\>", 
   "\[InvisibleSpace]", "0.6511040000000037`", 
   "\[InvisibleSpace]", "\<\" seconds.\"\>"}],
  SequenceForm[
  ">> Rounding the lifetimes and transition rates took ", 0.6511040000000037, 
   " seconds."],
  Editable->False]], "Print",
 CellChangeTimes->{{3.932736949633649*^9, 3.93273698205582*^9}, {
   3.932737139053205*^9, 3.9327371563577137`*^9}, 3.932754179474306*^9, 
   3.9327542435558167`*^9, 3.932754508551993*^9, 3.9327545605938683`*^9, 
   3.9327550102727413`*^9, 3.932755188328085*^9, 3.932756067407352*^9, {
   3.932756243117978*^9, 3.9327562850945787`*^9}, 3.93275645379286*^9, 
   3.9327565357716417`*^9, 3.932756806063693*^9, 3.932756842290435*^9, 
   3.9327569805126543`*^9, 3.932757053448591*^9, 3.932757085441546*^9, 
   3.932757204241365*^9, 3.932757518489917*^9, 3.932759143899825*^9},
 CellLabel->
  "During evaluation of \
In[572]:=",ExpressionUUID->"118c5ab0-6313-4860-aba1-240b7824dd5a"],

Cell[BoxData["\<\"Exporting tabular data to \
/Users/juan/ZiaLab/Codebase/qlanth/ql-LaF3-no-truncation/Nd in LaF3 - ql - M1 \
- tabular.zip ...\"\>"], "Print",
 CellChangeTimes->{{3.932736949633649*^9, 3.93273698205582*^9}, {
   3.932737139053205*^9, 3.9327371563577137`*^9}, 3.932754179474306*^9, 
   3.9327542435558167`*^9, 3.932754508551993*^9, 3.9327545605938683`*^9, 
   3.9327550102727413`*^9, 3.932755188328085*^9, 3.932756067407352*^9, {
   3.932756243117978*^9, 3.9327562850945787`*^9}, 3.93275645379286*^9, 
   3.9327565357716417`*^9, 3.932756806063693*^9, 3.932756842290435*^9, 
   3.9327569805126543`*^9, 3.932757053448591*^9, 3.932757085441546*^9, 
   3.932757204241365*^9, 3.932757518489917*^9, 3.932759143940412*^9},
 CellLabel->
  "During evaluation of \
In[572]:=",ExpressionUUID->"1570f4c8-651e-4514-be59-d27028339987"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\">> Exporting the tabular data took \"\>", "\[InvisibleSpace]", 
   "0.11185100000000148`", "\[InvisibleSpace]", "\<\" seconds.\"\>"}],
  SequenceForm[
  ">> Exporting the tabular data took ", 0.11185100000000148`, " seconds."],
  Editable->False]], "Print",
 CellChangeTimes->{{3.932736949633649*^9, 3.93273698205582*^9}, {
   3.932737139053205*^9, 3.9327371563577137`*^9}, 3.932754179474306*^9, 
   3.9327542435558167`*^9, 3.932754508551993*^9, 3.9327545605938683`*^9, 
   3.9327550102727413`*^9, 3.932755188328085*^9, 3.932756067407352*^9, {
   3.932756243117978*^9, 3.9327562850945787`*^9}, 3.93275645379286*^9, 
   3.9327565357716417`*^9, 3.932756806063693*^9, 3.932756842290435*^9, 
   3.9327569805126543`*^9, 3.932757053448591*^9, 3.932757085441546*^9, 
   3.932757204241365*^9, 3.932757518489917*^9, 3.932759144011664*^9},
 CellLabel->
  "During evaluation of \
In[572]:=",ExpressionUUID->"0363e0cd-4137-46c6-b677-fb505189cdc5"],

Cell[BoxData["\<\"Exporting raw data as an association to \
/Users/juan/ZiaLab/Codebase/qlanth/ql-LaF3-no-truncation/Nd in LaF3 - ql - M1 \
- tabular.zip ...\"\>"], "Print",
 CellChangeTimes->{{3.932736949633649*^9, 3.93273698205582*^9}, {
   3.932737139053205*^9, 3.9327371563577137`*^9}, 3.932754179474306*^9, 
   3.9327542435558167`*^9, 3.932754508551993*^9, 3.9327545605938683`*^9, 
   3.9327550102727413`*^9, 3.932755188328085*^9, 3.932756067407352*^9, {
   3.932756243117978*^9, 3.9327562850945787`*^9}, 3.93275645379286*^9, 
   3.9327565357716417`*^9, 3.932756806063693*^9, 3.932756842290435*^9, 
   3.9327569805126543`*^9, 3.932757053448591*^9, 3.932757085441546*^9, 
   3.932757204241365*^9, 3.932757518489917*^9, 3.932759144040926*^9},
 CellLabel->
  "During evaluation of \
In[572]:=",ExpressionUUID->"5501b65f-0d3f-4c79-8895-d361455e6b73"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\">> Exporting the raw data took \"\>", "\[InvisibleSpace]", 
   "0.23303700000000305`", "\[InvisibleSpace]", "\<\" seconds.\"\>"}],
  SequenceForm[
  ">> Exporting the raw data took ", 0.23303700000000305`, " seconds."],
  Editable->False]], "Print",
 CellChangeTimes->{{3.932736949633649*^9, 3.93273698205582*^9}, {
   3.932737139053205*^9, 3.9327371563577137`*^9}, 3.932754179474306*^9, 
   3.9327542435558167`*^9, 3.932754508551993*^9, 3.9327545605938683`*^9, 
   3.9327550102727413`*^9, 3.932755188328085*^9, 3.932756067407352*^9, {
   3.932756243117978*^9, 3.9327562850945787`*^9}, 3.93275645379286*^9, 
   3.9327565357716417`*^9, 3.932756806063693*^9, 3.932756842290435*^9, 
   3.9327569805126543`*^9, 3.932757053448591*^9, 3.932757085441546*^9, 
   3.932757204241365*^9, 3.932757518489917*^9, 3.932759144245782*^9},
 CellLabel->
  "During evaluation of \
In[572]:=",ExpressionUUID->"d7942df2-64ca-44ff-a145-71a2d96f7ad9"],

Cell[BoxData["\<\"Formatting and exporting a CSV output...\"\>"], "Print",
 CellChangeTimes->{{3.932736949633649*^9, 3.93273698205582*^9}, {
   3.932737139053205*^9, 3.9327371563577137`*^9}, 3.932754179474306*^9, 
   3.9327542435558167`*^9, 3.932754508551993*^9, 3.9327545605938683`*^9, 
   3.9327550102727413`*^9, 3.932755188328085*^9, 3.932756067407352*^9, {
   3.932756243117978*^9, 3.9327562850945787`*^9}, 3.93275645379286*^9, 
   3.9327565357716417`*^9, 3.932756806063693*^9, 3.932756842290435*^9, 
   3.9327569805126543`*^9, 3.932757053448591*^9, 3.932757085441546*^9, 
   3.932757204241365*^9, 3.932757518489917*^9, 3.932759144284227*^9},
 CellLabel->
  "During evaluation of \
In[572]:=",ExpressionUUID->"e660517c-3866-4dd1-abea-aca54898c1a5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\">> Formatting the CSV output took \"\>", "\[InvisibleSpace]", 
   "0.17859299999999934`", "\[InvisibleSpace]", "\<\" seconds.\"\>"}],
  SequenceForm[
  ">> Formatting the CSV output took ", 0.17859299999999934`, " seconds."],
  Editable->False]], "Print",
 CellChangeTimes->{{3.932736949633649*^9, 3.93273698205582*^9}, {
   3.932737139053205*^9, 3.9327371563577137`*^9}, 3.932754179474306*^9, 
   3.9327542435558167`*^9, 3.932754508551993*^9, 3.9327545605938683`*^9, 
   3.9327550102727413`*^9, 3.932755188328085*^9, 3.932756067407352*^9, {
   3.932756243117978*^9, 3.9327562850945787`*^9}, 3.93275645379286*^9, 
   3.9327565357716417`*^9, 3.932756806063693*^9, 3.932756842290435*^9, 
   3.9327569805126543`*^9, 3.932757053448591*^9, 3.932757085441546*^9, 
   3.932757204241365*^9, 3.932757518489917*^9, 3.9327591444237957`*^9},
 CellLabel->
  "During evaluation of \
In[572]:=",ExpressionUUID->"cf1dce5f-c782-402d-89fc-f92d27cc567d"],

Cell[BoxData["\<\"Exporting csv data to \
/Users/juan/ZiaLab/Codebase/qlanth/ql-LaF3-no-truncation/Nd in LaF3 - ql - \
M1.csv ...\"\>"], "Print",
 CellChangeTimes->{{3.932736949633649*^9, 3.93273698205582*^9}, {
   3.932737139053205*^9, 3.9327371563577137`*^9}, 3.932754179474306*^9, 
   3.9327542435558167`*^9, 3.932754508551993*^9, 3.9327545605938683`*^9, 
   3.9327550102727413`*^9, 3.932755188328085*^9, 3.932756067407352*^9, {
   3.932756243117978*^9, 3.9327562850945787`*^9}, 3.93275645379286*^9, 
   3.9327565357716417`*^9, 3.932756806063693*^9, 3.932756842290435*^9, 
   3.9327569805126543`*^9, 3.932757053448591*^9, 3.932757085441546*^9, 
   3.932757204241365*^9, 3.932757518489917*^9, 3.9327591444562397`*^9},
 CellLabel->
  "During evaluation of \
In[572]:=",ExpressionUUID->"851cb966-1158-499f-8882-7ad624203903"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\">> Exporting the csv data took \"\>", "\[InvisibleSpace]", 
   "0.030763000000000318`", "\[InvisibleSpace]", "\<\" seconds.\"\>"}],
  SequenceForm[
  ">> Exporting the csv data took ", 0.030763000000000318`, " seconds."],
  Editable->False]], "Print",
 CellChangeTimes->{{3.932736949633649*^9, 3.93273698205582*^9}, {
   3.932737139053205*^9, 3.9327371563577137`*^9}, 3.932754179474306*^9, 
   3.9327542435558167`*^9, 3.932754508551993*^9, 3.9327545605938683`*^9, 
   3.9327550102727413`*^9, 3.932755188328085*^9, 3.932756067407352*^9, {
   3.932756243117978*^9, 3.9327562850945787`*^9}, 3.93275645379286*^9, 
   3.9327565357716417`*^9, 3.932756806063693*^9, 3.932756842290435*^9, 
   3.9327569805126543`*^9, 3.932757053448591*^9, 3.932757085441546*^9, 
   3.932757204241365*^9, 3.932757518489917*^9, 3.932759144489365*^9},
 CellLabel->
  "During evaluation of \
In[572]:=",ExpressionUUID->"68847fc6-c0ac-4a05-b242-ef140f62e66c"],

Cell[BoxData["\<\"Creating a notebook with a Manipulate to select a \
wavelength interval and a lifetime power of ten ...\"\>"], "Print",
 CellChangeTimes->{{3.932736949633649*^9, 3.93273698205582*^9}, {
   3.932737139053205*^9, 3.9327371563577137`*^9}, 3.932754179474306*^9, 
   3.9327542435558167`*^9, 3.932754508551993*^9, 3.9327545605938683`*^9, 
   3.9327550102727413`*^9, 3.932755188328085*^9, 3.932756067407352*^9, {
   3.932756243117978*^9, 3.9327562850945787`*^9}, 3.93275645379286*^9, 
   3.9327565357716417`*^9, 3.932756806063693*^9, 3.932756842290435*^9, 
   3.9327569805126543`*^9, 3.932757053448591*^9, 3.932757085441546*^9, 
   3.932757204241365*^9, 3.932757518489917*^9, 3.9327591445205507`*^9},
 CellLabel->
  "During evaluation of \
In[572]:=",ExpressionUUID->"ee566bf9-0dd1-460b-b937-dcefeaf6f282"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\">> Creating the notebook took \"\>", "\[InvisibleSpace]", 
   "1.6669589999999985`", "\[InvisibleSpace]", "\<\" seconds.\"\>"}],
  SequenceForm[
  ">> Creating the notebook took ", 1.6669589999999985`, " seconds."],
  Editable->False]], "Print",
 CellChangeTimes->{{3.932736949633649*^9, 3.93273698205582*^9}, {
   3.932737139053205*^9, 3.9327371563577137`*^9}, 3.932754179474306*^9, 
   3.9327542435558167`*^9, 3.932754508551993*^9, 3.9327545605938683`*^9, 
   3.9327550102727413`*^9, 3.932755188328085*^9, 3.932756067407352*^9, {
   3.932756243117978*^9, 3.9327562850945787`*^9}, 3.93275645379286*^9, 
   3.9327565357716417`*^9, 3.932756806063693*^9, 3.932756842290435*^9, 
   3.9327569805126543`*^9, 3.932757053448591*^9, 3.932757085441546*^9, 
   3.932757204241365*^9, 3.932757518489917*^9, 3.932759146128186*^9},
 CellLabel->
  "During evaluation of \
In[572]:=",ExpressionUUID->"eb8f1434-c1d0-4839-a174-c445ca4d8289"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\">> Saving notebook to \"\>", 
   "\[InvisibleSpace]", \
"\<\"/Users/juan/ZiaLab/Codebase/qlanth/ql-LaF3-no-truncation/M1 - Nd in \
LaF3.nb\"\>", "\[InvisibleSpace]", "\<\" ...\"\>"}],
  SequenceForm[
  ">> Saving notebook to ", 
   "/Users/juan/ZiaLab/Codebase/qlanth/ql-LaF3-no-truncation/M1 - Nd in \
LaF3.nb", " ..."],
  Editable->False]], "Print",
 CellChangeTimes->{{3.932736949633649*^9, 3.93273698205582*^9}, {
   3.932737139053205*^9, 3.9327371563577137`*^9}, 3.932754179474306*^9, 
   3.9327542435558167`*^9, 3.932754508551993*^9, 3.9327545605938683`*^9, 
   3.9327550102727413`*^9, 3.932755188328085*^9, 3.932756067407352*^9, {
   3.932756243117978*^9, 3.9327562850945787`*^9}, 3.93275645379286*^9, 
   3.9327565357716417`*^9, 3.932756806063693*^9, 3.932756842290435*^9, 
   3.9327569805126543`*^9, 3.932757053448591*^9, 3.932757085441546*^9, 
   3.932757204241365*^9, 3.932757518489917*^9, 3.932759146175806*^9},
 CellLabel->
  "During evaluation of \
In[572]:=",ExpressionUUID->"e315d774-00c9-499e-9c73-f62342e7bd04"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\">> Saving the notebook took \"\>", "\[InvisibleSpace]", 
   "0.32323399999999936`", "\[InvisibleSpace]", "\<\" seconds.\"\>"}],
  SequenceForm[
  ">> Saving the notebook took ", 0.32323399999999936`, " seconds."],
  Editable->False]], "Print",
 CellChangeTimes->{{3.932736949633649*^9, 3.93273698205582*^9}, {
   3.932737139053205*^9, 3.9327371563577137`*^9}, 3.932754179474306*^9, 
   3.9327542435558167`*^9, 3.932754508551993*^9, 3.9327545605938683`*^9, 
   3.9327550102727413`*^9, 3.932755188328085*^9, 3.932756067407352*^9, {
   3.932756243117978*^9, 3.9327562850945787`*^9}, 3.93275645379286*^9, 
   3.9327565357716417`*^9, 3.932756806063693*^9, 3.932756842290435*^9, 
   3.9327569805126543`*^9, 3.932757053448591*^9, 3.932757085441546*^9, 
   3.932757204241365*^9, 3.932757518489917*^9, 3.932759146449888*^9},
 CellLabel->
  "During evaluation of \
In[572]:=",ExpressionUUID->"5c19345d-96a1-4189-b3c7-a39a43e73423"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{864, 1057},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.2 for Mac OS X ARM (64-bit) (January 30, 2023)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"835c8c80-12c4-4b35-a6ae-35e4d29ae498"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 382, 5, 97, "Title",ExpressionUUID->"00f00290-b5c1-4b84-8e96-c39f696e39a9"],
Cell[965, 29, 1315, 22, 218, "Text",ExpressionUUID->"6f4b03bf-0801-4441-a693-47caedf36bf8"],
Cell[2283, 53, 3246, 51, 84, "Input",ExpressionUUID->"aba5db8f-5736-4934-8ff0-47055ae7454f",
 InitializationCell->True],
Cell[5532, 106, 1039, 19, 103, "Text",ExpressionUUID->"7c8637bf-2097-4226-b6c5-cbdaca9d43d9"],
Cell[CellGroupData[{
Cell[6596, 129, 5737, 111, 378, "Input",ExpressionUUID->"47a22e19-55fa-4988-b8dc-e9ee4ce2bc08"],
Cell[CellGroupData[{
Cell[12358, 244, 1184, 23, 44, "Print",ExpressionUUID->"8bcadc66-ef90-4db9-bb47-c7e427969d8e"],
Cell[13545, 269, 1184, 23, 44, "Print",ExpressionUUID->"6a1823ad-6e4d-4791-ad56-46c99fab97ee"],
Cell[14732, 294, 1186, 23, 44, "Print",ExpressionUUID->"f398aef7-4163-4f31-b344-829af4fae4ac"],
Cell[15921, 319, 1184, 23, 44, "Print",ExpressionUUID->"57000e10-d658-4190-8fae-6b0a5dd775e0"],
Cell[17108, 344, 1186, 23, 44, "Print",ExpressionUUID->"214cae93-c580-43b5-97a3-35b35bb9e6bf"],
Cell[18297, 369, 1183, 23, 44, "Print",ExpressionUUID->"b051ce77-8280-476a-9eff-1a033d18fc36"],
Cell[19483, 394, 1184, 23, 44, "Print",ExpressionUUID->"4fca7ae1-eb7c-4fd6-b84a-164d1650f8ad"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[20716, 423, 324, 5, 69, "Section",ExpressionUUID->"7963ed42-f029-4505-83e7-13c18f17b65d"],
Cell[21043, 430, 1562, 24, 195, "Text",ExpressionUUID->"efd1cce1-1620-4904-bcba-794d53250035"],
Cell[CellGroupData[{
Cell[22630, 458, 228, 4, 41, "Input",ExpressionUUID->"a755dbe0-936c-44ff-b0cc-0d1b97ecccd4"],
Cell[22861, 464, 86251, 1701, 1010, "Output",ExpressionUUID->"79945022-82a5-4000-8cdb-c52027e8513c"]
}, Open  ]],
Cell[109127, 2168, 2001, 53, 231, "Input",ExpressionUUID->"a04e0247-7edd-4de0-8348-8d2e0e8693f5"],
Cell[CellGroupData[{
Cell[111153, 2225, 7656, 137, 609, "Input",ExpressionUUID->"6009bbd4-fdd1-4e00-9e5b-df2ea09d2617"],
Cell[118812, 2364, 723, 14, 63, "Message",ExpressionUUID->"008fa4a5-7d8a-4943-b0b9-b5771e265ac7"],
Cell[119538, 2380, 721, 14, 63, "Message",ExpressionUUID->"f606d5e8-d22c-462e-9533-d904657c1950"],
Cell[120262, 2396, 723, 14, 63, "Message",ExpressionUUID->"a6df88c5-a9b4-413c-8412-86e53b1e2828"],
Cell[120988, 2412, 481, 10, 28, "Message",ExpressionUUID->"046a1e3d-3170-4558-a78c-8a100497349a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[121518, 2428, 1249, 19, 107, "Section",ExpressionUUID->"d8eb5b8f-6bce-4408-ad57-c67898c1dc01"],
Cell[122770, 2449, 188, 3, 41, "Input",ExpressionUUID->"dbfda0db-4b46-4a0d-8b01-ffe9a209fb85"],
Cell[122961, 2454, 74669, 1484, 984, "Input",ExpressionUUID->"fc4e7e52-94fb-4117-b20c-461c04d252bb"],
Cell[197633, 3940, 2570, 77, 252, "Input",ExpressionUUID->"8c9deead-5eb5-43cc-8c10-2755b2726bcd"],
Cell[CellGroupData[{
Cell[200228, 4021, 5716, 109, 504, "Input",ExpressionUUID->"3540dc69-2435-46f5-bec5-27a00aa70142"],
Cell[CellGroupData[{
Cell[205969, 4134, 763, 13, 24, "Print",ExpressionUUID->"1b0bcd8e-64c9-49e9-a34e-8f77310b1df0"],
Cell[206735, 4149, 1080, 21, 24, "Print",ExpressionUUID->"5285fa2e-0bd6-4639-bfcd-1fe113532c6a"],
Cell[207818, 4172, 765, 12, 24, "Print",ExpressionUUID->"7e12bd88-5237-4d75-867c-4919a8ba6627"],
Cell[208586, 4186, 791, 12, 24, "Print",ExpressionUUID->"b44d19fc-2833-415a-9bf5-321ce5cdcfe0"],
Cell[209380, 4200, 763, 12, 24, "Print",ExpressionUUID->"41353609-be7e-4406-9f4f-6ae6f354191f"],
Cell[210146, 4214, 756, 11, 24, "Print",ExpressionUUID->"fcb29e1b-d7f2-4fc5-b12a-7069548fce19"],
Cell[210905, 4227, 762, 12, 24, "Print",ExpressionUUID->"ce5d9c38-e989-4ca3-aa18-8021680329b6"],
Cell[211670, 4241, 804, 12, 24, "Print",ExpressionUUID->"3ddc1b27-9a7b-46b6-a03d-f24874262b6d"],
Cell[212477, 4255, 748, 11, 24, "Print",ExpressionUUID->"79c75b5f-a57b-4d94-9900-87073ba33541"],
Cell[213228, 4268, 991, 18, 24, "Print",ExpressionUUID->"42cabe82-cde6-42d8-9f70-5e1e4c42db82"],
Cell[214222, 4288, 777, 12, 24, "Print",ExpressionUUID->"99b956c0-f6a8-42b7-ad47-ea57acf58c8e"],
Cell[215002, 4302, 977, 17, 24, "Print",ExpressionUUID->"f6061353-81d5-40c8-bbea-adf93033a412"],
Cell[215982, 4321, 786, 12, 24, "Print",ExpressionUUID->"22a7c9fd-a39c-4b8e-9ab7-6d8ce0dce3c5"],
Cell[216771, 4335, 1023, 19, 24, "Print",ExpressionUUID->"118c5ab0-6313-4860-aba1-240b7824dd5a"],
Cell[217797, 4356, 837, 13, 24, "Print",ExpressionUUID->"1570f4c8-651e-4514-be59-d27028339987"],
Cell[218637, 4371, 984, 17, 24, "Print",ExpressionUUID->"0363e0cd-4137-46c6-b677-fb505189cdc5"],
Cell[219624, 4390, 851, 13, 24, "Print",ExpressionUUID->"5501b65f-0d3f-4c79-8895-d361455e6b73"],
Cell[220478, 4405, 976, 17, 24, "Print",ExpressionUUID->"d7942df2-64ca-44ff-a145-71a2d96f7ad9"],
Cell[221457, 4424, 752, 11, 24, "Print",ExpressionUUID->"e660517c-3866-4dd1-abea-aca54898c1a5"],
Cell[222212, 4437, 984, 17, 24, "Print",ExpressionUUID->"cf1dce5f-c782-402d-89fc-f92d27cc567d"],
Cell[223199, 4456, 825, 13, 24, "Print",ExpressionUUID->"851cb966-1158-499f-8882-7ad624203903"],
Cell[224027, 4471, 978, 17, 24, "Print",ExpressionUUID->"68847fc6-c0ac-4a05-b242-ef140f62e66c"],
Cell[225008, 4490, 817, 12, 24, "Print",ExpressionUUID->"ee566bf9-0dd1-460b-b937-dcefeaf6f282"],
Cell[225828, 4504, 972, 17, 24, "Print",ExpressionUUID->"eb8f1434-c1d0-4839-a174-c445ca4d8289"],
Cell[226803, 4523, 1078, 21, 24, "Print",ExpressionUUID->"e315d774-00c9-499e-9c73-f62342e7bd04"],
Cell[227884, 4546, 970, 17, 24, "Print",ExpressionUUID->"5c19345d-96a1-4189-b3c7-a39a43e73423"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

