(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[     55068,       1117]
NotebookOptionsPosition[     50234,       1022]
NotebookOutlinePosition[     52807,       1079]
CellTagsIndexPosition[     52685,       1073]
WindowTitle->LevelMagDipoleLineStrength
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {GridBox[{
      {
       ItemBox[Cell[BoxData[
         RowBox[{
          TemplateBox[{12},
           "Spacer1"], Cell["DAVID LIZARAZO/QLANTH SYMBOL", "PacletNameCell",
           TextAlignment->Center,ExpressionUUID->
           "43c3c6d4-a556-4c9a-869a-2a4b6bda2727"], 
          TemplateBox[{8},
           "Spacer1"]}]],
         TextAlignment->Center,ExpressionUUID->
         "b710def7-5745-4055-bb5f-66b3ea5d9649"],
        Background->RGBColor[0.490196, 0.576471, 0.690196],
        ItemSize->Full], ""}
     },
     GridBoxAlignment->{"Rows" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {Full, 
         Scaled[0.02]}, "Rows" -> {{2.5}}}], Cell[TextData[{
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "See Also",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
           "c3f09e57-6cf4-41c7-9715-20ccb5f484ab"]
         }],ExpressionUUID->"43ab00af-f634-43c3-b8b0-d5c4281c473a"],
         StripOnInput->False],{
        StyleBox[
          "\"LevelMagDipoleOscillatorStrength\"", "SeeAlsoRelated", 
           StripOnInput -> False] :> 
         Documentation`HelpLookup[
          "paclet:DavidLizarazo/qlanth/ref/LevelMagDipoleOscillatorStrength"],
          StyleBox[
          "\"LevelSolver\"", "SeeAlsoRelated", StripOnInput -> False] :> 
         Documentation`HelpLookup[
          "paclet:DavidLizarazo/qlanth/ref/LevelSolver"]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"SeeAlso"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "b37fcffc-e863-4c5d-a226-117b3bd224df"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "URL",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
           "1600b1ad-52ba-4c29-85d6-96385dc584d6"]
         }],ExpressionUUID->"319aa421-8e78-422e-ac66-7ca11ca60c19"],
         StripOnInput->False],{
        "\"DavidLizarazo/qlanth/ref/LevelMagDipoleLineStrength\"" :> None, 
         "\"Copy Wolfram Documentation Center URL\"" :> 
         Module[{DocumentationSearch`Private`nb$}, 
           DocumentationSearch`Private`nb$ = 
            NotebookPut[
             Notebook[{
               Cell["DavidLizarazo/qlanth/ref/LevelMagDipoleLineStrength"]}, 
               Visible -> DocumentationBuild`Make`Private`visible$64039]]; 
           SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
           FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
           NotebookClose[DocumentationSearch`Private`nb$]; Null], Delimiter, 
         "\"Copy web URL\"" :> 
         Module[{DocumentationSearch`Private`nb$}, 
           DocumentationSearch`Private`nb$ = 
            NotebookPut[
             Notebook[{
               Cell[BoxData[
                 MakeBoxes[
                  Hyperlink[
                   "http://reference.wolfram.com/language/DavidLizarazo/\
qlanth/ref/LevelMagDipoleLineStrength.html"], StandardForm]], "Input", 
                 TextClipboardType -> "PlainText"]}, Visible -> 
               DocumentationBuild`Make`Private`visible$64039]]; 
           SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
           FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
           NotebookClose[DocumentationSearch`Private`nb$]; Null], 
         "\"Go to web URL\"" :> 
         FrontEndExecute[{
           NotebookLocate[{
             URL[If[TrueQ[False], 
                 "http://reference.wolfram.com/system-modeler/", 
                 "http://reference.wolfram.com/language/"] <> 
               "DavidLizarazo/qlanth/ref/LevelMagDipoleLineStrength" <> 
               ".html"], None}]}]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"URLMenu"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "aba63d30-1baa-4c73-969f-0e94813a5c3e"]
    }], "AnchorBar",
     CacheGraphics->False,ExpressionUUID->
     "ddbe5b1a-c402-4bc1-9abb-70bce3cd96ce"]}
  }]], "AnchorBarGrid",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.65], {
      Scaled[0.34]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->1,ExpressionUUID->"aadb1a1a-8b17-4ccb-8ab4-15d5bee999ec"],

Cell["DavidLizarazo`qlanth`", "ContextNameCell",ExpressionUUID->"20930d68-5535-4266-ae03-22311cfc5754"],

Cell[CellGroupData[{

Cell[BoxData[GridBox[{
   {Cell[TextData[{
     Cell[
     "LevelMagDipoleLineStrength", "ObjectName",ExpressionUUID->
      "6929443c-85f5-42f7-945d-15bd7da7605d"],
     Cell[BoxData[
      TemplateBox[{8},
       "Spacer1"]],ExpressionUUID->"165261c8-e334-4fac-8e53-9ec853385f88"],
     Cell[BoxData[
     ""], "ObjectNameTranslation",ExpressionUUID->
      "132f7796-1a9a-4c95-899a-286d9b0dff85"]
    }],ExpressionUUID->"57467e5b-886c-49f7-be3b-18cbf78e94a1"], 
    "\[SpanFromLeft]"}
  }]], "ObjectNameGrid",ExpressionUUID->"2255f062-e700-4a46-ac3c-\
057c0681ee48"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       TemplateBox[{
         Cell[
          TextData["LevelMagDipoleLineStrength"]], 
         "paclet:DavidLizarazo/qlanth/ref/LevelMagDipoleLineStrength", 
         "DavidLizarazo Package Symbol"},
        "PackageLink",
        BaseStyle->"InlineFormula"], "[", 
       StyleBox[
        RowBox[{"eigenSys", ",", "numE"}],
        FontSlant->"Italic"], "]"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "6ca2c787-2b8b-44a3-871b-db2ca6a52bbc"],
     " \[LineSeparator]calculates the magnetic dipole line strengths for an \
ion with energies and eigenstates as provided in ",
     StyleBox["eigenSys ",
      FontSlant->"Italic"],
     "for configuration ",
     Cell[BoxData[
      SuperscriptBox["f", "numE"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "e823801f-0dd6-4ab1-ac24-ac71fd28ea2e"],
     ". The function returns a square array whose elements represent the \
magnetic dipole line strengths between the levels given in ",
     StyleBox["eigenSys",
      FontSlant->"Italic"],
     " such that the element magDipoleLineStrength[[i,j]] is the magnetic \
dipole line strength between the levels  ",
     Cell[BoxData[
      SubscriptBox["\[Psi]", "i"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "12c77483-42b9-49ee-83a2-b42aba4e7a23"],
     " and ",
     Cell[BoxData[
      SubscriptBox["\[Psi]", "j"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "fdd315cb-23ea-4673-a88a-67bd20247403"],
     "."
    }],ExpressionUUID->"f9aa18d3-e23e-4b16-b339-05cf53b40a6f"]}
  }]], "Usage",
 CellID->185635622,ExpressionUUID->"75262f7f-b254-4fad-af59-0e1a12ddcdfe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[Cell[TextData[{
   Cell[BoxData[
    DynamicBox[ToBoxes[
      If[
       MatchQ[
        CurrentValue[
         EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, 
         Closed], 
        Alternatives[Open, True]], 
       Style[
        Graphics[{
          Thickness[0.18], 
          RGBColor[0.8509803921568627, 0.396078431372549, 0], 
          Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
         PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
        0.68 Inherited], 
       Rotate[
        Style[
         Graphics[{
           Thickness[0.18], 
           RGBColor[0.8509803921568627, 0.396078431372549, 0], 
           Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
          PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
         0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
     ImageSizeCache->{
      13.600000000000001`, {-0.1685058593749993, 13.768505859375}}]],
    ExpressionUUID->"b0218f8f-027f-44a3-bbbd-78b846e0c2e3"],
   Cell[BoxData[
    TemplateBox[{1},
     "Spacer1"]],ExpressionUUID->"0e6306f3-3b26-4777-a3dd-628aea04a9ba"],
   "Details and Options"
  }], "NotesFrameText",ExpressionUUID->"037f88e9-7737-48a0-a836-9d3561f345f3"],
  Appearance->{Automatic, None, "Normal", Automatic},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->
   "Preemptive"]],ExpressionUUID->"6f563dca-25e6-4e04-b506-4525208d4db2"]], \
"NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CacheGraphics->False,
 CellID->802204989,ExpressionUUID->"46558a88-eac6-404f-bb7b-9827e995ce7d"],

Cell[TextData[{
 StyleBox["eigenSys",
  FontSlant->"Italic"],
 " must be such that it consists of a lists of lists where in each list the \
last element corresponds to the eigenvector of a level (given as a row) in \
the standard basis for levels of the ",
 Cell[BoxData[
  SuperscriptBox["f", "numE"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "7ab9c1ef-7f50-4459-a0a0-a81a75dffaca"],
 " configuration."
}], "Notes",
 CellID->1831643510,ExpressionUUID->"d9600fac-4390-4a65-9ac4-5c7550960070"],

Cell[TextData[{
 StyleBox["eigenSys",
  FontSlant->"Italic"],
 " must represent the energies and eigenvectors in the ",
 StyleBox["level description",
  FontWeight->"Bold"],
 "."
}], "Notes",
 CellID->650726085,ExpressionUUID->"d8d2c8ce-9561-4092-b451-43c2354ec230"],

Cell[TextData[{
 "Options\[LineSeparator]",
 Cell[BoxData[GridBox[{
    {Cell[
     "      ", "TableRowIcon",ExpressionUUID->
      "301ea57f-f165-41af-bc70-32a2ed2e1c2c"], "\"\<RefractiveIndex\>\"", 
     "1.0", Cell["\<\
The refractive index of the medium where the transitions are taking place. \
This may be a number or a function. If a number then the oscillator strengths \
are calculated assuming a wavelength-independent refractive index as given. \
If a function then the refractive indices are calculated accordingly to the \
vacuum wavelength of each transition (the function must admit a single \
argument equal to the wavelength in nm).\
\>", "TableText",ExpressionUUID->"178092a8-bfc4-49a4-a557-e5f3184f5ee7"]}
   }]], "3ColumnTableMod",
  GridBoxOptions->{
  GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {{None}}},
  GridBoxDividers->{"Rows" -> {{True, True}}}},ExpressionUUID->
  "f8506047-1baf-421a-bd9f-949d8b6a138d"]
}], "Notes",
 CellID->375470712,ExpressionUUID->"7e8e6d21-c418-4415-bc32-c5f864a71264"]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "PrimaryExamplesSection"}, Open], 
      Alternatives[True, Open]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{
    13.600000000000001`, {4.251494140625001, 9.348505859375}}]],
  ExpressionUUID->"de0c7cbb-b14a-49f5-bc80-87fc1475e898"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"c429ec08-ae57-4aa2-85e5-4f8e40814cb2"],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "5ad35f26-40f0-4724-b7fd-a357a08982eb"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellTags->"PrimaryExamplesSection",
 CellID->756914257,ExpressionUUID->"eea398bc-45df-496c-baa6-ca55e4294bcf"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<DavidLizarazo`qlanth`\>\"", "]"}]], "Input", \
"ExampleInitialization",
 CellLabel->"In[1]:=",
 CellID->1488468718,ExpressionUUID->"6876a64c-88da-4675-8b31-ad53058ee5a2"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"},
        Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{
    13.600000000000001`, {4.551318359375001, 9.048681640625}}]],
  ExpressionUUID->"aded0372-3843-4514-a7f9-f224e385b7b7"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"cea0fde9-651a-4ef4-bf6e-946db4c3b02d"],
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "0782cc61-97bb-4ede-908f-2326d21c4e53"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->1912276218,ExpressionUUID->"d943ff56-82a9-489a-acef-656de6143332"],

Cell[BoxData[
 RowBox[{"Magnetic", " ", "dipole", " ", "line", " ", "strengths", " ", 
  "between", " ", "the", " ", "levels", " ", "of", " ", 
  RowBox[{
   SuperscriptBox["Pr", 
    RowBox[{"3", "+"}]], "."}]}]], "ExampleText",
 CellID->890719576,ExpressionUUID->"ab99e3ce-010f-4354-b0e2-90d6f9c19d7f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"numE", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ln", "=", 
   RowBox[{"theLanthanides", "[", 
    RowBox[{"[", "numE", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"params", "=", 
   RowBox[{"LoadLaF3Parameters", "[", "ln", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"intermediateBasis", ",", "simpleStateLabels", ",", "eigensys"}], 
    "}"}], "=", 
   RowBox[{"LevelSolver", "[", 
    RowBox[{
    "numE", ",", "\[IndentingNewLine]", "params", ",", "\[IndentingNewLine]", 
     
     RowBox[{"\"\<Overwrite Hamiltonian\>\"", "->", "False"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Return as states\>\"", "->", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"basis", ",", "eigenSys", ",", "magDipoleOstrength"}], "}"}], "=", 
   RowBox[{"LevelMagDipoleOscillatorStrength", "[", 
    RowBox[{"eigensys", ",", "numE"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"HamiltonianMatrixPlot", "[", 
  RowBox[{"magDipoleOstrength", ",", 
   RowBox[{
    RowBox[{
     RowBox[{"PrettySaundersSLJ", "[", 
      RowBox[{"#", ",", 
       RowBox[{"\"\<Representation\>\"", "->", "\"\<Symbol\>\""}]}], "]"}], 
     "&"}], "/@", "basis"}], ",", 
   RowBox[{"\"\<OverlayValues\>\"", "->", "False"}]}], "]"}]}], "Input",
 CellProlog:>Needs["DavidLizarazo`qlanth`"],
 CellLabel->"In[1]:=",
 CellID->1772966535,ExpressionUUID->"f2d647cf-c22c-418b-acb6-b91fa7427b15"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztvdtTFFn77/nu2TERczn/wkTsy/kD5mIiZk/Evpi5moi9Y2Ju5ua3Y16Q
80GwEUQbT9AoyNluVI6NiPoq0B6AbgQa5NSoNAhSgocqAeUMci6kmGfqeTsn
31xZZVbWysJKvp8ojaonV65cZGV9cuXKlWv9D/814T9H/Dd/+9vfjv939N9/
/rfv/tfk5H87+V/+e/rwf8Yfj4qM//v/87/Hp/w98u/J/9N//fcUfP/v+N//
9/4AAAAMMzc319nZ+dNPP9XU1AwODn7+/PmwSwQAAGHD7u7u2NjY3bt3S0pK
Hj58+Pbt2/39/WAyXFtbGxgYqKqqSktLixA4e/bsnTt3RkdHd3Z2vqliq8Fp
JYzAkSBi6T6xjjAttnTor37z5g3tgcuXL0dHR2sUmpCQUFZW1tHR8enTJ4MZ
bm9vj4yMNDQ0ZGVlqbM6duxYdnY2Cbm2tvb06dPqRVFRUZcuXXrw4MHU1NSX
L18OpdhqQnNaAVKwwZEg3UWW7hM1cs9ZYVpsNbK+ytnZ2fb29tLSUvqr1Tsh
JSWlvLy8sbGxsLAwLi5Ovei7776rrKzs7+9fXV3V5EZSff36dXNz8w8//EAe
VouXIvfv36cyk7fVq9CR/8cff9TV1Z05c0a9lfj4ePrTqGxUQquLrSY0pxUg
i3A/EqxwkXX7RI30c1aYFltB1le5vLzc29t748aN1NRUdQ4nTpy4fv16V1fX
x48f1enpSCP/t7S0FBUVkTbVq3z//fd0AA8NDT169Ij2XmxsrLKISkjHalNT
0/j4OJ1NjPyBdP6irG7evKn5RVA5qbR0ppNbbPr18ckiZKcVIAXpB3DojwTp
LrJun6iRfs4K02Jb8VU6HA5Sn6YYdBKhndPT0zM/P++nDAp0jnj37l1bW1tx
cbGmPPz35uTk0OFN23K73UYy9MX6+vrz589v3bqVkZERISCr2JGRkYmJifRd
KBHppxX68QazH4CCpQdwCI4EKyoYVNOzbp/Qzzk3N5cMQ8ew3HMW7YdwLLZy
qrXitEJ/BUfS09Opek/5LywsGNkPfvaP0+n89ddf6QQRExPDmdPuDSZPZmtr
i7KlMxe9p4sCzjkpKUlusekyRNlLmZmZck8rdKFEP/kI77kymAyBgnIkSD+A
LT0SLK1gKNBhJnefkEmUH7WCxHMWc/z48fAqdmxsrEawEmsIdOyRqxcXF4PZ
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
J9jR0cHC1HS6Mwjqz/AzAz/rAj/bHo3choeHKZKWlmY8h42NDZbwmzdvNIuG
hoZ4HA9NpzuFL1+++Hn6G36Gnxn4WRf42fZo5EYV3cjISAouLi4az4R8Tquc
PHlyenpaCb57947vFd64cUNcZXJykuKk7ri4uCtXroizHB7Az/DzX8DPusDP
tkeUW05ODgV7e3uNZ/Lq1Su2OkFOvnz58pkzZ/hjZmbmp0+fNOkpEhsbS6uU
lJTwXN5JSUlir2n4GX5m4Gdd4GfbI8qNn0Cpqgrs0CJF5+fnq2/Sfffdd9XV
1dvb22Liixcvqh9C5E4j4jwp8DP8zMDPusDPtkeUm8PhoGB6erqJ3HZ3d6ka
7HQ6Nd051CwsLHATt9LyTGslJCRQUPMMOPwMPzPwsy7ws+0R5ba3txcbG0vx
paUlK7bItyCvXr2qDnKjimbEPPgZfmbgZ13gZ9ujK7fCwkKK9/X1WbFFypYy
r6mpUQeLi4spOD4+rg7Cz/AzAz/rAj/bHl25tbW1iQqVRW9vL2V+8+ZNdbC8
vJyCIyMj6iD8DD8z8LMu8LPt0ZWby+WieEZGhhVb5PYNjfy5xu5wONRB+Bl+
ZuBnXeBn26MrN4/Hk5ycTItWVlakb/Hdu3di+3N2djYFP3z4oA7Cz/AzAz/r
Aj/bHl9y4waHgYEB6VtcXV3lbtLKjCo7OzuxsbFRUVGaxwzhZ/iZgZ91gZ9t
jy+5dXd3R5idN/Cr8DMpL1684I9PnjxB/2cF+FkEftYFfrY9vuTGvZRTUlI0
T1673W4TMwlqGBkZocxjYmLu3Llz8+bNyMjIuLi45eVlTbLW1lZK1tbW5j83
+Bl+hp/hZ1viS24Ejw764MED/tjZ2cnzeiclJVFdd35+Ppjt9vT0xMfHR3gn
W8nNzR0eHhbT0FbElmrjfwL8DD/Dz/BzWOPHz1R5pqWPHz8++GskOnJpXl7e
qVOnuGodpKL39/c/fvy4urrqK0Fpaaluu4cGP3+Cdfwvse8seoX+bwFhysr7
Roteh/2XgX/iS27b29vHvPT19e3s7PBIdEr/t+rqavp49+5dS8sGPwPgB/jZ
9viSGzcRl5SU0PvNzc2enp6Ojg5l6eDgIC2tqKiwtGw8k3h5ebn/ZPAzOJrA
z7bHl9waGhp078253e7R0dH09HRaOjQ0ZGnZguy/YSnwMzh04Gfb40tuWVlZ
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
+HltbY3iCQkJmjkEZ2dn8/LyuC2allo9xh38LB34GX62N0fBz9y8XFRUpLsK
Sbujo4MSJCYmqgX+5s2ba77RVMWNAD9LB36Gn+3NUfAzd8/wM2UVaZlr0ZOT
k0qwqanJV8dmwul0Blo2+Fk68DP8bG+Ogp/5OZS3b//Z5W9iYiIjI0P9nIjH
40lLS6M0Y2NjSrCgoIAixcXFL/Tw/yi3LvCzdOBn+Nne2N7P8/PzFIyLi1OM
Ojc3x3Xg6elpjnDvu8jIyPX1dWXFpKQkCnZ3d8sqG/wsHfgZfrY3tvdzV1cX
BakyrA6Wl5fzk911dXVUQyYz08fm5mYlAVud+PDhg6yywc/SgZ/hZ3tjez9z
r+NHjx6pg9vb22Rm1jIRHx9P8lTfHORbirGxsZouH8EAP0sHfoaf7Y29/Ux2
5WaKqakpMfHu7q7L5ZqbmxMlfPv2be5016LHxoYZocHP0oGf4Wd7Y28/O51O
rgYHejsvNzfXT+cNXzOk+Ad+lg78DD/bG3v7meq6FMnPzw8oE6pOk9JpxWvX
rjUJPH782FzZ4GfpwM/ws72xt59LSkoo0tjYGFAm09PTXE+WO+KocT9r4Dj8
LAI/w8/2xt5+5sHzKysrA8qku7s7wvs4ocySof5sAfAz/Gxv7O3n4eFhiqSl
pQWUSW1trdglzwhfvPhaCj9LB36Gn+2Nvf28tbXFnegWFxeNZ3L+/Hlapamp
yWD6/f39zs7OzMzMY8eO0eboze+//y5Oawg/Swd+hp/tjb39TOTk5FCwt7fX
YA5utzsqKopWobq3wVXu37/PDcUXvPB7Ue/ws3TgZ/jZ3tjez42NjRSsqqoy
mMOHDx8C6kS3sbFBdeb4+Hie2ZAYGxuj1akuvbOzo04JP0sHfoaf7Y3t/exw
OCiYnp5u0RZJy1euXGloaFAiHo8nOTmZNjo7O6tOCT9LB36Gn+2N7f28t7fH
nZmXlpZCUwY+I0RHR2vuFcLP0oGf4Wd7Y3s/E4WFhRS3enoUZmdnh5ugb968
qVkEP0sHfoaf7c1R8HNbWxvFa2pqrN769vZ2fn4+bevUqVP0XrMUfpYO/Aw/
25uj4GeXy0XxjIwMSze9trbGHfPS09N121LgZ+nAz/CzvTkKflZu2K2srFi0
3eXlZaoz0ybOnTvnq+MH/Cwd+Bl+tjdHwc8Hfw3IPzBgSakWFhZ4Cq3CwkKx
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
    "], {{0, 240.}, {240., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{240., 240.},
  PlotRange->{{0, 240.}, {0, 240.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->386134924,ExpressionUUID->"fc566783-e2cb-42aa-a600-f3593bb04814"]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, 
  Closed]]]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, 
  Closed]]]],

Cell[BoxData[GridBox[{
   {
    DynamicBox[FEPrivate`ImportImage[
      FrontEnd`FileName[{"Documentation", "FooterIcons"}, 
       "RelatedFunction.png"]],
     ImageSizeCache->{50., {26.47265625, 33.52734375}}], GridBox[{
      {
       StyleBox[
        RowBox[{"See", " ", "Also"}], "SeeAlsoSection"]},
      {Cell[TextData[{
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["LevelMagDipoleOscillatorStrength"]], 
           "paclet:DavidLizarazo/qlanth/ref/LevelMagDipoleOscillatorStrength",
            "DavidLizarazo Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "aa447dda-8f18-4d0a-a4f9-e7146976e555"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["LevelSolver"]], 
           "paclet:DavidLizarazo/qlanth/ref/LevelSolver", 
           "DavidLizarazo Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",
         CellTags->"adf24c77-365d-4a7e-9424-331a9b11cc7c",ExpressionUUID->
         "5bf49908-4991-4fc0-957c-3d8644d5f2e1"]
       }], "SeeAlso",ExpressionUUID->"2f9a7d25-6d1b-421a-a3ac-037865ad06d5"]}
     }]}
  }]], "SeeAlsoSection",ExpressionUUID->"dc15e568-759d-4980-81b7-\
8a2a52342497"],

Cell[" ", "FooterCell",ExpressionUUID->"de54f5b1-acef-407f-add6-3b1008c6e204"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{900, 830},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"LevelMagDipoleLineStrength",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "", "LinkTrails" -> "", 
  "ExampleCounter" -> 1, 
  "Openers" -> {
   "PrimaryExamplesSection" -> Open, "ExampleSection" -> {"0" -> Open}, 
    "AllOptsTable" -> Closed, "NotesSection" -> Closed}, "NewStyles" -> True, 
  "CitationPopupData" -> $Failed, "ShowCitation" -> False, "HasOptions" -> 
  True, "RootCaptions" -> "", "HeaderCoreAreaLink" -> {}, 
  "Metadata" -> {
   "built" -> "{2025, 1, 28, 20, 52, 18.334457}", 
    "history" -> {"1.0.0", "", "", ""}, "context" -> "DavidLizarazo`qlanth`", 
    "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "David Lizarazo/qlanth Symbol", "language" -> "en", "paclet" -> 
    "DavidLizarazo/qlanth", "status" -> "None", "summary" -> 
    "LevelMagDipoleLineStrength[eigenSys, numE] calculates the magnetic \
dipole line strengths for an ion with energies and eigenstates as provided in \
eigenSys for configuration f^numE. The function returns a square array whose \
elements represent the magnetic dipole line strengths between the levels \
given in eigenSys such that the element magDipoleLineStrength[[i,j]] is the \
magnetic dipole line strength between the levels \\[Psi]i and \\[Psi]j.", 
    "synonyms" -> {}, "tabletags" -> {}, "title" -> 
    "LevelMagDipoleLineStrength", "titlemodifier" -> "", "metadescription" -> 
    "", "windowtitle" -> "LevelMagDipoleLineStrength", "type" -> "Symbol", 
    "uri" -> "DavidLizarazo/qlanth/ref/LevelMagDipoleLineStrength"}},
FrontEndVersion->"14.1 for Mac OS X ARM (64-bit) (July 16, 2024)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Reference.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"0e1b7a2d-2469-48c2-a773-10d7a697fdb7"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[11888, 307, 1437, 38, 34, "PrimaryExamplesSection",ExpressionUUID->"eea398bc-45df-496c-baa6-ca55e4294bcf",
   CellTags->"PrimaryExamplesSection",
   CellID->756914257]},
 "RasterizedOutput"->{
  Cell[16877, 448, 31492, 522, 261, "Output",ExpressionUUID->"fc566783-e2cb-42aa-a600-f3593bb04814",
   CellTags->"RasterizedOutput",
   CellID->386134924]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 52304, 1062},
 {"RasterizedOutput", 52504, 1066}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[594, 21, 4905, 116, 50, "AnchorBarGrid",ExpressionUUID->"aadb1a1a-8b17-4ccb-8ab4-15d5bee999ec",
 CellID->1],
Cell[5502, 139, 103, 0, 22, "ContextNameCell",ExpressionUUID->"20930d68-5535-4266-ae03-22311cfc5754"],
Cell[CellGroupData[{
Cell[5630, 143, 569, 14, 57, "ObjectNameGrid",ExpressionUUID->"2255f062-e700-4a46-ac3c-057c0681ee48"],
Cell[6202, 159, 1780, 43, 148, "Usage",ExpressionUUID->"75262f7f-b254-4fad-af59-0e1a12ddcdfe",
 CellID->185635622]
}, Open  ]],
Cell[CellGroupData[{
Cell[8019, 207, 1916, 48, 34, "NotesSection",ExpressionUUID->"46558a88-eac6-404f-bb7b-9827e995ce7d",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->802204989],
Cell[9938, 257, 520, 12, 70, "Notes",ExpressionUUID->"d9600fac-4390-4a65-9ac4-5c7550960070",
 CellID->1831643510],
Cell[10461, 271, 266, 8, 70, "Notes",ExpressionUUID->"d8d2c8ce-9561-4092-b451-43c2354ec230",
 CellID->650726085],
Cell[10730, 281, 1031, 20, 70, "Notes",ExpressionUUID->"7e8e6d21-c418-4415-bc32-c5f864a71264",
 CellID->375470712]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, Closed]]]],
Cell[CellGroupData[{
Cell[11888, 307, 1437, 38, 34, "PrimaryExamplesSection",ExpressionUUID->"eea398bc-45df-496c-baa6-ca55e4294bcf",
 CellTags->"PrimaryExamplesSection",
 CellID->756914257],
Cell[13328, 347, 212, 4, 29, "Input",ExpressionUUID->"6876a64c-88da-4675-8b31-ad53058ee5a2",
 CellID->1488468718],
Cell[CellGroupData[{
Cell[13565, 355, 1416, 37, 29, "ExampleSection",ExpressionUUID->"d943ff56-82a9-489a-acef-656de6143332",
 CellID->1912276218],
Cell[14984, 394, 304, 6, 37, "ExampleText",ExpressionUUID->"ab99e3ce-010f-4354-b0e2-90d6f9c19d7f",
 CellID->890719576],
Cell[CellGroupData[{
Cell[15313, 404, 1561, 42, 187, "Input",ExpressionUUID->"f2d647cf-c22c-418b-acb6-b91fa7427b15",
 CellID->1772966535],
Cell[16877, 448, 31492, 522, 261, "Output",ExpressionUUID->"fc566783-e2cb-42aa-a600-f3593bb04814",
 CellTags->"RasterizedOutput",
 CellID->386134924]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, Closed]]]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, Closed]]]],
Cell[48611, 979, 1538, 39, 70, "SeeAlsoSection",ExpressionUUID->"dc15e568-759d-4980-81b7-8a2a52342497"],
Cell[50152, 1020, 78, 0, 70, "FooterCell",ExpressionUUID->"de54f5b1-acef-407f-add6-3b1008c6e204"]
}
]
*)

(* End of internal cache information *)

