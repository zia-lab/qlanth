(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1102237,      21735]
NotebookOptionsPosition[   1087123,      21455]
NotebookOutlinePosition[   1087784,      21476]
CellTagsIndexPosition[   1087741,      21473]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["qLanth : A Mathematica Module for the Lanthanides", "Title",
 CellChangeTimes->{{3.866561008726151*^9, 3.866561012858223*^9}, {
  3.866561154959708*^9, 
  3.866561182398954*^9}},ExpressionUUID->"f3dab00c-756e-4b1f-9a29-\
d532363347ff"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"$Path", ",", 
    RowBox[{"NotebookDirectory", "[", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Get", "[", "\"\<qlanth.m\>\"", "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.866625158893896*^9, 3.8666251699518127`*^9}, {
  3.86662565468071*^9, 3.866625655065934*^9}, {3.867925727834807*^9, 
  3.867925730467511*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"8d8b9646-d0e9-44da-9701-014892f72aa1"],

Cell[CellGroupData[{

Cell["References", "Section",
 CellChangeTimes->{{3.8666249492106113`*^9, 
  3.8666249514623404`*^9}},ExpressionUUID->"02bfc85c-5f7c-4df2-8203-\
7f7d357f9a49"],

Cell[TextData[{
 "1. Velkov, Multi - Electron Coefficients of Fractional Parentage for the p, \
d, and f Shells . \n2. Nielson and Koster, Spectroscopic Coefficients for the \
",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["p", "n"], TraditionalForm]],ExpressionUUID->
  "ca24a347-ee98-4f6f-82aa-b3c77bf073bb"],
 ", ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["d", "n"], TraditionalForm]],ExpressionUUID->
  "ca2fe1ed-1e27-4411-beee-3bd35e92770b"],
 ", and ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["f", "n"], TraditionalForm]],ExpressionUUID->
  "6d65357e-9c16-4194-9e36-6f292d9d0804"],
 " Configurations . "
}], "Text",
 CellChangeTimes->{{3.866625687891808*^9, 3.866625712833877*^9}, {
  3.867931121911429*^9, 
  3.867931122222007*^9}},ExpressionUUID->"38c828a5-9915-4f2c-9893-\
d0919483d186"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Printers galore", "Section",
 CellChangeTimes->{{3.8666238420430098`*^9, 3.8666238513510427`*^9}, {
  3.866624894590433*^9, 
  3.866624896404488*^9}},ExpressionUUID->"b1e5c459-b6b4-4d58-9b1b-\
d3a21fdbf9ad"],

Cell[CellGroupData[{

Cell["printL", "Subsection",
 CellChangeTimes->{{3.866623867696556*^9, 
  3.866623870538671*^9}},ExpressionUUID->"a35938e8-a923-48b7-966d-\
1ace9bee8789"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "printL"}]], "Input",
 CellChangeTimes->{{3.866623873090386*^9, 3.866623874567692*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"14cd0db4-97d9-4b87-9aa7-efaa98cb75ff"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"printL[L] give the string representation of a given \
angular momentum.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"printL", "[", "qlanth`Private`L_", "]"}], ":=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"StringQ", "[", "qlanth`Private`L", "]"}], ",", 
                    "qlanth`Private`L", ",", 
                    RowBox[{"StringTake", "[", 
                    RowBox[{"specAlphabet", ",", 
                    RowBox[{"{", 
                    RowBox[{"qlanth`Private`L", "+", "1"}], "}"}]}], "]"}]}], 
                    "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"qlanth`printL\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"printL[L] give the string representation of a given \
angular momentum.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "printL[L] give the string representation of a given angular momentum.", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[DownValues, qlanth`printL, {qlanth`printL[
         Pattern[qlanth`Private`L, 
          Blank[]]] :> If[
         StringQ[qlanth`Private`L], qlanth`Private`L, 
         StringTake[qlanth`specAlphabet, {qlanth`Private`L + 1}]]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "qlanth`printL"|>, True]]], "Output",
 CellChangeTimes->{3.866623875952834*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"fbde862f-1978-4776-94f7-d440b9e039bb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"printL", "/@", 
  RowBox[{"{", 
   RowBox[{
   "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", 
    ",", "8", ",", "9", ",", "10"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.866623889732759*^9, 3.866623900858653*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"62ea71cd-c856-4630-ae21-3b1fb3500a11"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"S\"\>", ",", "\<\"P\"\>", ",", "\<\"D\"\>", ",", "\<\"F\"\>", 
   ",", "\<\"G\"\>", ",", "\<\"H\"\>", ",", "\<\"I\"\>", ",", "\<\"K\"\>", 
   ",", "\<\"L\"\>", ",", "\<\"M\"\>", ",", "\<\"N\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.866623895891758*^9, 3.866623901095379*^9}},
 CellLabel->"Out[19]=",ExpressionUUID->"28c4105e-c23c-40b0-ad5d-94319fed4a61"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["findSL and findSL\[Gamma]", "Subsection",
 CellChangeTimes->{{3.8666239179847383`*^9, 3.866623920399131*^9}, {
  3.866623951100944*^9, 
  3.866623951732114*^9}},ExpressionUUID->"758b18dc-7115-4285-88db-\
96a2b0631b92"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "findSL"}]], "Input",
 CellChangeTimes->{{3.866623913000806*^9, 3.866623915871738*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"f2cf1ce0-0562-4d8f-a15a-fcdd59e33903"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"findSL[LS] gives the spin and orbital angular \
momentum that corresponds to the provided string LS.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"findSL", "[", "qlanth`Private`SL_", "]"}], ":=", 
                    
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"StringQ", "[", "qlanth`Private`SL", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"StringTake", "[", 
                    RowBox[{"qlanth`Private`SL", ",", "1"}], "]"}], "]"}], 
                    "-", "1"}], ")"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringPosition", "[", 
                    RowBox[{"specAlphabet", ",", 
                    RowBox[{"StringTake", "[", 
                    RowBox[{"qlanth`Private`SL", ",", 
                    RowBox[{"{", "2", "}"}]}], "]"}]}], "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "-", 
                    "1"}]}], "}"}], ",", "qlanth`Private`SL"}], "]"}]}]}, {
                   " "}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"qlanth`findSL\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"findSL[LS] gives the spin and orbital angular \
momentum that corresponds to the provided string LS.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "findSL[LS] gives the spin and orbital angular momentum that corresponds \
to the provided string LS.", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[DownValues, qlanth`findSL, {qlanth`findSL[
         Pattern[qlanth`Private`SL, 
          Blank[]]] :> If[
         StringQ[qlanth`Private`SL], {(ToExpression[
             StringTake[qlanth`Private`SL, 1]] - 1)/2, Part[
            StringPosition[qlanth`specAlphabet, 
             StringTake[qlanth`Private`SL, {2}]], 1, 1] - 1}, 
         qlanth`Private`SL]}], "SubValues" -> None, "DefaultValues" -> None, 
    "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "qlanth`findSL"|>, True]]], "Output",
 CellChangeTimes->{3.866623916298284*^9, 3.866625661396974*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"1575ecfa-0767-48fd-838e-0c4afb27ce86"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"findSL", "[", "\"\<2S\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.866623928276647*^9, 3.8666239307891903`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"f6307838-ad18-40b7-a815-5c12f63c024f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", "2"], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.866623931073782*^9, 3.8666253110082827`*^9, 
  3.8666256621297073`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"9155f0b2-00c6-480c-8dc5-bfef6470cde1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "findSL\[Gamma]"}]], "Input",
 CellChangeTimes->{{3.8666239376729183`*^9, 3.866623946433473*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"bfc81ded-373a-47b0-b4ef-a9f1c0ffa414"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"findSL\[Gamma][LS] gives the spin and orbital \
angular momentum that corresponds to the provided string LS. The provided \
lists contains terms that belong to one of the f^n configurations. The last \
element of this list provides a digit that differentiates between different \
possibly degenerate terms.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    
                    RowBox[{
                    "findSL\[Gamma]", "[", "qlanth`Private`SL_", "]"}], ":=", 
                    
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"StringQ", "[", "qlanth`Private`SL", "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringLength", "[", "qlanth`Private`SL", "]"}], 
                    "\[Equal]", "2"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"StringTake", "[", 
                    RowBox[{"qlanth`Private`SL", ",", "1"}], "]"}], "]"}], 
                    "-", "1"}], ")"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringPosition", "[", 
                    RowBox[{"specAlphabet", ",", 
                    RowBox[{"StringTake", "[", 
                    RowBox[{"qlanth`Private`SL", ",", 
                    RowBox[{"{", "2", "}"}]}], "]"}]}], "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "-", 
                    "1"}], ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"StringTake", "[", 
                    RowBox[{"qlanth`Private`SL", ",", "1"}], "]"}], "]"}], 
                    "-", "1"}], ")"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringPosition", "[", 
                    RowBox[{"specAlphabet", ",", 
                    RowBox[{"StringTake", "[", 
                    RowBox[{"qlanth`Private`SL", ",", 
                    RowBox[{"{", "2", "}"}]}], "]"}]}], "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "-", 
                    "1"}], ",", 
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"StringTake", "[", 
                    RowBox[{"qlanth`Private`SL", ",", 
                    RowBox[{"{", "3", "}"}]}], "]"}], "]"}]}], "}"}]}], "]"}],
                     ",", "qlanth`Private`SL"}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"qlanth`findSL\[Gamma]\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"findSL\[Gamma][LS] gives the spin and orbital \
angular momentum that corresponds to the provided string LS. The provided \
lists contains terms that belong to one of the f^n configurations. The last \
element of this list provides a digit that differentiates between different \
possibly degenerate terms.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "findSL\[Gamma][LS] gives the spin and orbital angular momentum that \
corresponds to the provided string LS. The provided lists contains terms that \
belong to one of the f^n configurations. The last element of this list \
provides a digit that differentiates between different possibly degenerate \
terms.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, qlanth`findSL\[Gamma], {qlanth`findSL\[Gamma][
         Pattern[qlanth`Private`SL, 
          Blank[]]] :> If[
         StringQ[qlanth`Private`SL], 
         If[StringLength[qlanth`Private`SL] == 2, {(ToExpression[
              StringTake[qlanth`Private`SL, 1]] - 1)/2, Part[
             StringPosition[qlanth`specAlphabet, 
              StringTake[qlanth`Private`SL, {2}]], 1, 1] - 1, 
           0}, {(ToExpression[
              StringTake[qlanth`Private`SL, 1]] - 1)/2, Part[
             StringPosition[qlanth`specAlphabet, 
              StringTake[qlanth`Private`SL, {2}]], 1, 1] - 1, 
           ToExpression[
            StringTake[qlanth`Private`SL, {3}]]}], qlanth`Private`SL]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "qlanth`findSL\[Gamma]"|>, True]]], "Output",
 CellChangeTimes->{3.866623946681663*^9, 3.866625662998307*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"837ac2b2-32c6-43bc-a0b0-417f0a1e7fa1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"findSL\[Gamma]", "[", "\"\<4P\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.866623957719089*^9, 3.866623960375269*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"4c3d4cdf-05c9-4506-a8b6-b6199fd96a81"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["3", "2"], ",", "1", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.8666239606298923`*^9, 3.866625663966833*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"96c34e9d-c3af-4150-9599-90ed5cbe3160"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["printSLJ and printSLJM", "Subsection",
 CellChangeTimes->{{3.866624125045806*^9, 3.866624127017314*^9}, {
  3.8666242154269457`*^9, 
  3.866624216111021*^9}},ExpressionUUID->"d6cf5e8d-7b7b-4181-a77d-\
23af839fcbd3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "printSLJ"}]], "Input",
 CellChangeTimes->{{3.866624177187378*^9, 3.8666241779214363`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"08ea74e4-99b2-4f40-8c45-86019d3757c0"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Given a list with three elements {S,L,J} this \
function returns a symbol where the spin multiplicity is presented as a \
superscript, the orbital angular momentum as its corresponding spectroscopic \
letter, and J as a subscript.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"printSLJ", "[", "qlanth`Private`SLJ_", "]"}], 
                    ":=", 
                    RowBox[{"DisplayForm", "[", 
                    RowBox[{"RowBox", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"SuperscriptBox", "[", 
                    RowBox[{"\" \"", ",", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    
                    RowBox[{"qlanth`Private`SLJ", "\[LeftDoubleBracket]", "1",
                     "\[RightDoubleBracket]"}]}], "+", "1"}]}], "]"}], ",", 
                    RowBox[{"SubscriptBox", "[", 
                    RowBox[{
                    RowBox[{"printL", "[", 
                    
                    RowBox[{"qlanth`Private`SLJ", "\[LeftDoubleBracket]", "2",
                     "\[RightDoubleBracket]"}], "]"}], ",", 
                    
                    RowBox[{"qlanth`Private`SLJ", "\[LeftDoubleBracket]", "3",
                     "\[RightDoubleBracket]"}]}], "]"}]}], "}"}], "]"}], 
                    "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"qlanth`printSLJ\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Given a list with three elements {S,L,J} this \
function returns a symbol where the spin multiplicity is presented as a \
superscript, the orbital angular momentum as its corresponding spectroscopic \
letter, and J as a subscript.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "Given a list with three elements {S,L,J} this function returns a symbol \
where the spin multiplicity is presented as a superscript, the orbital \
angular momentum as its corresponding spectroscopic letter, and J as a \
subscript.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None,
     "DownValues" -> 
    Information`InformationValueForm[
     DownValues, qlanth`printSLJ, {qlanth`printSLJ[
         Pattern[qlanth`Private`SLJ, 
          Blank[]]] :> DisplayForm[
         RowBox[{
           SuperscriptBox[" ", 2 Part[qlanth`Private`SLJ, 1] + 1], 
           SubscriptBox[
            qlanth`printL[
             Part[qlanth`Private`SLJ, 2]], 
            Part[qlanth`Private`SLJ, 3]]}]]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> "qlanth`printSLJ"|>, 
   True]]], "Output",
 CellChangeTimes->{3.8666241782237988`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"26543ad7-174e-4478-9210-c67afe69e135"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"printSLJ", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"1", "/", "2"}], ",", "1", ",", "0"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8666241305249453`*^9, 3.866624149048871*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"77a77870-c763-4231-9666-575e6f1ec9bb"],

Cell[BoxData[
 TagBox[
  RowBox[{
   SuperscriptBox[" ", "2"], 
   SubscriptBox["P", "0"]}],
  DisplayForm]], "Output",
 CellChangeTimes->{{3.866624140770789*^9, 3.866624149281165*^9}},
 CellLabel->
  "Out[25]//DisplayForm=",ExpressionUUID->"7e7602f9-d262-4a3b-97c6-\
0606233da03c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "printSLJM"}]], "Input",
 CellChangeTimes->{{3.866624217553562*^9, 3.866624218827911*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"bc60f52f-1915-4504-8d13-a598187382fc"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Given a list with four elements {S,L,J,MJ} this \
function returns a symbol where the spin multiplicity is presented as a \
superscript, the orbital angular momentum as its corresponding spectroscopic \
letter, and {J, MJ} as a subscript.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"printSLJM", "[", "qlanth`Private`SLJM_", "]"}], 
                    ":=", 
                    RowBox[{"DisplayForm", "[", 
                    RowBox[{"RowBox", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"SuperscriptBox", "[", 
                    RowBox[{"\" \"", ",", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    
                    RowBox[{"qlanth`Private`SLJM", "\[LeftDoubleBracket]", 
                    "1", "\[RightDoubleBracket]"}]}], "+", "1"}]}], "]"}], 
                    ",", 
                    RowBox[{"SubscriptBox", "[", 
                    RowBox[{
                    RowBox[{"printL", "[", 
                    
                    RowBox[{"qlanth`Private`SLJM", "\[LeftDoubleBracket]", 
                    "2", "\[RightDoubleBracket]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"qlanth`Private`SLJM", "\[LeftDoubleBracket]", 
                    "3", "\[RightDoubleBracket]"}], ",", 
                    
                    RowBox[{"qlanth`Private`SLJM", "\[LeftDoubleBracket]", 
                    "4", "\[RightDoubleBracket]"}]}], "}"}]}], "]"}]}], "}"}],
                     "]"}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"qlanth`printSLJM\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Given a list with four elements {S,L,J,MJ} this \
function returns a symbol where the spin multiplicity is presented as a \
superscript, the orbital angular momentum as its corresponding spectroscopic \
letter, and {J, MJ} as a subscript.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "Given a list with four elements {S,L,J,MJ} this function returns a \
symbol where the spin multiplicity is presented as a superscript, the orbital \
angular momentum as its corresponding spectroscopic letter, and {J, MJ} as a \
subscript.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None,
     "DownValues" -> 
    Information`InformationValueForm[
     DownValues, qlanth`printSLJM, {qlanth`printSLJM[
         Pattern[qlanth`Private`SLJM, 
          Blank[]]] :> DisplayForm[
         RowBox[{
           SuperscriptBox[" ", 2 Part[qlanth`Private`SLJM, 1] + 1], 
           SubscriptBox[
            qlanth`printL[
             Part[qlanth`Private`SLJM, 2]], {
             Part[qlanth`Private`SLJM, 3], 
             Part[qlanth`Private`SLJM, 4]}]}]]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> "qlanth`printSLJM"|>,
    True]]], "Output",
 CellChangeTimes->{3.866624219057684*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"847db067-cc53-4325-a56b-75180e3e8510"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"printSLJM", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"1", "/", "2"}], ",", "3", ",", "1", ",", 
    RowBox[{"-", "1"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8666242223640842`*^9, 3.866624230220189*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"5abf072b-9698-4d0c-8ef8-01da16aaf9a0"],

Cell[BoxData[
 TagBox[
  RowBox[{
   SuperscriptBox[" ", "2"], 
   SubscriptBox["F", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", "1"}]}], "}"}]]}],
  DisplayForm]], "Output",
 CellChangeTimes->{{3.866624227018025*^9, 3.866624230519587*^9}},
 CellLabel->
  "Out[29]//DisplayForm=",ExpressionUUID->"db5ace3b-82ec-4327-9de6-\
d962c1e695de"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "fnTerms"}]], "Input",
 CellChangeTimes->{{3.866624284210775*^9, 3.866624287751445*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"01eaca09-62e7-46f6-b698-54e8c5e9dc6e"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"This list contains the labels of f^n \
configurations. Each element of the list has four elements {LS, seniority, \
RacahW, RacahU}.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"qlanth`fnTerms\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"This list contains the labels of f^n \
configurations. Each element of the list has four elements {LS, seniority, \
RacahW, RacahU}.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "This list contains the labels of f^n configurations. Each element of the \
list has four elements {LS, seniority, RacahW, RacahU}.", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "qlanth`fnTerms"|>, True]]], "Output",
 CellChangeTimes->{3.866624288066305*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"c62e2578-f094-409c-b844-07a283d6ccc7"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["NKLSterms & findNKLSterm", "Subsection",
 CellChangeTimes->{
  3.86662455129353*^9, {3.866624602375587*^9, 
   3.866624603039682*^9}},ExpressionUUID->"6458ae67-262a-4243-9b1f-\
1eb53a85417d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "NKLSterms"}]], "Input",
 CellChangeTimes->{{3.86662454056108*^9, 3.866624541534093*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"ef2a2554-8a78-48ea-ba74-ea102d6edec5"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"NKLSterms[n, L, S] give all the terms that \
correspond to the given number of electrons n, with total orbital angular \
momentum L, and total spin angular momentum S.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"NKLSterms", "[", 
                    
                    RowBox[{
                    "qlanth`Private`n_", ",", "qlanth`Private`L_", ",", 
                    "qlanth`Private`S_"}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"qlanth`Private`NKterms", ",", 
                    "qlanth`Private`SL"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"qlanth`Private`SL", "=", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{
                    RowBox[{"2", " ", "qlanth`Private`S"}], "+", "1"}], "]"}],
                     "<>", 
                    RowBox[{"printL", "[", "qlanth`Private`L", "]"}]}]}], ";", 
                    RowBox[{"qlanth`Private`NKterms", "=", 
                    RowBox[{"{", 
                    RowBox[{"{", "}"}], "}"}]}], ";", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"StringFreeQ", "[", 
                    RowBox[{
                    RowBox[{"First", "[", "#1", "]"}], ",", 
                    "qlanth`Private`SL"}], "]"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToExpression", "[", 
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "]"}], "\[LessEqual]", 
                    "qlanth`Private`n"}], ",", 
                    RowBox[{"qlanth`Private`NKterms", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{"qlanth`Private`NKterms", ",", 
                    RowBox[{"{", "#1", "}"}], ",", "1"}], "]"}]}]}], "]"}]}], 
                    "]"}], "&"}], ")"}], "/@", "qlanth`Private`fNterms"}], 
                    ";", 
                    RowBox[{"qlanth`Private`NKterms", "=", 
                    RowBox[{"DeleteCases", "[", 
                    RowBox[{"qlanth`Private`NKterms", ",", 
                    RowBox[{"{", "}"}]}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "qlanth`Private`NKterms", "]"}], 
                    "\[Equal]", "1"}], ",", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"qlanth`Private`NKterms", "\[LeftDoubleBracket]", 
                    "1", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
                    "1", "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"StringTake", "[", 
                    RowBox[{
                    
                    RowBox[{"qlanth`Private`NKterms", "\[LeftDoubleBracket]", 
                    
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    "2"}], "]"}]}]}], "]"}], ";", 
                    "qlanth`Private`NKterms"}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"qlanth`NKLSterms\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"NKLSterms[n, L, S] give all the terms that \
correspond to the given number of electrons n, with total orbital angular \
momentum L, and total spin angular momentum S.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "NKLSterms[n, L, S] give all the terms that correspond to the given \
number of electrons n, with total orbital angular momentum L, and total spin \
angular momentum S.", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, qlanth`NKLSterms, {qlanth`NKLSterms[
         Pattern[qlanth`Private`n, 
          Blank[]], 
         Pattern[qlanth`Private`L, 
          Blank[]], 
         Pattern[qlanth`Private`S, 
          Blank[]]] :> 
       Module[{qlanth`Private`NKterms, qlanth`Private`SL}, 
         qlanth`Private`SL = 
          ToString[2 qlanth`Private`S + 1] <> qlanth`printL[qlanth`Private`L]; 
         qlanth`Private`NKterms = {{}}; Map[If[
            Not[
             StringFreeQ[
              First[#], qlanth`Private`SL]], 
            If[ToExpression[
               Part[#, 2]] <= qlanth`Private`n, qlanth`Private`NKterms = 
             Join[qlanth`Private`NKterms, {#}, 1]]]& , 
           qlanth`Private`fNterms]; 
         qlanth`Private`NKterms = DeleteCases[qlanth`Private`NKterms, {}]; 
         If[Length[qlanth`Private`NKterms] == 1, Part[
             Part[qlanth`Private`NKterms, 1], 1] = StringTake[
             Part[qlanth`Private`NKterms, 1, 1], 2]]; 
         qlanth`Private`NKterms]}], "SubValues" -> None, "DefaultValues" -> 
    None, "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "qlanth`NKLSterms"|>, True]]], "Output",\

 CellChangeTimes->{{3.8666245418051043`*^9, 3.866624554383422*^9}},
 CellLabel->"Out[38]=",ExpressionUUID->"c9bdaf00-3632-405f-8896-b07f230ed3d2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NKLSterms", "[", 
  RowBox[{"3", ",", "3", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.8666245588618927`*^9, 3.866624590606052*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"b5386314-beb7-484d-873e-d12886a6b980"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\<\"3F\"\>", ",", "\<\"2\"\>", ",", "\<\"110\"\>", 
    ",", "\<\"10\"\>"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.8666245615474367`*^9, 3.866624590869855*^9}},
 CellLabel->"Out[44]=",ExpressionUUID->"b9632145-d018-47fa-9981-e8e69163db72"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "findNKLSterm"}]], "Input",
 CellChangeTimes->{{3.8666245987886667`*^9, 3.866624600390977*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"d7eedc1a-bfbb-4f6b-af2b-b3e394d31221"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"findNKLSterm[SL] for a given string SL that only \
represent the LS part of a spectroscopic term, this function returns all the \
terms that are compatible with it. This is only for f^n configurations.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"findNKLSterm", "[", "qlanth`Private`SL_", "]"}], 
                    ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"qlanth`Private`NKterms", ",", 
                    "qlanth`Private`n"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"qlanth`Private`n", "=", "7"}], ";", 
                    RowBox[{"qlanth`Private`NKterms", "=", 
                    RowBox[{"{", 
                    RowBox[{"{", "}"}], "}"}]}], ";", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"StringFreeQ", "[", 
                    RowBox[{
                    RowBox[{"First", "[", "#1", "]"}], ",", 
                    "qlanth`Private`SL"}], "]"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToExpression", "[", 
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "]"}], "\[LessEqual]", 
                    "qlanth`Private`n"}], ",", 
                    RowBox[{"qlanth`Private`NKterms", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{"qlanth`Private`NKterms", ",", 
                    RowBox[{"{", "#1", "}"}], ",", "1"}], "]"}]}]}], "]"}]}], 
                    "]"}], "&"}], ")"}], "/@", "qlanth`Private`fNterms"}], 
                    ";", 
                    RowBox[{"qlanth`Private`NKterms", "=", 
                    RowBox[{"DeleteCases", "[", 
                    RowBox[{"qlanth`Private`NKterms", ",", 
                    RowBox[{"{", "}"}]}], "]"}]}], ";", 
                    "qlanth`Private`NKterms"}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"qlanth`findNKLSterm\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"findNKLSterm[SL] for a given string SL that only \
represent the LS part of a spectroscopic term, this function returns all the \
terms that are compatible with it. This is only for f^n configurations.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "findNKLSterm[SL] for a given string SL that only represent the LS part \
of a spectroscopic term, this function returns all the terms that are \
compatible with it. This is only for f^n configurations.", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, qlanth`findNKLSterm, {qlanth`findNKLSterm[
         Pattern[qlanth`Private`SL, 
          Blank[]]] :> 
       Module[{qlanth`Private`NKterms, qlanth`Private`n}, 
         qlanth`Private`n = 7; qlanth`Private`NKterms = {{}}; Map[If[
            Not[
             StringFreeQ[
              First[#], qlanth`Private`SL]], 
            If[ToExpression[
               Part[#, 2]] <= qlanth`Private`n, qlanth`Private`NKterms = 
             Join[qlanth`Private`NKterms, {#}, 1]]]& , 
           qlanth`Private`fNterms]; 
         qlanth`Private`NKterms = DeleteCases[qlanth`Private`NKterms, {}]; 
         qlanth`Private`NKterms]}], "SubValues" -> None, "DefaultValues" -> 
    None, "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "qlanth`findNKLSterm"|>, 
   True]]], "Output",
 CellChangeTimes->{3.8666246006814938`*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"b49ec814-1e5e-4acc-863c-3465b75f863a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"findNKLSterm", "[", "\"\<3D\>\"", "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.8666246090934143`*^9, 3.866624640736643*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"73548385-db81-4891-a049-c093d5474cb3"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"3D1\"\>", "\<\"4\"\>", "\<\"211\"\>", "\<\"20\"\>"},
    {"\<\"3D2\"\>", "\<\"4\"\>", "\<\"211\"\>", "\<\"21\"\>"},
    {"\<\"3D3\"\>", "\<\"6\"\>", "\<\"221\"\>", "\<\"20\"\>"},
    {"\<\"3D4\"\>", "\<\"6\"\>", "\<\"221\"\>", "\<\"21\"\>"},
    {"\<\"3D5\"\>", "\<\"6\"\>", "\<\"221\"\>", "\<\"31\"\>"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.866624620166181*^9, 3.8666246409303503`*^9}},
 CellLabel->
  "Out[49]//TableForm=",ExpressionUUID->"14bfe215-4e25-4006-96e9-\
5678a5f51485"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["AA", "Subsection",
 CellChangeTimes->{{3.866624860897107*^9, 
  3.866624863529917*^9}},ExpressionUUID->"b1c26abc-1689-4ecb-82fb-\
87c8c31699f6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "AA"}]], "Input",
 CellChangeTimes->{{3.866624866530889*^9, 3.8666248675480213`*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"8729518a-7473-46b7-a6a1-e2a370a23cd6"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Given a list with the parts corresponding to the \
quasi-rational representation of a number, this function parses the result \
into a regular number.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"AA", "[", "qlanth`Private`quasinum_", "]"}], 
                    ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"qlanth`Private`radical", "=", 
                    RowBox[{
                    UnderoverscriptBox["\[Product]", 
                    RowBox[{"qlanth`Private`nn", "=", "2"}], 
                    RowBox[{"Length", "[", "qlanth`Private`quasinum", "]"}]], 
                    
                    SuperscriptBox[
                    RowBox[{"Prime", "[", 
                    RowBox[{"qlanth`Private`nn", "-", "1"}], "]"}], 
                    
                    RowBox[{"qlanth`Private`quasinum", "\[LeftDoubleBracket]",
                     "qlanth`Private`nn", "\[RightDoubleBracket]"}]]}]}], ";", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"qlanth`Private`quasinum", "\[LeftDoubleBracket]",
                     "1", "\[RightDoubleBracket]"}], " ", 
                    SqrtBox["qlanth`Private`radical"]}], "/.", 
                    "\[VeryThinSpace]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"qlanth`Private`A", "\[Rule]", "10"}], ",", 
                    RowBox[{"qlanth`Private`B", "\[Rule]", "11"}], ",", 
                    RowBox[{"C", "\[Rule]", "12"}], ",", 
                    RowBox[{"D", "\[Rule]", "13"}]}], "}"}]}]}], ")"}]}]}, {
                   " "}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"qlanth`AA\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Given a list with the parts corresponding to the \
quasi-rational representation of a number, this function parses the result \
into a regular number.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "Given a list with the parts corresponding to the quasi-rational \
representation of a number, this function parses the result into a regular \
number.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[DownValues, qlanth`AA, {qlanth`AA[
         Pattern[qlanth`Private`quasinum, 
          Blank[]]] :> (
        qlanth`Private`radical = 
         Product[Prime[qlanth`Private`nn - 1]^
           Part[qlanth`Private`quasinum, qlanth`Private`nn], {
           qlanth`Private`nn, 2, 
            Length[qlanth`Private`quasinum]}]; 
        ReplaceAll[
         Part[qlanth`Private`quasinum, 1] Sqrt[qlanth`Private`radical], {
          qlanth`Private`A -> 10, qlanth`Private`B -> 11, C -> 12, D -> 
           13}])}], "SubValues" -> None, "DefaultValues" -> None, "NValues" -> 
    None, "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, 
    "FullName" -> "qlanth`AA"|>, True]]], "Output",
 CellChangeTimes->{3.866624867838049*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"d1020201-5479-4d39-95e2-1eccf39b8652"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AA", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "1"}], ",", "2", ",", "2", ",", "2"}], "}"}], "]"}]], "Input",\

 CellChangeTimes->{{3.86662487464817*^9, 3.866624887540752*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"dc031124-f659-4bfe-9813-693e8af9dce0"],

Cell[BoxData[
 RowBox[{"-", "30"}]], "Output",
 CellChangeTimes->{{3.866624884711426*^9, 3.8666248877577457`*^9}},
 CellLabel->"Out[52]=",ExpressionUUID->"d42b84aa-06fa-40a4-a2b2-2247392df2de"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["1-Body Coefficients of Fractional Parentage", "Section",
 CellChangeTimes->{{3.866541861012272*^9, 3.8665418670444717`*^9}, {
  3.866542828429083*^9, 
  3.866542829466566*^9}},ExpressionUUID->"596bfaf1-919e-4fcc-9ba9-\
5576b5486cf6"],

Cell[CellGroupData[{

Cell["CFPterms", "Subsection",
 CellChangeTimes->{
  3.86654230589126*^9},ExpressionUUID->"1afeb280-b7db-4f7b-b0c7-1ccaac0f8662"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "CFPterms"}]], "Input",
 CellChangeTimes->{{3.866542237579227*^9, 3.866542241066489*^9}, {
   3.866542296294137*^9, 3.866542297629156*^9}, {3.866542897606696*^9, 
   3.8665428993177032`*^9}, 3.8679257537990847`*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"70994d3d-4996-41e0-9480-768389897beb"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"CFPterms[n] gives all the daughter and parent \
terms, together with the corresponding coefficients of fractional parentage, \
that correspond to the the f^n configuration. \\nCFPterms[n, SL] gives all \
the daughter and parent terms, together with the corresponding coefficients \
of fractional parentage, that are compatible with the given string SL in the \
f^n configuration \\nCFPterms[n, L, S] gives all the daughter and parent \
terms, together with the corresponding coefficients of fractional parentage, \
that correspond to the given total orbital angular momentum L and total spin \
S n the f^n configuration. L being an integer, and S being integer or \
half-integer.\\nIn all cases the output is in the shape of a list with \
enclosed lists having the format {daughter_term, {parent_term_1, CFP_1}, \
{parent_term_2, CFP_2}, ...}.\\nOnly the one-body coefficients for \
f-electrons are provided.\\nIn all cases it must be that 1 <= n <= 7.\\nData \
for these was parsed from Velkov, \\\"Multi-electron coefficients of \
fractional parentage for the p, d, and f shells\\\".\\n\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"CFPterms", "[", "qlanth`Private`n_", "]"}], ":=", 
                    
                    RowBox[{
                    "qlanth`Private`CFPtable", "\[LeftDoubleBracket]", 
                    "qlanth`Private`n", "\[RightDoubleBracket]"}]}]}, {" "}, {
                   
                    RowBox[{
                    RowBox[{"CFPterms", "[", 
                    RowBox[{"qlanth`Private`n_", ",", "qlanth`Private`SL_"}], 
                    "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"qlanth`Private`NKterms", ",", 
                    "qlanth`Private`CFPconfig"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"qlanth`Private`NKterms", "=", 
                    RowBox[{"{", 
                    RowBox[{"{", "}"}], "}"}]}], ";", 
                    RowBox[{"qlanth`Private`CFPconfig", "=", 
                    
                    RowBox[{"qlanth`Private`CFPtable", "\[LeftDoubleBracket]",
                     "qlanth`Private`n", "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"StringFreeQ", "[", 
                    RowBox[{
                    RowBox[{"First", "[", "#1", "]"}], ",", 
                    "qlanth`Private`SL"}], "]"}], ",", "Null", ",", 
                    RowBox[{"qlanth`Private`NKterms", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{"qlanth`Private`NKterms", ",", 
                    RowBox[{"{", "#1", "}"}], ",", "1"}], "]"}]}]}], "]"}], 
                    "&"}], ")"}], "/@", "qlanth`Private`CFPconfig"}], ";", 
                    RowBox[{"qlanth`Private`NKterms", "=", 
                    RowBox[{"DeleteCases", "[", 
                    RowBox[{"qlanth`Private`NKterms", ",", 
                    RowBox[{"{", "}"}]}], "]"}]}]}]}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"CFPterms", "[", 
                    
                    RowBox[{
                    "qlanth`Private`n_", ",", "qlanth`Private`L_", ",", 
                    "qlanth`Private`S_"}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"qlanth`Private`NKterms", ",", 
                    "qlanth`Private`SL", ",", "qlanth`Private`CFPconfig"}], 
                    "}"}], ",", 
                    RowBox[{
                    RowBox[{"qlanth`Private`SL", "=", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{
                    RowBox[{"2", " ", "qlanth`Private`S"}], "+", "1"}], "]"}],
                     "<>", 
                    RowBox[{"printL", "[", "qlanth`Private`L", "]"}]}]}], ";", 
                    RowBox[{"qlanth`Private`NKterms", "=", 
                    RowBox[{"{", 
                    RowBox[{"{", "}"}], "}"}]}], ";", 
                    RowBox[{"qlanth`Private`CFPconfig", "=", 
                    
                    RowBox[{"qlanth`Private`CFPtable", "\[LeftDoubleBracket]",
                     "qlanth`Private`n", "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"StringFreeQ", "[", 
                    RowBox[{
                    RowBox[{"First", "[", "#1", "]"}], ",", 
                    "qlanth`Private`SL"}], "]"}], ",", "Null", ",", 
                    RowBox[{"qlanth`Private`NKterms", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{"qlanth`Private`NKterms", ",", 
                    RowBox[{"{", "#1", "}"}], ",", "1"}], "]"}]}]}], "]"}], 
                    "&"}], ")"}], "/@", "qlanth`Private`CFPconfig"}], ";", 
                    RowBox[{"qlanth`Private`NKterms", "=", 
                    RowBox[{"DeleteCases", "[", 
                    RowBox[{"qlanth`Private`NKterms", ",", 
                    RowBox[{"{", "}"}]}], "]"}]}]}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"qlanth`CFPterms\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"CFPterms[n] gives all the daughter and parent \
terms, together with the corresponding coefficients of fractional parentage, \
that correspond to the the f^n configuration. \\nCFPterms[n, SL] gives all \
the daughter and parent terms, together with the corresponding coefficients \
of fractional parentage, that are compatible with the given string SL in the \
f^n configuration \\nCFPterms[n, L, S] gives all the daughter and parent \
terms, together with the corresponding coefficients of fractional parentage, \
that correspond to the given total orbital angular momentum L and total spin \
S n the f^n configuration. L being an integer, and S being integer or \
half-integer.\\nIn all cases the output is in the shape of a list with \
enclosed lists having the format {daughter_term, {parent_term_1, CFP_1}, \
{parent_term_2, CFP_2}, ...}.\\nOnly the one-body coefficients for \
f-electrons are provided.\\nIn all cases it must be that 1 <= n <= 7.\\nData \
for these was parsed from Velkov, \\\"Multi-electron coefficients of \
fractional parentage for the p, d, and f shells\\\".\\n\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "CFPterms[n] gives all the daughter and parent terms, together with the \
corresponding coefficients of fractional parentage, that correspond to the \
the f^n configuration. \nCFPterms[n, SL] gives all the daughter and parent \
terms, together with the corresponding coefficients of fractional parentage, \
that are compatible with the given string SL in the f^n configuration \n\
CFPterms[n, L, S] gives all the daughter and parent terms, together with the \
corresponding coefficients of fractional parentage, that correspond to the \
given total orbital angular momentum L and total spin S n the f^n \
configuration. L being an integer, and S being integer or half-integer.\nIn \
all cases the output is in the shape of a list with enclosed lists having the \
format {daughter_term, {parent_term_1, CFP_1}, {parent_term_2, CFP_2}, ...}.\n\
Only the one-body coefficients for f-electrons are provided.\nIn all cases it \
must be that 1 <= n <= 7.\nData for these was parsed from Velkov, \
\"Multi-electron coefficients of fractional parentage for the p, d, and f \
shells\".\n", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
    None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, qlanth`CFPterms, {qlanth`CFPterms[
         Pattern[qlanth`Private`n, 
          Blank[]]] :> Part[qlanth`Private`CFPtable, qlanth`Private`n], 
       qlanth`CFPterms[
         Pattern[qlanth`Private`n, 
          Blank[]], 
         Pattern[qlanth`Private`SL, 
          Blank[]]] :> 
       Module[{qlanth`Private`NKterms, qlanth`Private`CFPconfig}, 
         qlanth`Private`NKterms = {{}}; 
         qlanth`Private`CFPconfig = 
          Part[qlanth`Private`CFPtable, qlanth`Private`n]; Map[If[
            StringFreeQ[
             First[#], qlanth`Private`SL], Null, qlanth`Private`NKterms = 
            Join[qlanth`Private`NKterms, {#}, 1]]& , 
           qlanth`Private`CFPconfig]; 
         qlanth`Private`NKterms = DeleteCases[qlanth`Private`NKterms, {}]], 
       qlanth`CFPterms[
         Pattern[qlanth`Private`n, 
          Blank[]], 
         Pattern[qlanth`Private`L, 
          Blank[]], 
         Pattern[qlanth`Private`S, 
          Blank[]]] :> 
       Module[{qlanth`Private`NKterms, qlanth`Private`SL, 
          qlanth`Private`CFPconfig}, 
         qlanth`Private`SL = 
          ToString[2 qlanth`Private`S + 1] <> qlanth`printL[qlanth`Private`L]; 
         qlanth`Private`NKterms = {{}}; 
         qlanth`Private`CFPconfig = 
          Part[qlanth`Private`CFPtable, qlanth`Private`n]; Map[If[
            StringFreeQ[
             First[#], qlanth`Private`SL], Null, qlanth`Private`NKterms = 
            Join[qlanth`Private`NKterms, {#}, 1]]& , 
           qlanth`Private`CFPconfig]; 
         qlanth`Private`NKterms = DeleteCases[qlanth`Private`NKterms, {}]]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "qlanth`CFPterms"|>, False]]], "Output",
 CellChangeTimes->{
  3.866542241303317*^9, 3.866542297862979*^9, {3.8665423741768713`*^9, 
   3.866542384244082*^9}, 3.866542554674469*^9, {3.866542897698287*^9, 
   3.8665428995585546`*^9}, 3.86654294553034*^9, 3.866542991202795*^9, 
   3.86654348008132*^9, 3.8666256664575443`*^9, 3.867925754383731*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"faf66ec9-582f-464f-9f89-dd1e5ca499f5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3Xd8jef/P/BThIggVswoMWNvVXvX3irUFrsoYlZpPkZttUoRMYqiNaqI
GXsHUZtQiRmJSGLWJ+f7+p33L9fjct8HMaqpz+v5x3mcnHOf677ua+XxeF/X
fd05O/Vt2jWRxWIZ4IiXph0HV+3fv+PQZi74o0WfAT269fHqUqfPQK9uXv0/
6ZQYH57AS0wyi+X/vbcSERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERHR/7z//ve/sXH0z589e4ZX+RDHqM/VYeaf
/CMk//Je8iz0nOuvf/31l+GYf9aL8iC5NXyLP1X+/2ujasF8XXppvFZ+7JL0
JU29PF+XnoLelt4gKXqHnj59qt7rNWtoRaypv4kqf0O3kvJX35oH5A+MjDPq
AuV68ar/P9LfGP43qeOlxAz/Bdh6iYiIiIiIiOgDZo6cxDOy94/HTPTItjBH
hwyf6F+9p1y+hfhkUkX7/6Y8SAGqJvHGkzvmX/0rquB/gd4j9ErhLMx7oDqv
obTVwKXPi33w7M44G0hRPHny5OrVq9OmTWvSpEmWLFmyZ8+eLVu2kiVL+vr6
7tu3733ll4iIiIiIiIjon6FiSnpwSX9vDrMY3v+DET/DGnLJuT4lYV7Yqb7V
18C/p+zGm14F1ucL2W5FGAKA1r/nogxzB29Q74YV+292cwH9Hey2N0Mr+uDX
jf9TzLOTVm29Ogo8od1w9PdRQ4R5qDGPgSiWY8eO1apVK3369MWLF8ebatWq
ValSJUuWLGnSpClcuLC/v7/1f2xahIiIiIiIiIj+Z5kXt6tP9K8STnBJz8mL
QjeG3Or5T8jRHkO2X3J1eh39fUv331WhmedWEk5zImH33grz4EB/B8PspPX5
mbsPvvDtXqB5DLfaiiU4OLhu3brp06cfOnRoUFDQXZtbt26tXr3axcUlSZIk
BQoU2Lx5szVhD/VERERERERERG/GvEjS7hLxhBxQshv2edElqKCQec7iXyE+
K9715b7v6ryqnagNsd9mQ56E3Jz+l6HZSM0a7nxhfb035htwrPGe5vtgGDZS
e9FdY9HR0YsWLUqdOrWLi8uXX36JoUntGxYREdG/f/9EiRJJeH///v0ffKER
ERERERER0f8sFTxRbwzP0jV8a/jVP8icJcPqYrsPpRX61vF/e0Zfh34V4kUx
LnPcVa3s1X/yNuxmT58xebMEJXtPnz5NaIX/v8lcC/G8C4beCekahsC+oZdZ
/wfmWeITgVdPRb9z587QoUOTJElisViqVKmi39SAN5cuXUqZMiW+SpEixbx5
8z7sciMiIiIiIiKi/02GTbbxGhMTc+3atT///PPGjRuXLl06cuTIrl27du/e
vX37dnz45MkTw/HWfzTcZw5/QURExK1bt0JCQkJDQ69fv75nz56AOOfOnbOa
5iwSFLUjB17Dw8NxFUFBQcg5qkAuBG8uXLjw+PFj/Vf4Exe7b9++yMjIt8+D
3ai+XlyywPsNlsLqyXKz/QRF6hftB93/5s2bBw8eRMdHr5fuv3//fnR/uWsj
AfaaD4P+6JPTp0+PGzeuZMmSFStWXLZsmfRrw/OsP0ixtttG7t69i3Z45syZ
XTYy9J08eVKNbzjs/v3706dPT5o0aapUqTp06KDPG+L/FH7i4uJisVicnJxm
zpz5z10QEREREREREdHfLjZuuX5AQECfPn369u3bq1evzz//PGfOnB999JHF
YkmSJMnAgQNjYmLM26QnkFifWs+5detWZBWX8OWXX+IqnJycEiVKhEvAa8+e
PR89emR9wcMr/3ES13r69OmFCxf27Nkzc+bMHj16lClTxtHR0WKDukiZMmXj
xo1Xrlx55cqV6OhoXAiO379/Py45S5Ysu3btssYVxenTp5u9puY2+vsWNpMn
T46Nu3cDZ+zXr5867LW0adNm3bp1mzdvDgsLSyDNhqy2uaFr164dOnRo9uzZ
6P7dunXLkSOHtDfpO66urr179z569KhhUoneCX1lPkaAAwcONGnSJEOGDDJq
ubu7YzS7e/euNcEMtn+TJ0+ehIaGopmhHWLoq1y5MkZv+QcEZcuWnTt3LsY9
HGa1lRXKZNOmTVu2bMGHVm3WAwPjt99+i58kTpw4V65cV69e5Z48RERERERE
RPT+SUTCvLGMBDGuX7++ZMkSb2/vhQsXWt9oPae+fbqYMmWKCiOrV4nvDRo0
6N69e9aEFF/SQ/QqVyNHjkyRIkXixIlVztWFdO/e/enTp/9QZu3QF0JLVP/K
lSs///xzo0aNsmXL5uTkZInj6OiYwgYfJk+ePG3atJ6enqtWrUIb2LdvX/Xq
1eVgvLfGNZiAgACZlDFXqCoZ+VPKSujvBU7XtGlTq7YDT968eQ3pSFLqQ/1E
BiVLlixWrNgXX3yBywwJCZFr1yvlRXsB0duT9qY/jgGvjx492rBhQ8+ePTNn
zpwqVSpUHBqbi4tLkSJFChYsWLx48ezZsyeyqVu37tGjR+3evEM6ac+GrXWs
9tq2/KmPA7dv38YIpvq+9KP06dOvX7/+nT9H45+i34CgNiMKDw8/dOhQnz59
8uTJI5fv7Ozs7u6OkTBp0qRofhiaMmbM+OWXX0ok32orZxSdNEj9v+TVq1cx
ziAFNGMfHx/eb0JERERERERE/yDz9sv37t3btGmTt7d3kSJFEiVK1LJly5iY
mDdOXw8W+fn5eXh45MuXL3369HrkFgYPHpzQYvtCz8/Tp0/nzZtXunRpXEK6
dOn0mHPixIkTWmzfqoW1Hz58ePDgwc6dO7u6uqoAe5IkSTJmzJg/f/4GDRp0
6tSpQ4cOOKBmzZru7u7JkyfHNY4cObJKlSoSCkNlybp9gdRy5syZI0eOjz/+
GK+pUqUyR/hTpEiRK1eu7Nmz40h3m8yZM+OkqsTwJmnSpC1atIiOjpZk0RqR
gRw2+G2mTJnkSNVU5Oc4KdLMnTu35AF1oR+TMmXKwoULd+vWLTg4WGXYEPlM
aM3sg/TXX3+tXbtWhhGpHTS2Nm3aoLPv27fvxIkT/v7+n3/+OdqJfNujR4+Q
kBDDUy3ITN3nIn/euHFj5syZs2fP3rlzp9UU8Jc3stXVyZMn0TWkO8vEnLxp
0qRJwtxG7G2oy4mMjFy8eHGdOnVSp04tYwgGja5du2Iw/+qrr+QWBhm48O9p
2bJlaiJbykR/NvqDBw/wX8zBwcHZ2Xn06NFRUVEfwGwIEREREREREf0bSVAi
IiLi5s2boTZHjhxZuXLlkCFDypcvnyZNGgn+eHp6vtleGfoTTuX18uXLa9as
WbZsWbdu3SQ2roIqCTO2b3hIK5w9e/b333/HVXh5eanlr1JQCS22ryJUf/31
1969e1u0aOHs7CwZdnBwcHFxKV269PDhw3E5t27dkh17cPC1a9cWL17cqFEj
V1dXw8p5JGKNazbh4eEbbTZt2uTn5/fZZ599FEeOd3R0rFKlyoYNGzZv3ixH
4s2iRYtQ9dWrV1fzC0i/ePHiMmsg5Yz3m2yQsT59+qg862v1169fvzEODkOy
aKWqOiTPadOm7dmzJy4n9vnHB3Pp/t9NCjw6Otrf39/Dw0PVXcGCBdeuXRsV
FaXGhGnTpmXKlEm1MTc3N7Qx85ZWrC+dXhrqJhqUYdKkSdG5VK/XA9TqVwcO
HJB5VR1qp2zZsjJ2fQBFre+NL3+iHVauXFm1wwwZMnz99dchISF3797FEKFG
Ldkkqn///tbnR/47d+4sXbp0wYIFAwcOzJcvX+bMmVFc33//vXpOQazpAeVE
RERERERERO9BbGysr69vB5tOnTo1aNCgSJEiKqovQY9WrVrJNvJvQF/xqEeN
Nm3aVKZMGbXhtiVB7sljNyCssnfhwoVMmTKpgDPeJLTYvnjy5Mn+/ftbtmyp
Fszjjbu7Owr8zJkzdn+CC799+/aQIUNk/kXF4fU9eaxaUfz5559dunQxBAwd
HR3Rcgwhr8ePHwcHB2/cuLFz584ff/yxpJwnT54VK1ZYte2b1PHz5s2TpbZ6
NvDmr7/+0u80iYmJCQoKWrRokdwLoJb6Z82adeHChXqGE07r+rA9e/YsMDCw
QIECstuJxbb50g8//KAOkIpwdXU17La0efNmdCK7e8uQULtsqU8CAgLkFhh0
Q6u9fXVUAV69ehXDFCpFxl6pGicnpzlz5qjZvQ+DupywsDCMdfinJqM0LrlN
mzanTp2y2ua1e/funSxZMjUhiDIcMWKEYYc6jJPNmzdv2LAh/j8WLVo0Q4YM
aMnHjx//x66NiIiIiIiIiMjmv//9b6dOnSwv2MBcPmzVqpU52vZaDAtNYevW
rZ988ol+Lm9v74QZ29djyHrQ7PLly7KZgyq6hBbbj7U9mjYwMLBJkyaJbSxx
T8+cNWuWPD1TqsMaF/dWf1ptC/gbNGig75Av6/aFPmtz9erVrl27Wp7fkyd5
8uRt2rR59uyZeft0lNLhw4c7d+4sRyI/q1evNgck8cn8+fNlk3ZDm1R7XOs7
SkVHRzdv3tyi3WuQJEmSChUqHDhwQA/vf3h7jyQo0gXu378/btw4vfG4urqq
ilDdRGL7lrgNmvBm06ZNjO2/nGFdOsydO1e21sFgbtX6spqOVEc+fvx4x44d
JUqUUH0Kv2rRogU6+z9xKX8LwxTh7t27MQjoc45TpkxRrdTPz69AgQIysOAr
lMyKFSsMKeBPlE9YWNj169eDgoImTpyIn+D/F1r4gwcPrB/EQwqIiIiIiIiI
6N8oNjZ21KhRJUqUKFmyJF5r1qxZtGhRFQaRGGnLli3fbE8eQ8RDD9Bt2bJF
xfZlLeXAgQMTZmzf7lpWCWhnzJhR3eCQMGP7oaGhPXv21Le1SZYs2bBhw27f
vm3VJi/shlLx7ezZs93d3dVvJbZv3uIGReHl5WWYGEqaNKmnp6f5Sc0Sln/w
4MG6devc3NxwZK5cuX799VfDamT5c+HChSrzarEx3svm4YaUnzx54uPjo+cB
B6dNm3batGnmy0w4zeyDoZdwWFhYgwYNpApEnjx59AOkFRUrVkxft58uXbrd
u3dzT55X0rsJilGmtBwcHLp06fKiaRH1dOPw8PBNmzb16tUrR44cBQsWHDdu
XGBgoDrygylqKRkU1Jw5czDCqEEM44ncpCCHRUREzJo1q1KlSiiKWrVqLViw
4OHDh+Z01HskeOvWra+++gpNGuP/oEGDPpi9jIiIiIiIiIjo30VCFseOHVu/
fv3atWs3bNgQEBDQo0cPi7b/ieUt9tu3mgIjKgDi7+//ySef6BvaJMA9ecSL
Ql6XL1/OmDGjHklOaLH9mJiYRYsWFSxYUF/KXrx4cVT3kydP5BjDXkP6RAYq
7tatW7Vq1VLzF7t379bTVzV79erVbt266bWJ9uPo6NiyZUvDkULOcunSpc8/
/xzH582bd/ny5So/evq+vr5q3b6evqGcJX200nHjxklu9SmGOnXqGK7rLQqV
XkGK+vr16xLbV3WXI0cO/TCp6NmzZ3t4eKCOcEz69Ol79+595coVPks3PlTP
jYiIKFKkiDR1Ly8vfft38/yXfIjug3LetWvXgQMHwsLCJAb+j1zF38FwvdOn
T5fYvrqfaM6cOepbmew4fPjw5s2bAwMDHzx4oN8NZN5TDm/++uuvc+fOyU1b
mTJlwhj7IZUeEREREREREf27qNAuPH36dMSIESqIKhH+Vq1avXFsX6VvWOm9
ZcuWsmXLqsXYeJNgn6VrdzsXWbefLl06KaKE+SzdwMDARo0a6dM0KO26dese
PXrUau+JnHb/nDhxYpYsWeTn+rN0dVeuXDHvt+/k5OTp6akvG5awmPokNDQU
lY7az5kz56pVq/TtgKxxwbQFCxakTJlShfQtcc+7VA+A0NeB48Nx48bpeZA1
4fnz59evK0E1sA+JPnl348aN+vXr6w0vd+7c8pWh/cycORNH1qxZs0+fPtev
Xzes7X+f+f/XkfLZsGGDi4sL2rmDg0Pnzp31A9TWVYafKC/Zmf9fTR925s6d
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
MkdpqG/1+yyGDx+OIlKrl7/66qu7d+8a8oPSlnsWVN2hvqZMmWIohHXr1rm6
uqoawftRo0YZdkm6fft23bp1VX2hUtzd3a1a4FSdtEyZMjIf91HcMyYuXLig
t65Tp06pPe3ljEFBQXqb+fXXXyXbomjRouPGjfP29m7Xrh2y+uDBA/2kGGdc
XFzUnFeaNGl27Nhhfb55I9lhw4bJLl6qw65YsUIvKxy/detWWdauSjV9+vRz
5syJiYnBiIGKSJo0qdrsCDk8efKk+nnr1q3lUa2SPrKBYU3Ndj169Eimn/Qp
D1kirmcATVe2YFKFjG5oqFNpJHp3i4yMxKCqbzqULFmynTt36pUSHBysdmqy
2G5JmDBhgp6mvMFggvpS6aCUVq1apZqcvMH/jubNm+u3ZlhsgyoGbevzE3wN
GjSQ2VI5Lzo1+u8bz6ypRvvDDz/kzJlTDb8oMdTRi3q04XO0BPxHCA8PxxB3
9uzZM2fOnD9/Hu1Tnu2uH8/wPhERERERERH9414e2zesArW+akm5vh7S8Lp1
61ZDbH/QoEEqtq+/Hj9+vHLlyipsmyxZsgkTJty+fVudHXnesmWLbCouSeXK
levQoUN6/FmEhYVNmzZNnTFlypSNGjWSBcnq4KNHj1aoUEEllShRos6dO6vN
lq1aDOfKlSuyG7/SvXt39bRf3cOHDzdu3Ch7+MiFuLq6Dhs2TJZ9ynN758+f
nzZt2hQpUrRu3RrH61HZV9aaefN5a9y6ff3ppXht2LAhytOQpgqnm/ftl5JR
y4nVt6+M7Uvc0s3NDWdUK8YttlixxPbjGQp7UWw/efLkqKOkSZM6ODjIq5wC
dVqvXr2uXbuuWrUqMjLSnHN8EhERoYKWqMEpU6aEhoaqloxGu2/fPmS7RYsW
8+bNe/l8R/wvRGd4SMTixYuRbdXesmXLNmvWLFX+wcHBvXr1kg3PnZycypUr
9/vvv6ved+PGjZo1a6rF2yiTGTNmGILAks7+/ftl9xspRlTN3r179ZzgQvz8
/PLmzavXIxIPCAgwNLB169bJ7j0Cjfmbb74xFAi6DCpCDyCjV9otvdKlS+sb
W+GM+rMwkMPJkyfrDwLAMadPn9Zn7lDX+fPnV50LjQE/wRCBbiUPDtbPOHjw
YHVvAujr9vUj0T1VpUDBggWXL19uKNVNmzZVrFhRb5kFChSQ2kH25s6dW6xY
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
S9e/f3/ziut4Bvatz4f3pZrmzp2rYp6q6CZPnizLhtXCZsO0heEyz58/jyKS
vVx2795tDhXaje3jpMmSJWvRooUcgPYTGBjo4+MzceJEPYr4Si+P7dt9sK/h
c8MCZv0yo6Kidu7c2a9fv1q1aqE1FipUSC5TQppQtmzZ3377zXzJ5geVvhZ9
ufKlS5fUXI9cYPHixbdt22aYfNGLSz+17PeuYuOWl67bl/329fYgz8lVuTLH
9seOHWvO/N8d2z979qyhoB49eoTxQW0o5OLi4unpiY7j7e2N8UdlBv1x3Lhx
d+7cedFEFQwZMuQd7skj6/bVZSJxmQzSN9W3mraxQuGMHDlSsi3bQJUsWRID
7759+9QeUChSvUOh58bzWbpyDAaiQ4cOHThwQO2lE//Y/o4dOxwcHPQeh+zZ
XbcfFhYmTzqWGpSDmzVrpjdRu7F9mQExYGyfiIiIiIiIiOhtvDy2r8c21Z+T
Jk1q9wLt27dvayNrxfWHtL4ytq/OJev29SBh3rx5d+/eLd/isHPnzrm4uMi3
EvpTe/IYREVFSWxfpZY0adIWLVrosaBmzZrhQz0SNW3atJiYGHOA93XX7eP1
zz//7Nu3r75JTrp06STEV7Bgwd9//91qCkzFMwZuN/Z7+vRpT09PtWOGnBSF
eejQIcmninubg/wqSL5+/fp8+fIlTpy4a9eu6gmYL1+3L7WQPHlytfO2Sg3s
bnHzIi95lq752g1vzGFklfk7d+6g2SDb+OTRo0cBAQFbtmxZsmQJrrFWrVpO
Tk5yupQpUw4bNswwOxAREbF3714cvGLFCpSk3Sjly+nZQx6KFSumagcXiJaw
bds2VUTykxdtnfTZZ5+pMKwUu5+f34MHD8wnPXLkSJYsWSzarvWurq44u56m
Ibbv7Ow8duxY860672e/fX1R99mzZwsVKpQmTZoCBQrI9To6OqKakEPprVC/
fv0dO3ao7bPsti58MnDgwHe4bl/221ctU2L7ev3qbVJlzNfXVza5kmvBe3xi
uBXFENuP57N0O3fuLMfgKwy/devW/fLLLw1X98rY/v79+zEu6Z2uVKlS6hkH
OnmWrj5aIg9eXl4vj+1ny5YNzcO8axBj+0RERERERERE8WfeCPrZs2fDhw+3
PL+4V2L7sXEPadV/aHfriVfCr7Zs2SKxfYk04nXQoEFqOwt9EiEoKKhKlSp6
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
/gcPHqxZs6Zqb3hFD12+fLlKWV5RC59++ql+2ODBg2/evKl3ZLutHQWrN6Fm
zZqpyVM5APXVoUMHlSyqA8efOXNGTxbvMS4ZmqIe28+YMSM+xDBraEj3799f
uHCh+hUSxw937dqlFtujR2zfvr1YsWKq+jJkyID/C9bnhzW8Hjp0qESJEuow
tAqUgGFrNWjevLmqYpwODQbNQ09KstewYUN9iyEV24+1t3/Xy7uY/k9k9uzZ
OXLkUMkmT558zpw5+uZgL0mHiIiIiIiIiCjBMu+28fjx42+++cbwtFlPT0/9
Wbr60yHjsz7Zri1btsiSV0tcpL1x48b+/v7h4eH6vjdBQUHNmzdX+064urr6
+PhI2FMPc0VGRs6dO7do0aIqVFWxYsXDhw9btaAWjpk1axZSULvBt2zZcteu
XeoYFQ7auHFjkSJF1D4wmTNn3rdvn75TTaztAb7t2rVTG7MLJGh4jKk5HoWS
XL16tUQXJWqHnNSrVy8iIsKw0PpdQZ1evny5Y8eOamdyicLhk8DAQHPQTErj
1q1bnTp1cnFxSZIkSZcuXa5cuaIu33wKpO/l5SUlJuucLbaV4a1atdIfQGCI
TL4oWKe/+fHHH/V5FhX9llioBOjiX2JyaXfv3pWSx6VVrlw5NDTUqrWTBw8e
zJ8/X05UrFixDRs2xGqb23h4eKgFz6ow3d3dp0+frq7olXcQGK5d9kiRGKls
1fLxxx9PmzZNtXO5xr1799asWRN5btq0qTwqWtLZsWMH+o4K72fIkMHPzw9p
6iH0AwcOlCxZUu3MX7x4cTlGLxYciWzkz5/fErfSPmXKlOPGjZPF1XrdrVu3
Tp9uy5gx47fffqtOJ7m9c+eOvq8LTo1SUtFjqxb7LVOmjFpAjvPWqlVL329f
aiRbtmySTpYsWUaNGjVx4sQxY8bg9bvvvhtvgzeTJk3avXu3usXGXB3y54QJ
E2QQkHpE68JYpNcOeuKUKVNy586teqjFdtMBmqIK/kuBbN++vXz58nrjHDRo
kNw0oTKgt0/1OepRSliyUahQIdlkTGX19OnTOXLkUMfIK05naOo4l9wEpAq5
RYsW8sSBo0eP4jIxtqBjWp8fVe7fv+/r6yulrRb879y5U5//wjiMQkDG5NLQ
ulAvGC4M2y6hCtTuTKlTp+7QoQNamt6o8Ir8NGvWTJ++yZo1q+GJw6JRo0Zq
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
3r8uw4Y2d+/eHT58eLZs2dq1a3fx4kXzLMk/mdd/MylkeY2MjHRxcVFb7kyc
OPHRo0dymHmfKLyJiopq2rSp2pyncePGcl+MwnohIiIiIiIiIiIiM33T9S1b
tmTOnFltBu7u7u7n53f//v0ff/wxXbp0jo6OLVq0CA0NVdvg/6MZ//95Nm/n
zqXOij7/gvry9/evUqVK3rx5FyxYoB4hKlhob0k1vOjoaPXkU7yOHz9ebQiv
P7nVqs0ItG7dWp6QCy1btjx8+LAcnBC6GBERERERERERESVMarcWvP72228W
iyVx4sQeHh5eXl7e3t5r167dtm1b48aNP/roo9y5cy9ZssTwfM/3lkmuXn5j
Uk3BwcFffvmlm5tbly5dLly4YNVW9Vu5OPxdkMJ8+PBhxYoVJbAPzZs3v3fv
3kuK98yZMzVr1pTjkyZNOmDAAHkGsWC9EBERERERERERkV36QveAgIA8efI4
OTk1adLk4MGD58+fX79+/eeff54+fXoXFxcvL687d+5Yn483JpD13tyxxy5V
O5cuXfr2229RuSVKlFixYoV5QTgL7W3o2+ygbP38/JydndXjcdFxbt68qcpc
L/wTJ040bdoUx0hsv1ChQmvXrn3y5In1+f2y3vsFERERERERERERUYJmWLb9
559/ent7Ozs7Z8qUydPTs0ePHmXLlnVycnJzc+vWrdu+ffuePn2qDpb3743d
oD3DnvERHh4+fvx4Dw+P4sWLT5o06fr169a4qpdSTSATNP92qndERkainFOn
Ti1b6KdMmbJ69eq9evXavHnzwYMHDx8+vH///pUrV3bu3LlkyZKpUqWSzfYL
FCiwYMEC/Naq1Y6VjZyIiIiIiIiIiIjs0eO6T/6PvTuP16H8/zge2bfsO8eu
7Hu2DkLpWyGRZJdWirSrkCWlCNFGWi3JLltlzS5ky16RnSM7x+/7Nb/341wP
1+Myc59DhzjL6/nH/Zgz99xzz33NdWY+n2uuuSYycsWKFc2aNUufPv1NN92U
IkWKggUL3nPPPQMHDty5c6fvSaDG9Wx4vIFfHU+ZLuJ//vnnE088Ub169UGD
Bu3fvz+65+dSnrEWHNro+PHjo0ePrl+/foYMGcxgO+nSpQsLC8udO3e+fPny
58+vCc0x4/ZkzZq1bdu2s2bNOnLkiO9Jux77BQAAAAAAAECA27BvmhDPnj27
du3abt26de7c+YUXXvj4449Xrlx57NgxGhjjI9O2HxkZuWTJkjlz5uzbt4/H
s15P58+fX7Zs2dChQ1u3bn3LLbfcdKkcOXLov2zIkCFbt27l1gkAAAAAAAAA
/5Rt7/UNtqP5NDnGd7bvt9nLXKO5zk6dOnXkyJGDBw9u2rRpy5Ytv/32m163
bt26efNmTR8+fDgiIuLcuXNenHl0BQAAAAAAAIC4zx3W26N1MYHy7Vaa96+b
4KA6IfcF/3cAAAAAAAAA/pFgq74d7vvCpW7YJuIq+BqNaUO+Uf53UfAt++/G
3gEAAAAAAABw5Wi3T/C4THOj2OfhGnb6v//9rzt9A7YMAAAAAAAAQDzn9tg3
XYtDtkbaAdsRj7i7zzeB68BX7O4dMWa+HRTL938HAAAAAAAAAFfCbW+kGT/B
8I30wp69zoLD6ftunfA98AIAAAAAAAAArsRlx2P3tflfp83CNeW28DMsz/Vn
G/B9d8QwLA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAADijv/+979XOP9///ufXs+fP6/XCxcumD/tW5GRkWb6//7v/4Lr
cdd2Ico12PQ4KbqfZorFvnutSuDCRaaE7Wrtn7bk3f2i+e6fdhntR7t/g2/Z
5c20+V6z3+27tmL4qoFdwEzo1VYDM+FbfwKuIQAAAEhI3AjfTiug9YXf7jLB
hMiN271Lg2c735dK+NZvZtp43l3SrM2XkdkJN09xXxMqXzFGl/jYDMXmJr6M
5p+yCZqvqEPuXzH70c28vEA98f0Qt/p5l9YTd44vF/N9e3T1wc343O2MRVEA
AIBry8QtIYNMN5i0fGFPyOZf79KY0Eaeie3sHwzabWgUu5jQt57gfO0ON3Lz
bYb7lm8l7o62K/Fx40DfB6PbnpDVwF2bb/kY/gQAAADirJAhuu3pFF1kG0O0
7IvnQ7aphlyt1nPZEN33lu+rE6dgcfmaxN2ZV/8tbmu5EUyogwtbNn0LXhUy
eVZ0vfh8Cwc3zIvmSpDnZHA07AMAEHcET8rB0MKexEOe5X0txvaDviDW9iFJ
zGFAzHH4la8k2AwejDZ95e9eUPD1AInhi4J5gS+4td/izne/K7qsxPpvlOCc
xFxPAAAAEI+EjM+96CPh6KJrN+e6krtZ3X5WdmFfaG375wT7F9lN8uV6CTgO
jy4DskUUzKHsfHfmP/3e6Eo+eIe73RJf2hXd9gdzMd/32o/YPvkhq2WwHsac
utK8DwBAXOCer0M2xrqxTXTtydF91nADjAsX7y5MbELGYLGIhWJu1bdddLxo
+u17Tqu7L1lwbxyOLmJ0vzHkZsScwriCt5fGsDAAAAAQN8Uc57uttdF9POSn
vFDttMFlYlhndAlaMJiPOfhPkC6bsNjkyJfMXs3wocFhVC+7E71L92N0Nz4H
syrfSmJYf8i1Be/Ndwd9vZL1AwCA68Oevn2DOrpRgRuEBDuB2OnoBucxggP9
JSohr6FczXp8f/piTrerj28XB1vR3X0dw7bF0AkkeItHDDd4+m4+DdnDP+Tg
PwAAAEBcE0PDfnCBC1Hj28cQ5YaMooNXB0IG827Db8gJE3iHvJoQ8rckSMGn
DwTvaPY1v/vyqdgNr+pre/flzm5CZFM572ISHfJOat8G+9bjhcr7Qq4qZjEM
7JMYagsAAHHflZyRgw3I7njs27dv//DDD1u0aFG0aNGwsLBChQoVLFiwdu3a
b7zxxqJFi06ePLlv375Ro0a1bt162rRpV/iN8Vp0XSB8wZh37YZqNEzkuX79
+sGDBzdp0kR7oXCU8uXLd+rUacaMGQcPHjTfeOrUqc8///zZZ5+1HfV37tw5
ffr0qVGmRJkcRX9qr+lPvasJvZp3Nf/777/XnHnz5l1wbvA8d+6cWcZ8Smsw
02a15k+9mu/S/A0bNkRERNgHMcdw9wcAAAAQx4Vsfo8usvV1cTGNqArUJ06c
qEjbROMm9p4WxY3VbYBtInMTXWt69uzZW7dudTfmyvvMuPfwXnao9vjLTcFM
GmJ+b7CjWshuVLF+MIHbqr9p06ZBgwY1bNjQ5M5SoUKFJ554QvvxyJEjZvmz
Z88qZevcubP97K5du0ySNWnSJDNh0y5TDSwzRxVJOaDW+dNPP3lOK71+tak/
toJZ5rM2d9PEzJkz161bp0RSiZ7vtwAAgDjlgnN7nSKW3bt3//rrr4o6dB73
Lu1mYKOCw4cPDx8+vFKlShkzZkybNu1NUZJESZ48ebp06RSrtGvXrlmzZjly
5MibN++ECROC3QkSPLcTxenTp7dHcUOj2K3Tt/4zZ86sWbPm1VdfLV269C23
3JIhQ4bChQvXrl07PDy8bt261apVK1KkSIMGDRTgnTx5cv78+TVr1mzZsqXt
o/Ltt9/mzJkzW7ZsWbNmvfnmm5MmTaqdmCZNGu04zbRv5YiSPXt2LWN29623
3uo5O3T//v25c+fOGSVZsmRmPSlTptSnzEy7BtGf2qSePXsqaPzjjz9MmVzl
OJYAAADADeHrHa1QVpnUjh071q1bt2HDhvXr15uJPXv2HDt2zNd4btvhd+7c
qRBaYbaNpU2GZWJvE6jf5LBvmXczZ848cuRIt7O3u0nuFkZGRh44cGDz5s3a
JKV17pYk+CDcvXihie+//16ZUf/+/bWD7ALepc+NdXv7x7pl+9SpU0qxlbKV
LFlSKVumTJmUL9955521atW66667atSoUaxYsXvuuWfcuHFKG+fOnav5Dz30
kN0d3333nUnNlJelSJHC7P306dPnypVL822SZadNVVGtKFq0qHsvQEREhMnv
8uTJkypVKlN5NKE8LmsUk6nZTPDuu+9+/fXXZ8yYsXXrVpOyBW9wAAAAN5Bv
hHadrxWCNmzYUKGCzuYDBgzwLWYcOXLk/fffz58/vyKB1KlTh4eHv/POO998
882XX3759ddf9+nTp169eooK0qZNq3e1jEIORSnX+afFBWaMIwXwhw4dmjBh
gmK2OnXqKFSL9Qp9HW8Uup85c2bMmDG33357mjRpFCU2atRIRb1q1Srto4go
27ZtGzp06J1RunfvXrdu3ZQpUzZt2tSuZO3atW+99Vbv3r0fe+yxggULan9p
VQ0aNNB+7Nu3r17Nu5pW0PvSSy9VrVpVe1YZh8LR3bt32606e/asWb5Xr15l
ypQxgWK5cuVefvlluwa7wrZt21aoUEEJiILbbt26LVq0SB8nUAQAAEA8EnIg
l9OnTyu47dmzZ5UqVUwzrGll1XSHDh2GDx/+66+/njx50r0b2jQg7927V4lV
zZo1K1asqGTK7T2VKVMmBdh33HFHzYs0XalSJWVktp9V+vTp33zzTa3Zt3nm
WyIjI48fP3706NHDhw8vXrz42Wef1WcV/H/44Ye+ywEJuHk/eG/FiBEjTJu2
Sv6RRx5pdVGLFi30aufoT5VtrPvtnzhxYvz48UqjUqVKpe+67777lMH98ssv
StaORNm8efOQIUNMyvb666/rVSnbgw8+6F2sG+vWrTPJ1JNPPhkWFqbdrdRP
qaUyr379+pkky6Zar7zySrVq1TJkyKDFChQocODAAfvDle+btO6NN94oXbq0
uYRUqlQp5YlmPfp4nyiabt++vepYlixZbrvttq5du/7888+2dpGvAQAQF/hu
OVQ4t3Xr1oYNG5rgMHPmzO+++27I5RWsFilSRAFqxowZu3Tp8ueff545c+bs
2bMKFfSqacUns2fPrlGjRvLkybWqvHnzjh49+mqePRQvuH059GNVFNu2bZs1
a9agQYM6duyo8lTspDKZP39+7NZvgkk3RP/9999V/unSpVM5Fy5cWJmCwnXF
7WZJ+5gD7Zft27crflMEaHrdt2zZMjh+o4J8bZ7eVSqh2NU3Gqf58/z58wsX
LlR8mzp16jRp0kycONHdKnvrhwJR01ekefPmf//9t7v9ZssPHjw4derUevXq
aT3aeC2v4Nb9utgVEQAAAHDd+CJhOX78+Mcff3zbbbcpxE2VKlW+fPny5MmT
M2dORewmPNbMMmXK9O3bd8uWLXZkHjsmz8aNGxUV//TTT/fff7/bJ7906dLT
pk3TW2vWrFm9evWqVavWrVunsPyDDz5o27Zt8eLFzWKKvbUGz+ltru3ZvXu3
vkvrHBKlc+fO2iqTFOTPn18ZROKJvX1PClNqo5+vXaOiSJkyZYoUKZSbpIqi
P/WqnaiUxyQ+DRo0uML1+y6OmJRNiZgqQLFixYYNGxYREfF/UdwHpZ0+fXrH
jh29evVSip0kSRItbNr2LbNPV6xYUbNmTW2wKlXv3r3dm+vtt+t3LViwQBVD
v0Jr++abb+y77mhRzZo1M9XgoYceUhbpXTo0k1737dunWle/fn1TLKqTqoFu
3qcv8i7NT93tuXDp4wMAAMC/x4QTCvkUDdo7PYNt+4aCw+eee850QWnYsKHC
Rd8A8iZg0Il+8eLF9erV02I5cuQYP368lwiu77v3QcyZM6d8+fIFChTInj17
kSJF8ubNq6KoXbv20qVLTX/+2H2FLcMjR45oBynOVEhWokSJUaNGhRztx0ZZ
iv/bt2+vbXADRTfQcgNFpRteNONPKuTbtGlTeHh4+vTpBw0a5FvJhahnhIVs
2/cuDfy02q+++qpUqVKKXRXrvv322yak9Aj/AAAAEE+449icPXt2yJAhyZMn
N92h77777lmzZq1Zs2batGlt27atVKmS7WOv6Lddu3ZmeHw3RTKNpXv27Gnd
urVprjfLV69efdu2bb7vNV996NAhJQX58uXTYvfdd9/atWs9J5weM2aMvrdM
mTKK8LVVyZIlM52vzB0Bia1t37At2Bs3bmzZsqUZAckUtUlhbEZsZ1aoUOH7
77//R0mKyaEOHz783nvvmf1+2223jRgx4vTp0+5i7uA/et2wYYMqhqk/TZo0
8QLjKa1cudKkbEqxe/Xq5XsugLuFql2qNqlTpx48eHDwARAh2/bdwjETqpCj
R48uV66cTdnsQwFCjqcasi4lwrF5AQC4PtzBBhUrNmrUyB2/Mbq2/QULFigy
NEFO8+bNFcFGt/5z58717t07S5YsWv7bb781/VIScOjo9rvQxIwZM+65557X
Xntt9uzZiogUN6rQ7rjjjlj327eJg+nXMWHCBAWZWmfx4sW/+eabEydOeIE+
G+aDZpO0O8aOHasgUIGZdpxdp3cxNViyZEm1atV8nUC8SxvkvYs3AvTt2zdl
ypQKFH0/34u+376b+Fy4+Eyopk2baj1a0r2jITEM9QkAAIAEwIbK5jFYt956
q205T5Ys2fDhw0+dOmUWW79+vXKBNGnSmAUyZMgwatQo05jva7/ds2dPq1at
3NH1q1atun37druAG5l7Ualcu3btUqRIce+9965cudLdKm1A+vTpldkVKVJE
oX758uUzZsxom68TW9u+22dJv3r58uVKgbXLBgwYsGzZslWrVqn0zKsxfvz4
u+++u1KlSnPmzDHP3r1sPusmMqoPU6ZMMSlbqVKlRowYYXJnm4a7CZepQvoW
falJt93x9u2S2mZzq7XSup49e/p647uboW9/5513VN+GDBniG4nXi6ZtP+QQ
qaqNStlSpUqlKq2vNg/ntVmk213fVy2D2R8AAPg3mM4eClp0Zs+UKdNl2/Zn
z55t+zAoFnKfvuRFteu6Q7jMnTtXgWju3LnHjBmTSE7o7jCM9i7FjRs3Nm/e
XCVWq1atBQsWeLENb2xUppiqevXqiskVw3fs2NF2n/ACQwO5jeSbN29u06aN
NqN169buCJ9m+RUrVihaU8ymYLJPnz7uW15UN6Rffvll0aJF5isUVebJk6dz
585mGTdsi65t373j2LtYVZ566imlG1oyXbp0CncTSSUBAABAAuDrC338+HHT
Kz7JRS+99NKJEydsqPzpp5/mypXL9glXqPzrr7+6KzShsu23bxrhxddv37Tc
njp1ynx1ZGTk+++/nyVLFmVes2bN8pzgfNOmTZ999tlXX321bt06LaZ0oG3b
tsmSJUvM/fa9i+U8Z84cZcEqkO3bt/tGj9GfSn+mTJlSvnz57t27m6K+koKy
uZgo77v99ttVzqlSpdIOVfWwlwbcJnG7ZvPZLVu2aJPctn17j4amly1bZtv2
33zzTfu9JgnVLl61apVJ2bS8Ura8efM++eSTXqDbfHT99j2nPtuE0U3ZVIfd
xdwycXvy+24oiPVN6wAAIAbmhBsREXHHHXcowCtTpszUqVMVe0TXtm/OyD/+
+KNdJmvWrA8//PDChQsVS4S8KL9r167Ro0cPGzZMYaSXmG7EcyMiL+p+TzPe
Uc2aNVVcsSsHc6XAjOczbty4bNmyaUeULFlyzJgxwa92b8qw4eKBAwd69Oih
zVAgZ5e3G7N48eJq1aqZtn073r4Nxvbv3//000/ff//9ZrX79u2rU6dO4cKF
g9sZw5g8XiCu0zrNY54UWCbOzAIAAADxlB1p03S8P3XqVIMGDUyzuV5TpEgx
ceJE01XbBNUrV640vbjNAgqYFdV7l/aT8aKCdtu2b5asWrXqtm3b7GJ79uz5
6quvPvzww19//dVswIwZMypVqpQ+ffoPPvjAu7R7ubty225sJLa2fd/dzYMH
Dy5XrtzQoUPdBnmb/ihru/vuu5988smdO3e6RRRDKudrsf/uu+9y5MihclbK
pqTYrsR9TIPnJGtm+uDBg0rZ9CkzJo/L3Gug5N2kbOZWa3d7VHOeffZZVUL7
jDOlbAULFnTXYCcu27ZvJ7ROk7KpxpoK5m62rzuZ+acwPb6CxQIAAK4tnWFN
3Fi6dOlNmzYpbrlsv/2lS5eWKVPG3sipkDVlypQlSpTo2rWrIsMpU6YcOXLE
PX2fP3/e3MDoJfQTuq8bhp3pRbXtt2jRQjGYIjHTjyLWX+FFdb9v1aqVCj9Z
smTacSpz0+xvw6eQXSbM/B9//FERrBmTx7c7FChWr17dtu27b+mD27dvr1mz
piJD241/xIgRCvPcqxgXYnyWbjDFOH78eJs2bVKnTq0lixQpMnXqVI/YDwAA
APGT4mEFtBkzZjRPZa1du7Y7OqVp7dRM22J/8803m146buir6b179ypI1rta
zLS+Kkr//fffvYsdeGbPnl22bNnChQt//PHHJnjesWPHa6+9ptRAc3xb5fav
3rp1a2Ju2zfs7507d27//v1XrVrlS+JUwr/99psKSjtry5YtduYVFpRZj1mD
yZq1syZPnhy8KODb73ZCCWOFChWaNWsW/NIVK1aoMth++741aP/WqlUrX758
ZoNV35SyPfPMMyEv9ATb9n1D95hX1eH27dvblG3ChAnepbcnrFmzpkuXLsoT
U6VKlT59+jp16vTq1UvJ7/PPP2/b/xNbHQMA4PrQmV3BZNasWYsXL75582b9
qZgwhn77pul4//79OlnbgSLtvaLmIUT6VNGiRUuUKNGhQ4d58+YdP37cu3jS
TySn9QuXjjpobNq0yYzJc8cdd6hYYr1mM7F06VLFbFpb8uTJW7VqZUbaN3y9
JnwUgyk6ffbZZ9966y03rjPTChRvv/12rTZ37tx9+/a1+0v7XcHet99+mzdv
XsX/9os0P/j03gvRj8nj6wGi159//jk8PNxcHnruued27doVu5IBAAAAbggb
fpt+LBeiRuNcu3btmjVrDh06ZGbaBb777ruCBQua4XoUKufKlWvGjBm+dlfT
tm968lg1atTYunWribSVjilNy5EjR1hY2GeffeZdfBqXcoSxY8du2LDBrM3t
DW7n/Pbbb61bt7ZDBiW2tn03U1NmFBkZqXTVDqTvOfdN9O/fX5nR+PHjzQf/
6cAyWn7ZsmV16tQxfeEeeeQR5VMXnIF3fL2ebA0x765bt65r167aBrupdtts
236ePHmUldsxYDWhtGvSpEk5c+ZUNme35FwUz7k2YV9D9tsP5pJLlixRyqZk
P3Xq1F26dPnzzz/tkqrhb7zxRunSpZ988skFCxZs27ZN9VnJZqFChVKlStWp
UyezpL39/ApLDwAAXCHTsF+0aFEzYI5s377dPrMpun77XlTbcvHixd2nOxlm
eEl796jijUcffVThh5eYTuXBGzY1Z9OmTQ8//LB5/NDixYtjVxp2zSNHjjSD
ZOr1qaee8qK5YhJsS/cuho7mMo37aADv4uCN2q0ZMmTQ1s6cOXPy5MnTpk2b
MGHCwIED69Wrp29UBuH7OreXS8z99j0nlNUyqmyK97Jly5YuXbr69ev/8MMP
iqsTT2YBAACA+M6G2b5W05Dt6nr98MMP8+fPb9IlE8mb3vi+Jfft22furTaX
APRarFixESNGTJkyZdy4cT179qxUqZLmFyxYcNSoUcEGZzcLcIeRN/2627Vr
Z9ec2Nr2vWguebg77uTJk5988knVqlUHDx587tw5d/mQeza6lX/55ZemC9zN
N9/8xBNPhKwqXqgbrm1KZR5P5vtqJdc1a9a8KepZzA899JBSNtWK6dOnT5w4
Ucm7siq9VaBAAd/oQ4bvaWvRjcljt+H8+fNK2Tp37pw9e3albMoHZ8+e7aZs
kyZNqlChQsuWLZXt2q3dtWtXt27dMmfObMb5d1cIAABix3dmN/09dCJOnTp1
2rRpv/nmGztK5M6dO20AqdPxe++9Z9/ynAvuZ8+eHT9+fFhYmG3JN3eM2lZ9
2+yviUaNGq1evdq3MYmNads3/fYXLlwYu9jGFJ32gmJ4U7ypUqVSoOhG7G4b
e3SD2/iWtxHm4sWLtXkm0ciRI0fZsmVLlSpVpkyZ4sWLm2d+ac8qg7jsHlS8
17RpU7OFdevWVbS5aNGiefPmzZ07V799/vz5CxYs+Oyzzzp06JA3b17lKZ06
dZozZ86xY8eCl0UAAACAeMftqGyDbYW7zZs3t4+aatiw4apVq4Kfddv2b7r4
WF5lbbfeemuJEiX0mjVrVjO/QIECCqqDzcUx2LJlS5s2bRL5mDxBbn60YsWK
RlF27NjxT9dje9Hr1aZsyZMn79ixo6+V3nO667sd+G3Dfsj16137LF2tNlu2
bOXKlVPKVrp06ZIlS5qx/c1uvZLfa7pjqSLdeeed06dPV5qmlE2Jm7I25Wv6
88svv2zXrl2+fPkKFy6slG327NnmEoDdYDNyVNeuXQ8ePOhmoBMnTqxYsaJt
24/5gggAALhyJkjQqXzMmDGKBHQifu2119z7Ac14+6Z3QaZMmQYMGBBdE+u5
c+d0xr/vvvtSpEhhLvfb4NONQs3EvffeqyDES8QNttekbd9SDG8voDz99NNm
pgmZgiXsdgXx9eoxwaedbx7MpHWmSZOmZs2a3bt3f/XVV/X64osvauMV1Jn7
di+7edoMBYrmzoKiRYsqDtRGdunS5dlnn+3cubNeNeeBBx6oUqVK27Ztv/ji
C4XN7tg+BH4AAABIMGx8/tZbb+XOndukSIqW165dG7Jztdu2nzSKGdelVKlS
ZcuWLVGihNI0k38VLlx45MiR/2hjaNuPjsmUd+/erdznlltu6dChQ3QN7Jdl
yvPzzz+3XeBsyuZ7iq67vI9J0LS8r5KsWLEiPDxca06bNq1J2V555RW9Pvfc
cw899JC5K8SMt3/Z3dq0aVOTshUqVOipp55SmvbMM8+YxK1TlMaNGytlU4X5
5ptvVHPsxttmfGVzqp9abPXq1e7XzZgxo2LFimZMnkTbAgAAwDXkCyE++uij
vHnz6iSu8PLvv/92h+/bvn27jfQyZsz43nvv2ZVoMXNetgGGnD59evLkyS1b
tqxRo0auXLkUc9rBG93m/eTJkz/++OP2OUSJ0LVq2zet9woUTZCfOnXq4A2e
we76vkH4fTdj2o8vW7bs9ttv1y5T0tGzZ8+TJ0+eOXPm1KlTR48eVerx0ksv
pU+fPiws7LLh2fnz55s0aWICxerVq48ePVqVZEqUSZMmTZ06VX/qVdO7du2y
lxtsBSO5AAAAQLwWHGhF0W+JEiVMm3yLFi1Wr15tB1f38bXtm9RMnx0+fLhW
MmbMmD59+lSoUEFBe6FChUaMGBHyAkF0aNsPyZbh9OnTCxQoUL58+Tlz5sRi
PTax0qq++uors/tSpkz56KOP2nd94+27/fntemwXLM/Zs2Zi+fLlpt++su/X
X3/92LFjZ8+eVcp24sSJjRs3du/eXRlivnz5LlsftBkPPvigqZA1a9b8+uuv
Tb6mOmYGZVVR6E9N79y5U18RLC5tsL4uY8aM+oGNGjVSirpkyZI9e/boXW2M
Ej3bmZ9++wAAXBOmgVfBm4JAnX979uypSMBdwIzJc3OUm6LG2x8wYIB55k6w
04IvFNGqFKDOmjVr4MCB99xzjyIifdztz/+f//znl19+SbRX7a9J2779lH2W
brJkyVq1amUfzGRDRJsmuF9kZirw++OPP/7888/g3bsKFKtVq6Y0IVu2bG++
+aa7Bq1Z+7dUqVJmvH0vxvRBbz3wwANmv5vnRnmBCuOuOWRpJNqqAgAAgATA
PrrUixqWvFKlSkqO8uXL9/HHH//+++/uIDC+Fn7fmDxGjRo1TEepyMjIv/76
6913382ePXvevHnNs3S9K+4eQ9t+SKYETp48OXLkSKWxlStX/vnnn2O3Kttx
zjyC1nTdV8pmUu9gv/2Qffi1l3fs2LFr1y53vqGUzYy3r5StV69e5l3bB2/N
mjVlypQx/fZjyKfMqmy//ebNm7spm30AtK/nlVuljUWLFt11111mJUmTJs2Y
MWOVKlVatGgxatSoAwcOuJ91nx0AAABiwY7WUrJkSTPoyr333vvIRQodFW+0
b9++UaNGNtJLlSqVQlC9pfCvX79+bt9vc2p2uxN4lwalR44cmTBhQq1atext
pGIiz8TZZnttx+TZsGFD27ZtFSWqbBW8TZ482bu4i4OjNbr7RTMXL15csWJF
RVxmjtuVYunSpdWrV9dG5syZs0+fPu436oN79uxRnSlcuHB0rfHuwk2aNDFX
dvSrTaDo2+9uOmO5P4HYDwAAAPGXHTh9xowZFSpUyJAhQ7t27b7//vuIiAi9
9ddff/Xu3VupliLw4Afdtn2TTFWtWnXbtm1mAQXMs2bNUkhfrFixkSNH+m7R
jRlt+zFQkqViT5IkSY0aNVasWBGLNbgXa7Zu3WrWpj1YtmxZZcdmGfe2ZTMR
bOpftGhRlSpVlEm592UbK1eurFmzplabI0cO07bvflwp23/+8x/Ttn/Z7TTD
qGpVzZo1U/7uhep2Few5ZlM28/rdd99Vrlw5efLkJvuzd5c3b9588+bNXtR1
in9WiAAAIHo6+Sp+0+lbJ/GUKVOmTZs2TZo0OvPqNVWqVHrVHDtavs7OWsws
UK9ePdtV4NixYzNnzvz6668PHDgQvL3OvZr/66+/3nvvvTZ0HDVqVOJs2Peu
Xdu+DbfGjx+fLVs2rbBMmTLjxo27EBhpP7hfzAI//fRTuXLlFGfaezHcfvv2
Bs8+ffr4emtov+uLhg4d6oXqs+Fyx+RRoGja9u13Ba9BhPyBAAAAQDxl2kJP
nDjRq1evW2+9VeF3//79d+zYoTjZBOHr1q278847M2fOPHny5BjG27fPMqte
vfr27dttZP7XX399/vnnw4YNW7169T/aMNr2QzIl8OOPP5YuXTp79uxvvPFG
zPlODOw+0homTJhgUrYSJUqMHTvW1w0+2CnL/qmE0XTHCuZKStlUGVQxlLL5
+u3L8ePHv/3228GDB1/Jpj744INmEF190eHDh93SCHnbfjCXNz9z//79o0eP
btq0aeHChdOmTZsiRYpkUR544AFzQcrmgFeyVQAAICR7b2Dfvn3N80zNg027
dOny3HPPPfPMM127du3UqVORIkXM1Xad4lOlSlWjRo2uUQYOHGhXNW/evIwZ
MyrYcMfYCd5Jak7fWr8dmYe2/WsyJo8pW+2FatWqaU8pdurQoYPpaGH2wn+j
uJ+yl2AOHTqktEL7TiGfFwgjlyxZYm7wzJMnT+/evd3bNMzEmTNnfGMtRqdJ
kyYmGdGv/vvvv92Nt8vY4Na9QhS8WgQAAADEO8eOHWvTpk2OHDnatWv3008/
KQ63w5Jool+/frlz527YsOG6det8H7wQarx95WVbt2618bmWMZH5uXPnvEBE
HQPa9qOjQvjyyy9VJlmyZHnllVeuZj12esGCBdpx2okpU6ZUyhYREWGXcRvP
fYmSFnvrrbcqVao0duzY4I3YK1euNLdaZ8+evWfPnsGvVpU4ffp0yEc5+BZu
1qyZ6Y710EMP6Ut9A/vbCV/O6Na0VatWKS09ePCgpo8ePbpnz54dO3Z8/fXX
yjfN8yCGDh0avJYBAACuxoEDB3Ty3bt3r173X7Qvys6dO90xeTJkyKBoQUtq
AXMd35zcZ86cefPNN5cpU2b69OleNB0PzERkZGS3bt3MGIOKkb799ttE23J7
bcfbF0Xy48ePV8indZYsWVKB6MmTJ71Qo9y4O0jBfOfOnWvXru0bQNJ8aunS
pbbfvh1v3+1eEt0DeX3Onz9vO4E0b978+PHj7vJu7BpDzJk46wkAAAASAGVP
rVq1Uj6VNGlShdblypVTmF21atVqUW6//fa8efMmS5asbdu2ShN8n71w6Zg8
puu+Pr59+3bPCe99ncB5lu5VOnXq1IABA7S/smbN+sYbb8SuT5rvucZK2SZO
nFihQgUVdbFixZSynThxIri877M7duzo1KmT0kaTsrlplKZXrlypt7TCHDly
2JTNLuBFM9SPj3lLuX/y5MlVwZS7me5YXvQVKdjCr1dV4MqVK0+bNs2dqZJU
4q86r41s2rSpF2PSBwAAroYdMN+chc+cOWPan00MmSVLlnfffddz7r8zvQtm
zZqlmCdVqlQdOnTQR7QS34ju9lURQufOnW+KeuSrFjaPf0rAoWPI5mszf+PG
jS1atFBRhIeHL1y40Mw35RnyEVoh+ZZRyqD4M3Xq1FptqVKlvvjiC9Op3m6G
2b92/Xv27Ondu3dYWNgLL7zgboDNDpYuXapcw9e27zk3ffja+YOj+tjVNmnS
xKQhDz30kCJY32+0KUkCrgwAAABI8ILPkFJ8e+DAAWVVmTNnNnmQ6X5vHpWl
6eTJk9sO+bZt3xeWHzx40G2BV1ytKH3Hjh3epdlWsDe1byQZ25/fNMzKtm3b
2rVrZ9ecL1++YcOG+VqDE2GIfiHq0WN33XWXijpr1qym334syiGYFx85cmTQ
oEHa6aoJxYoV+/zzz0+fPu1d2g5vv0h/7t27t1+/fnny5HnppZfsXR7u+let
WmX67efOnbtHjx5eNHcBmA1ws7DgJaGmTZuaxwHYYVTtkm5NiKEcWrVqpczx
3XffVeLvrn/fvn1KPE0yeNk+XQAA4Crt3r1bIeWWLVtWr159991321Azffr0
iig2bty4devWP/74wy4/a9YsEwpmy5atU6dOixcvjoiIUNBy7ty5M2fOKK7Q
xNmzZ//6668333wzR44cWrJu3brmKVGJJ1D0DYyzYcOGFi1aqGDDw8PnzZvn
e2KsG4DFXES+Ry9p17zwwgtmFMfChQsPHz788OHD2gX2got51R7ZtWvXBx98
0KBBg8cff1yxlrsqe3fwkiVLtHk3RT1LVyFlsK++5ctfvEtvENCaFcWZRKZ5
8+a2E0jwNybaMZoAAACQMLgBrYLwAwcOdOjQIUuWLG6vezu0jm3q1/zkyZN3
7dpVeZbbM2fNmjW//vrrjBkz7r//fvMENLOSMmXKTJo0aU2UdevW7d+/34u+
nd/tcRQZGblnz57NmzcrcVBmN3Xq1MaNG2u1plE3d+7cr732mt5VMvjbb7/t
2LEj0cbnSoVMLqx9pzLxriJ19Q2RtHPnzm7dumXKlEnFXrRo0aFDhyp3th2l
bAcq7SmlbB999JE244knnlCS7lunmVixYoXpt69917Nnz5Bt5u7jlX1pml1G
365M7eYoDz/8sDtekF3JZX9px44dtSXPPvusb2sPHjyoLDVfvnxmoNdEW6kA
ALgOdO5W6FKlSpVKlSrdfvvtCjlM/Gmet1ugQIFKUR577DG7/Jw5c0womCJF
irRp02bNmrVYsWKtW7f++uuvx44d+9VXX3355ZeDBg36z3/+ky5dOi2TN29e
/WlG4Uvw3PbwTZs29enTp2/fvnp95plnFJCrYMPCwhQC9evXz8yfO3eud8Vx
Y7BF3Yu6OUIlX7169fTp02fMmPGBBx749ttvf/nlF0WMKvOjR48qSv/uu+86
d+6s3aSv/v33331XEJQdaHveeuutJ598UpunjdSOu/POO7WF/fv3Hzx48OLF
i32/zqzB10/p9OnTZj36XcWLFzcpTKlSpXr06KGZ7777rglifb838VzuAQAA
QALj6/F+5syZtm3bKpY2Lfm2Sd+wjyEztJjyJnOnrWmA3b9/f7Vq1e64446q
VauaLlJWmjRplLLVrFkzPDxcedZnn33mXRqce04rsduEq1zgxRdfrFy5snI9
raF8+fJK3+xqlawp49PXVahQQe+2bNnyuhdhnKASW7FihWnbV8l37949+DDZ
KxTMdPR67NgxZcraC9rpt9xyS6NGjfSnvlH50YEDB44fP67dNGHChC5dutiU
zbv0qo1Stt69eytBe/rpp/Pnz6/tVCZet25d5VlKwd5///0lS5aYL42hF9aF
qMc0mPUo0bvttttMNShRooRSNq3n7bffNml7sPtWSK1bt06SJIlSv4EDB0ZE
RERGRurb9RUTJ05UNW7YsKF+Y+yKEQAAXCHTxdqGnWbCNO+7FEPaIGHmzJla
LCwsrEmTJm3atClcuHDGjBkVWtiuKebjqVKlypw5syLP8ePHHz161Hd/X4Lk
G5NnypQp+fLlyxUlW7ZsqVOnNk8ozp49e+7cuXPmzJknT54BAwbYFvLgLb0h
2QK0hXn27Nlffvnl5ZdfLl26tMJF7QvtlDp16tSvX1+v1atXL1KkyH333Tdq
1Ki9e/fa9dh4dfTo0TmjaH+Zm4WTJUumrVVYqy0vWbKkfQhydJ2CzKvCOf2u
7FFSpkxp6pJ+r367Vq6s4Y8//ghWA3pxAAAAIL4z7erHjx9Pnz590ihuv303
UTJd92+KGgZz6tSpbjC8detW867trm8SNM00Xf3Nn5kyZerTp4/pbBN82Jad
Nm8pTTBDg/q2x6zQ5m7mT2UTsW7Tju/Wr1+v3FZZjDKpDz/8MNZJSrAj/YWL
j7hdu3Zt9+7dS5Uqdcstt2TIkKFYsWJ33nln3bp1a9WqVaNGjaJFiyp3/uij
j8xNGb7c8LvvvjNJZZYsWcwg+aokSv3MzDJlygwfPtwde8d2xLLMVSSlbHnz
5jUJqdZjKmqKFCk0R9mfNmnz5s3epYPHxqBdu3b69uLFi9erV69///7z58//
+eefhwwZoh/VtGnTH374wXOyzgTcDgAAwI1iTvfLly9XVDk5ypQpUzQ9ceLE
adOmacL8KQsXLrQdQhYtWqRz9+jRow8dOnT69OnFixd/+umnjz32mCKBAgUK
FClSJF++fIqImjRp8sEHH6xbty5kB5IEzIZAe/bsUUmaAjRlK5MmTdK0KVtN
//bbb757NmOIeUKOo2gmFKppYuPGjYMHD1bJq/wLFiyYP3/+smXLdu7cecaM
GQcOHLAb5jbR61XbaTdPE9qqKRfpT4VkyjK8QKYQvMSgzTM/Ta/ff/+9+YHT
p083hTBz5sxjx44FtxwAAACIv3yDnygGViZlo2ubVZmZYmJjxcmzZ8+2Q+uY
OF+5lQnFzQImtNaEPqKZJkfTTMXVGzZssF9qJsxI+8GE6++//zbpnlmtzUdM
qG+/S2vW6/z5869PocU1phiXLVvWrl27Pn362AFqYr0qL5pebefOnduyZcvA
gQMbN26sfC0sLEzpc/ny5Z9++mklUCFvc/aiasiff/45LYrda5o2O1ETs2bN
Mo9a9lUA+5wFm/pFRkbabNQmqvZVuduJEyfc1viYm/dfeOGFV155RSm/csam
TZua1oBKlSq9/PLLq1evdpfU98aiMAEAwGXZRlrbAfvCxYfdhAxLzLR9CG90
T9G1wYPv3cTQvG9/qS0KX1wXso3dzrlsi3fwrlvDN45iyCb0kOsP+cgkM9/3
5CYvsGd91cZGj76n7obsqH8lPxYAAACIy9yA1mRJbmu/7V0fMm4POdOLJs53
s63gR0IK2SEn5m9JDPlaDK7ytgVfefq4y9hHntmP2ATcl8f59qCbY3pORuku
7ObywfTcl7J5gYw1WNMu+5Pdx8m5jxLwAskvAAC4tnwNwpZtyPW1P7snet/t
db5LAO7atGTIHggJUsgm62Dk7AufrqRk7PUC79IYL2S8ZBewu8mNG92Jywbw
IW/1DWYowYDQl0H4pn3BKgAAABC/uKFssINNMBIO2X7uNrSGjMyDbfLBNXiX
9thxY3Xfhvk2xguVJiRCvt5TseuG5OZlwRzKXacvOw625werVgzjL0U3M+T6
g/vdl2OGzDRjEHNBBasfAAC4VoJn6mD7vK+zh2/54CgxIRt1Y/7ShMf97TEX
oK/QrrBwogsC7XQwTgveLODLLKLbfZcNw6IbhN+3tb5XojsAAAAkDCFvgw22
oAZjYBuK+4LwYOccN1Z353iBMN5dv6+BOoaW5Og+kkhE19Ie61XZiRju1A5e
TXC/PeZ95H5jDMtfYSoXw9ouK3jVIHh9JBHWKAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPxT//3vf/V6
4cIFOy3/+9//7LRllvm///s/O+1+/Pz58+aDcp02PU4y5WPZgnLLzb6Kme+W
tnnXFqNdQ0h2VXZHuMvH/NkbwpaDryjM7zXvmrpkmPluiXnO7w2Wklv+7lcE
5wPXn3u89f2nAwCAeMrGmb741o3wdcYPmRdYNi+4cJF3MU5w42F3wo2E3eXd
nC5kamBj7/jFLQ2TLwTz05BlYn9vdKXqy4U9Jx32fdaLw8GbLxO0fBtsl4mM
jAwuoHfNfHdVbol5ThV1y82WXrAZAbgOzDEhmG0hdkx5uq0owUPf1ZSw257j
7i+3Lch+S3QHt1hsgHu+dg9iwaPcP11zzILnIC9wjgauki+YsRO+87XnVMWQ
7c/m3yRkpU1sVGK+5mgjGJO7H/GiKTd3JTZijznUj+OHiBiOzL4T8ZVc2vAC
5WDK31c/Q1Zm4DrzZU8eGRAAAPFfMPIMzvcCsavJqnxBqa+FIeRn3Y/4Agn7
8ZCRcHBV8S5fiyG3iq7R3vduyEz2H32vFyfz3ODVouACwWVscbm/6J9WjGAO
S6qF6y94rCPPuhr2sqltD7fNXNdEzBdMfZ1mg5/y/oXjjO+ccm3X7zv7RPcD
gavn1uRgNQ7ZfOpdrJPB625xMOC5DmIIhIKt/e6SthiDAbkbwEe3ct/3Rndl
My4IdvlwNz54C4N3MdoMmSj54vboDvW+1CnOFg4SNt//77WNjgAAwA10wemo
byLV6E70wfttg3NskGz/DPmNXqDJ+sKl9wvEEB7HR2752IaR4P3RpgSCLSch
OxG5xWinfVdY3FshjHhUksGttZmRW21irj/B7n92Olh7E2c7AG64YG/JePR/
Gtf4jpbXvCHanB99p6eQbUHXfAQG9xhuz7O+r/6364/vdifg6gVDSne+7/J9
8FMxV/vEfCwNNvJHd+3vnx433ANRyHfdr4tr3Lgxui2MocvH/wKjRblXQIKf
siGrLwQNuXLgOohfySAAAPinLgRGvAnZuh5d//wYQgX3s772KzfGjuGzwWbt
+NW24P5eM8ctk2DPKF9bfcgfG7JFOuaZ8U7IShXzzwn2N7uSTwE30HVokk1s
3ANpdJeJr6a0fa2Rdtp3SdELNcRc7L7X19HUnRnrdf4j9O7DvycYscTc4K/X
iIiIbdu2zZgx45NPPvniiy9GjBgxceLEpUuX7tu37/z585GRkevWrVu0aFEi
rLTR3T8bbHL3BZxmpum3H7Ih2o1I3QA+uoA8jhe+rxtMDP32Q0bv7qf+54yi
afvS+JY3y7gjc3qhBnMDrg/3H5+uTQAAxGs6lfuG3PecYDXY4OxrL/V1Ow/J
rtw3J2TLs2+geHexYFNtvBNdw76diC7LUOTvLh9ylH7v0oaX6C6XxK9rIr5m
K7e6aiLkD/EVnW+Eau/SvWD+PHfunP2TsSZw/QWv3yWAw90NZP7Hgy3qwelY
tzvZMSss3zkrhm6rV9MOH/KD7ne5I2zH7iui+95gm941XD9w4eKgKHL69OlV
q1atWbPmyJEjvgXsnwcOHPjss8/at29fvXr1/Pnz58uXL0+ePKVKlbr//vt7
9uypjy9durRz586PPfZYIjyW2pDJ/T+14Y1tWw4eFfXWa6+9VrFixbJly5Yp
U6ZkyZLlopRxlI2it8wyogWqVav2+uuve5cGt76LMnGWrx3edyOzXcz9OSrM
P//8Uz+8fPnyqnWmlEzJ6E+9ar5KpvRFlStXLlGihGZq+u677962bZsXH0oG
CVjI63oAACBhiK7FwzaV2Lfclo33339fcazi1XIXmVBfc0wWYP60ca/iW01X
qlRJaZftr+Jrp3W3RG/ZlCSehh++6xrexVQieGHFbYL2Lv788PDwChUqKF9Q
kZqUwZSkKWpTwiaPqFq16osvvjh37tw9e/bYFbrD8ly3n3xt+e6A9nWCsnO+
+OILlYlNOU3aVfZSNjNVeZpllMa2bt06Hl3yQMLjOzjcwC1JSHzN7MHHF15l
G3vwuZ/uoGrBXu7RXWuI3Qa4v853hPyXqlDwcgZtU7iGbKvplClTFO0onlm1
alXwhiZNHz58eNiwYdWrV9cyzz333AcffDB8+HC99ujR47777lN4+eCDDzZt
2rRQoUItW7a8Yb/nhrKHiOPHj//8889Dhgzp0KFD48aN77///ubNm6usNDMi
IsIL3EWrMlTB1qhRo3DhwmnSpLnppptSp05922231axZ84477qgRpVq1alpG
oamWSZYsmZbRkh07drQ9T+LRGc09QRw7dkzxs6JoFVSjKI8//viMGTM2btzo
63qk1927d5ty0GvGjBlvipI1a1YVS/Uomq8SqxlFFVXFaJbJkSPHunXrzJdy
nRTXn40WIiMjR40a1axZs+nTp9/YTQIAAFfJN3CujV137dr1+eefK1Bv0qSJ
EgGlSH379l24cOH+/fu9S9ufFd9++umnCvUVu5YoUSJVqlQKXPWqgN9kByYL
MK9SqlSpm2++WcukSJHi3nvvde8IcBvA7ZYsXbq0W7du77///h9//GE3W+lD
HE8WfHzdyI8cOTJz5sxevXop/TTpw8MPPzxu3LjVq1cH++SrKOrXr6/CVI6Q
M2fOpEmTJkmSJEOGDJUrV7YlbMpfxVu0aFEto3xWu+zLL7/cu3dvPMqwXDaB
UlUcM2bME088YcpKr0o8lXxpfrDPiZasXbu2yqFs2bImJ1XWWaBAgeqXMrWx
QoUKKkktowqptMt8b7A7LnAd2EPf9u3b+/fv//zzz69Zs+ZGb1R8ZY6i5vX8
+fNTpkzp0KHDN998c/bsWV+f9qtsVHH76v/999+TJ0/u3bu3jlEPPPBA48aN
33rrLX31yZMntSXBm4Zi/dXmd505c2b58uU6M7Zr186cQV544YWvv/56x44d
13xwJ7e3ql7Hjh2rr5swYYLvaEkLFWLN/b/YtGlTeHi4QkSdqZctW+arz5o4
evToBx98oJP4fffdN2nSpMOHD9v16N9NcdTAgQPr1auns79i0fbt2yfCmmn/
MVVWH3/8cd26dRXwVKxYUXFjlSpVChYsWKxYMRXvsGHD9u3b5136z6tD2V9/
/aX577zzTlhYmGIkxe2K8xV0HThwQG8psNS7Sgc0RyF6ly5dsmXLptJWma9f
vz66G0vjLLOpOjv89ttvOooqMfnPf/6jwlGJKdJWJKkJHfFWrFjhO3pHRkaq
EFQa+tV33323CTibNWu2e/fufVH0liklTavcdA5SaKqKrWo5atSo48ePezy4
BDfCsWPHdGhdvHjxM888o8xdSdDw4cNv9EYBAIBrxkSYOuMrV2rTps39999/
5513KntSFpAuXbrcuXNXr169b9++to3dRrkKUBXB7tmzZ8SIEQoSFN8WLly4
f//+Jug18a1etcDBgwd/+eWXHj165MiRI2nSpOXKlVN04W6DWaeysx07dijq
GDp0qALmTJkytWjRQsGzd+m4lPEia7BscalYXn755dKlS5cvX15JlrIGvebK
lUvZkzKjWbNmKV/wLu0SqXIz+VTr1q2Va6iE69evr/JRkWpteksTe6OoPF9/
/fVbb71VuYN22auvvrp161Yv1NihcZy5qWHKlClPPvlkw4YNVTJVq1YtWrRo
2rRpVXk03bNnT/PTPKcmqOaoEFQgY8eOLVOmjOpYvnz5VN9MJTS1VNPKT5V8
bd68+c0331TqqsUKFSq0aNGiG/dzkaipqqvSLl++fNy4cc2bN8+fP78OCzoU
3OjtisdOnDixdu1aHST1768DbIoUKV577TXNDLYTxmLlwQum2n068JYtW/ah
hx4aMGDAJ5988t577zVq1Ej78Y033tAp0p65rubw655zdbatVatWgwYN9L3D
hg0bNGhQhw4ddI7WAVMV6ZoP4BwREfHrr7/+/PPPL7zwgn6UylPBgL6Ftn38
I6ZmBsd7tFfi/vzzz65du2bPnj1JkiSqz6pyXmAkqBkzZlSsWPGee+75/vvv
z5075wZLZv2KBEaPHq3YVYFQu3btEmHNtA3sI0eOVCxUu3ZtHZfmz5+v8ly1
apUCJM1JmTKlwk6F2YqI3KZ427NCBxmFRtoRWsPEiRPd7jfuiJE6+ingz5w5
sw6AkydP9gJjQsbBWN1XoxR1b9y48amnnmrcuLGO3ooGVVA6Bet3hYeHm7sS
mjVrtnTpUs+5u8Su58iRI8qYTNt+q1atvEsfTGyXPHv2rNag8FUxp4JzBfZe
YNgf4Bpy+zlYOnc//vjjderUqVmzprJ108Hpww8/vEHbCAAArg1ff7wzZ858
8cUXLVu2fPrppydNmrQoyrffftupU6cCBQooHFWu1KdPn99//9183I73Yl4V
1SsFUJxQpEgRJQX2XV+crzzi008/Ve4WFham/MvdEqUJCxYseP7555s0aVKj
Ro3SpUvfcsstyiwefvhhBd7XuXCuIXeIhm7dumXJkkVpwtdff630QaH+smXL
lH/lyJHDdFSbM2eOUgDv0udzmfU8+eST6dKlUwnfe++9ZrhOd/3mK/7+++/B
gwcrIzN3/ipgM/lLXO4d5HtwgxfVh0q5ZPPmzZ955hlVEtWKhQsXTpgwoUuX
Lrfeeqt+mqriyy+/vGXLFrMG9wll8sMPP1SqVEmLqY699957bj20OZdmHjp0
aPz48SqlrFmzahfEl7FhEU+5rQHexZqmf2TVZDNqdJUqVXRgVL2tUKHC7Nmz
b+S2xmc6v+hAcdddd4WHhxcrVix58uQ6eb322mvHjh3zrsU/uO94sm/fvpde
eklHpFatWq1evVpH4NOnT0dEROjArpNpvnz5unfvfvToUd9oFbHYDHN808o/
+eQTnWrvv/9+HRL37Nmjbzx58uT69evfeOONsmXLajNWrVp17tw53yWMWP9w
nVCeffbZO++8U+Wpk3uSKP3793efVHI160di496e6TltvwpBe/Xqpf9ZM8xL
tWrVVq5cGRzg5cUXX9QpW/9WCibd+e60YoN27dqlT5++TZs21+MnxT0qNJ1c
GjdurKCxVq1a9pKfCkf/uR999FHRokVVziVKlNDxxH2ugXdxB2m+9oX+2UuV
KmUa7b1L/81tNKVjXf369bXY9OnT3WcexZcBZ1SRevToUbhw4VdeecXcyGC2
X9MKRBWWq6CUjCgxMb2MXPqBBw8ebNiwoQpK5xrVt5DXju20jtKZM2d+9dVX
9+7dez1+G+D8JyoO0XFVZ/MnnnhCp/WOHTuaa1L02wcAIAFwg88lS5YoEaha
ter48eNPnjxpZirb2rp1qxKuQoUKKXAtXrz4O++889dffwXbihUDlylTRvGt
UoYRI0b4vsId03LHjh2NGjUKCwv74osvfCsZOHCgAo8HH3ywW7duij1uu+02
BR7xvW3fu9j4rAyoQIECN9988yOPPHL69GnzluartJ955hnFVylTpqxevbp2
hPuIgcu27dvFTCGrrLR+7Syt8L777lNO5y4ZN1Mt+zNNvdI2N2/eXDVh1KhR
pkVOC0RGRupXv/vuu6qEKsOCBQuqWpobSXw/6qeffqpcubJp21eNsvMvXPrY
CC9qzB/VrixZsiiNDa4H+JfY4+eKFSsqVqzYoEGDTp066SBQv3591VvVXvrt
x1rLli1r1qzZvn17ladOImYk5DfeeONate17TqZ89OjRV199NU+ePDpVbd++
3TcE/W+//ZY3b978+fNrmfPnz/sGwYvd9+rcqgqTK1eusWPH6uzsPgJSRzMd
+XPmzNmiRYsNGza4n/ICTx+4cjqJ1KhRQyWpKvrYY4+lSZMmadKk/fr1o20f
/5Tb99s3/9SpUz/++GPDhg1Vh/Ply6f/WcVCCpnslSn7AIumTZsqznz++eft
KJFeoPoppho5cmSRIkXatm2bOPtF61f/8MMPJoTOnTv3vHnzPKdDjmL4hx56
SCGiQql27dpt2bIleHxQUKQoS0VdtmzZCRMmuE3W9lBm28B79uxZsmRJewnA
jUjjOG3kmjVrVFA6sin9+e6779x3VZHGjBmTNm1aFWO2bNl69OhhK7B9FlhE
RITtt9+6dWuzgO8mCFtLdcZXFqAEx/TbB/49If8BVZ+///57peFK7YcNG6Z/
cJ3QP/jgg+u/eQAA4Npyw9Q+ffoods2ZM+ejjz5qn/Rklvn99987dOhgOlNV
qVJFgYHndL4yE5MmTTL99gsVKuS2lLqNDyYjOHr06PDhw/Pnz//FF1/4HlC1
evXqiRMnKvrduXPntGnT6tSpkwDa9m2PTRWLedyAUk73qYui32vyWQVa7733
3okTJ4Lria5t39egdP78eSUgpkVLO3TQoEF2wOc4y5fyK87MlSuXfkKbNm3M
tQmbeO7ateu5555LmTKlfl2lSpXGjRsXXNvs2bMrV66seFV17N133/W157sV
8syZM19++WWmTJk+/vhjX3UFri3f005Nfdu7d+/48eMXLFigI8DixYsfe+wx
HQEYk+dqzJkzZ/r06evXr1eRjho1yhxXr2HbvtuWqK8oUaKEDketWrXyddc0
D0xv3rx58uTJS5cu/ddffwU//k+/Vx544AGdRMLDw4PnRL379ttv68gZFham
SmWGd/N9Vyy+VydinfE3b96sH6tTmI6WKs+33nqLtn1cJTd0+eWXX2rXrt25
c+eFCxeqepsxeeywje5ZWwGhamCjRo0UKAbXaf+/1qxZ06lTp3feeee6/JS4
aP78+QqEdLi49dZbf/75Z1vUOhNFRES0bNkyRYoUKucWLVrovzvYtv/pp5+a
fvs6fCks961cOUKvXr1Gjhyp1ZobLW+//XbFZrb8Q3ZfjzvcgHDevHnmKbdp
06bVkdy9MGGumZr7QBVSVqxYMfhzDh8+7Gvbt2s2E5999pnO7ObJxYcOHXrw
wQeVRgUHzAT+Pe790ZbSQ9O2T799AAASmA4dOpj4Nm/evOPGjbtw6UAuH330
kelzni5dugEDBniBVlDF9koB9HGlAwr4vUsbbH///fe33nrLNLTKggULFCQr
RzOfdftsW0pM7rjjjgTQtu9dzGG/+eablClTqgxr1Kjhlp5++F9//ZU7d27z
qNz+/fubx2xZphhj6LfvXZpMqahNC4y+68UXX/y3f91V8iWDKg1ts8mkcuXK
ZVvd7ZKjR482gw6lTp365ZdfNm+55fnDDz+odmmBfPnyvf/++96l7WkqalXg
Hj16mO9SiqrEzTzZ2YureSgSDNucFWwBMJdQVe3Lly+vOnzDNjGec88jY8aM
0XFVB9VXXnnl2vbb96IeOmkO6VmzZjW3qvmGXdKe1eErVapUadOmHT9+/Nmz
Z6/y0uHixYtvu+22FClS2G6f5nzqXbw+PmfOnKpVq2qTnnvuObdX89WwT3XX
66hRo8wzXxiTB7Fje4O4B0D9K3Xt2rVmzZrTp0/ft29frVq1TNu++wBTu7DC
m+zZs+v/Wmf/X3/91YxhaFZrowizzrVr19rn8iQqJno/cuSIDjsDBw4cO3as
O36RzJs3T9G14kMdmnr37u3rQ27+5T/55BMzHHfZsmUnTZrkRpgyc+bMatWq
KSg1Cy9ZskRhbaNGjdwhy3wDfcc19hctX748Z86cZlx9M2C+69ChQ506dTLJ
Uf78+X2dmjRx+PDhxo0b693kyZO3a9fONzyUFnv88cd12Pzzzz/NHFX1LFmy
rF692tenBbi2LoS6d+a/UUzFGzJkiI60Og4MGzbshmwhAAC4VkyzgD37v/ji
i4psdaLPly+fcgGzjE2U5s6da1rakyZN+vrrr7vhqPm4gn+lAOZZurbfvk3i
fvnllzp16tx9993mI9u2batfv3758uWDgYeds2jRIqV4CaBt35bVnj173n//
/XfeeWfGjBm+zvYqcAX/Kny9zp492+ZEbmfyy7btexefQtu3b99bbrnFJCPK
f+2t03GZm+n369fP3HeQJ0+ejz76yG3b17vLli1TRTJ3QDz11FPepdcF9Prj
jz9WqFBBhVmgQAGVtn3X3L+gorvrrrsqV65sbyfX2sLCwsiwcN34LlfZC6CP
PvqoGW9/5syZN3L74jnb3D169GjTtn/N++17Fwfk0cqzZMkydepUdxl7ANdp
UWdVHax69+5tr9jG+mg8cuRIcxtC//79Dx8+7KtFWu2KFSvMabp58+Zr1671
/dir+e3ms9oAc2RmTB7Eju/5y7ZelShR4rPPPvv7779VsU0drlat2pIlSzyn
epuJdevW3XPPPcmSJTMPuVBV/OGHH7Zv3/7HH3/o4140R9fE6eTJkzrunTlz
xnNKXkenAQMGmNZsheXz5883Q/H7Ljd/+umnRYsW1TJlypSxg+0Yp06d+vzz
z/Pnz68Tltkvpolb3+XrqhH3C19buH//fgWKXbp06d69+/Tp071La6lCRB1O
VQ4pUqQoV65csKe922/f3MDlttjr3bp166ZMmXL37t1mtSo9rTOOX/hAQhLd
tbbhw4ebejt06NAbsV0AAODfMm/ePEW2zz777Hvvvffbb795TtcUL+pRuea+
1LRp0/bv39+XbXlR/fbLli2bNGnSIkWKKCkwM80CkZGR33//ffHixe+66y4b
Y0RERCgRCz5PzdBiCxcurF27dgJo2/ecBEe5j3muopvyqBAaN26cPHnyVKlS
tWjRwu1hdeVt+97Flu0jR4507txZS2pf1KxZc+7cuXaBONvC73a386K6p/bs
2VOplhKuNWvWeJf2P1EiX6NGDdNv//nnnw/+KC1gxtsvUKCA6bdvv8LcM1K6
dGnlaPbrVGLKv7w4380M8Zp7ic33RF0zf+fOnaZtv2LFijxL95r4+uuvTRNW
jx49rlXbvtlZOlbs3bu3bt26Zuiz6dOnmyOMewzRkpMmTdJRXcs0aNDAjMlw
Ndvw1FNPmZGf3377bfeQZevV0qVLzUlT5+IZM2Zck7Z9t51q5MiR6dOnNxtA
2z7+KV+ruyg4XLVqVaNGjXToW79+veYr/lEdTpIkia9t31LF02nd3Lunf66M
GTNWqVLlkUcead++fZ8+fUaPHq1TvKIss3CcjXn+bW6HB1+4rnJu2LBhihQp
wsPDFbfbsvK1xo8YMULBvGnbN/32zdrOnj27fPny1q1bax917NjRLOyO+GGu
FHgXT3NxcBf4wm9toQpBR9SDBw+aw5r9sXpr06ZN5opqpkyZXnzxxWBn+0OH
DikmN/32VSzur1aO89lnn5meNrt27TLLu3dCxcHCQULi67pva6+pfoMHD9Z/
sQ4F9NsHACAhMS3wCkT379+vENfXNUVv9evXL0OGDGbAycmTJ7tZwIWL4+2X
KlXKjMmjpMCGE0oENmzY0LlzZ322fv36vqjYC3QWsgsoQatVq5Y+lQDa9k1W
5fvhNsJfvHhx7ty5b775Zv3S1atXK0sKXum4EP2YPHZYBrO2qVOnVqhQwdxf
/Oabb5oWLS+a2zPjCF/JqM4cOXJEVVEJl28YWFXFIUOGZM+e3aScSuTNfPtc
M0389NNPt99+u7mBesCAAe5nt2zZouwsWbJkqsZuJadhCteH74Z9960//vjj
scceo23/mjAtWuPGjcuVK5cOrd27d7+GY/IYOpiYRpvMmTNPmzbNC9V0qXOl
aY3XkjqgXc1BWB+sVKlS0ij9+/fXEdKuym3bNze7pU6detSoUVf18y5lWgO+
+uor/RyepYvYcS9lmvPvjh077r///oYNG9rHuSr+NHW4Ro0ay5cvt/XK7Wqy
devWXr166d/BXDgzdFrPli1b0aJFa9eu3adPn4ULF/rGNkxsbMyp0GjlypU/
/PDDmDFjunXrVq9evZIlS953331TpkzRYcT3KRuHf/rpp4UKFVKpKuwMDw9v
2bLlI4880qpVK8Wfmp8kSRKVeceOHd3+Oe7AhnE22vSiGQU0ePS+EPWIZ6Uz
qmbJkycvUaKEMpFg/qIwVRXY1MCwsLDWrVubspKaNWuaKqpz0K5du9zHRgQ3
APg32DzdHS/LGDRokLkD+sMPP7xh2wcAAK4Ft2OPF3jinnsT3+bNmxWvKnBV
Xt+lS5f9+/cHH7w1YcKEsmXLKuBPnTp1tWrVTHCr1yZNmtx2220m+WrQoIF7
OSC6xlUzPX/+/ITRb9/9aaY8z5w5ozxrzpw5X3zxRZs2bapXr164cOFHH310
9erVwVHf7XQM/fbNMufOnVM+q0JOmjRpzpw5u3btumHDBneB4PWFOMLdvGCG
Zf+UP/744+mnn1aelSZNmvbt2+/duzf4i3788cfy5curELSM0n9TD/XatGlT
80gI1VLTb99zntL7r/9IJG7uoc/Xk8pMbN++/YknnjBt+4zJE2tuOY8ZM0ZH
Qv2/v/7669e2bV/rWb9+vXm+fJYsWaZNm+YevuyrGZPHtIPZx+nG2q233moO
X++8847pt+/7uuXLl4eHh5ts3fbEu8qf7PYvHTVqlLmcwbN0EQumR7e5b1FO
nz49ePDgqlWrfvnll2Y4HTl48KBt21+0aJH7cfdi1r59+6ZPn/7iiy8q4ClZ
smSmTJnMf5mROXNmzf/888/tahMVN4zUq/5VVc4dOnRo3ry5gnMVjmKhb7/9
VuGTWd733G3zatr2Takmi5I8ig4vSaJovqJWL273GwnJd9+cFzgv2yP51q1b
zV2iYWFh/fr1C/mpI0eOmH77pkxMY37KlClVVuZSrKmTu3fvvo4/Ebi8oUOH
mvH2eZYuAADxnRvfusGq74GAmlCQnz9/fkWq9erVmzNnjl2D+aBZcvLkyeXK
lTPBrZZUIqBp8+hY0wCiP/XxK9+8BQsWhIeHJ4C2fXu3sqH04dixY4899ljr
1q0feeSREiVKpE6dWinq3LlzzZLu2Kdug4k+YtpVihcv3rlz5zei9OjRo3v3
7m+++eZrr73WsGHDbNmyKZWoU6fO+PHjlThHl8LEC77hJkyvsHHjxhUoUEAl
Vr169RkzZtjRjfRqy+2nn34yz9I1VdHUQxVLihQpTKuXaT69gT8NCZj9F/M9
U8O9lBly9Kfff/+9Y8eOqq7ly5en377lHhVN31233290V0yMMWPG5MqVS//v
17Bt37Z1b9682RxMsmTJMn36dDsShdt/1YzJo32q48+ePXuupgUsMjKyZMmS
5hv79+8fERFhtsR+ryxbtsy0i7pt+17gEoBbXL5L/Jav9pol7bN0adtH7LiH
vqlTp1arVm3IkCHmf9PUwAMHDqgOK2isUaPGqlWr7GOhzEd8R9T9+/erzk+Y
MGHgwIGd/p+98w6voujCOCS0JBSp0kMJvSZ0kF5CB6mCiBg6gigoKEUQUXpT
QCkiKkRESFBBILRQQxEUkCod6Z0AIfDJfu9zz5N5JrM3MUICueH9/bHP3N25
s7tnz86cOTN75s03mzRpAusIrzzeOJRQoUKFr7/+Wn26+FxhCG3fvn0bN27c
vHkzrCPIqnXr1jAXx44du3fv3phCEcLs9/HxQcVVqlSpr7766sqVK7du3Tp/
/vyRI0cmTpwIwxXWlIq3b7nmLHS7XulV5aVLl8aPHw8JwOYcOXIkqlzdmLei
qlBkgzCRDdYmeitQ4Nu3b8tnp5B2q1atYH9CIWUtXUISD/TtE0IIIc8Vsjwf
rFNPT8/atWsHBQXduXPHijJu9U7B0qVLxfOA7sCUKVOkI3D58uWTJ09+8cUX
4mtt0KBB3J0bSca3b9n8HpGRkbi7rVu3rl+/fuXKle+//z76pBDyzJkzVUxm
Y2YvfqLrKvP28+bNi65Zp06d3njjjc6dOwcEBCDdrVu3jh07Io1nFB4ersZc
rEQ8Xf9fUTom0kD/FPfo5eVVtWrVhQsXqjixyrsltym+femRjRgxAl37q1ev
3rhx46+//vrmm29eeuklfd4+IfGLvK3GBzh6wv5tjkDffuzoEtOrR/t3Z4qE
8O2ri0GrJGOFWbNmlbV0jSA52KqYPOD8+fP6BT8GhQsXlqLGjx+PttXSBjUE
WUtXZorKV/b2MeKYbkel9SBvRh769smToLtGDx8+DHPl9ddfP3PmjOFQlQ82
K1WqJPH2LYdOxvSZJ/bDAIBdevHixW3btv34448TJ05s2LBhxowZU6VKVb9+
/bCwsKd6k4kGFQpStTgiRkh42rRpxYsXz5kzJ1ocWebAso2Qzpkzp2DBgngQ
pUqVUvWbekYfffQRqoKuXbu67osfk2EsEoA6zZgxA52aunXrjh49GvWtnllP
Qxoybx/NwWuvvWZFb54OHjwonz88+XdbhMQv9O0TQgghSQb9Q1pl5eo77927
t3v37p49e/r6+nbs2DE4OFifAWV4FXAU2WAn+Pj4fPnll5Y2LfD27dvoJmTI
kAFGctwvLyn59gVjfpT0VSMjI9G3hZAzZ86cP3/+Tz75JDw8XM+g6NGjR7p0
6dzc3Jo3b37o0CHZqT841Y+zz7d0xf6XLi5ICT3Qt956CzrWpk2b77//XkLp
Gh8myM/Vq1eXL18eqpg7d+7JkyfrixFApQMDAzNlyuTn5/e074c8NyjXrvHe
6ev02WdL0rcfEzJd3/BTWZoMjcn8igTy7UshBw8eFN9+lixZJCaP3SseFBTk
4eEhzva///7bmDn/n0DJxYoVk5746NGjb9y4YS9k586dL730knwlN3PmTL11
0K/c0r4OgwyV0IxFMPUI5xZ9+yQ+UCNxrVu3hsEza9assLCwXbt2QXV37Njx
22+/rVy5sly5clINzp8/HzuRQcbx5TM9tSi5MSClft69exfW4+uvvw5dzZkz
56RJk57FjT5L7IPLRr2Euqhdu3aol1B3DR069NSpU/acs2fPLly4MPKUKFFi
6dKleuHY4jHhAUlMHpdDtSYx7b9w4cLnn39etmzZli1bQpfEJne6bJblWDAX
2VArpkqVqnPnzrrBKZmhimnTpmVMHpLYoG+fEEIISZIY9qr09/fs2dOjRw/0
s4YPH37w4EGJyRlTZ0FfSxedAt2lgC06aDVq1FDx9uNCUvLt6z0Cu+PdckT1
RCdU3NHfffedLmr5Lx6HHm//2LFjlm10RhJGqFWnp3MhHjlWed63b9+AAQPQ
1cIW6du3b8eUH7cvvn35wGHixIlW9KD60OTatWujW/rUboE8V0BjX3311eYO
JPRBSwetHOiqazii6duPieDg4JdffrmFAyQgRpWYNWtWLH9MCN++Gj9FRSRe
dDVvX0fGHZYtW+bl5SVDAOfPn4/pk4044uPjI/P2R48erdbS1av6rVu36jF5
7NPv5eLRxEAhoZkvO0AaigqRtmnTZuHChTF9VkDfPolHihUrliFDhoIFCxYo
UMDb2zt//vxIo8nGNlWqVBKxPHv27NhTqFChRYsWWVEVJowlmKZqnolhXEka
NgOq0MqVK8Nkatu27TO6xUTB/xxIWk3IsRzrN3l4eIjFvnz5crvFCDNe5u3D
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
ISTh0L2mb7zxhiwtmi1btsDAQNmpXMdfffVVvnz5cNTT03PUqFHGUcvh25eY
PIUKFbLP2z969OjQoUNHjhyJ9P379zdt2lS5cuU2bdroMVL0q8I2NDS0Zs2a
KNDVffsqbA6kmiFDBjc3t1q1auGnWkQY22PHjklYHtzvmDFjZLK6Qc+ePb28
vCQmz8mTJ/VDKCQoKAhPcPv27fh548aN4cOH+/n5LVq0yNJkmzjn7RuiAIMG
DRJVzJgx48yZM42xicWLF8tXJGnSpBk4cKClDV5InjVr1uDeJd7+hAkTrOiK
evbs2REjRgwYMMByuPr3799fqVKlOnXquG6sJ+IqGAqm5vDLfrzU3bt3h96W
K1du1apVz+YSXR99VRFUudmzZ5eYPPHl29crCiPiWVhYWL169XC6Fi1aSLz9
RFjfEkIIIYQQQgghJMmgfBQPHz4cMmRIxowZkyVLVqBAgR9//FGP5WI5PO21
a9d2c3MTP4llmw2ufPsyb98of/v27S+99FL9+vXl5+nTp5s2bYo9ulNX+Uxk
m2R8+4rr168HBgbOnz9/586dRmCHuXPnSrydrFmz4sZlnVw5pBK9e/dGnuTJ
kzdo0AACtKK82SK3jz/+OFeuXIsXL5b88+bNK1OmDLZGIYkWfdzh008/zZQp
E5TN29sbkjFEsWPHjiZNmkBWyNCnTx97OSEhIbKWLv4+efJk2S8jCODQoUPQ
5HLlyknmy5cvt2/fvlixYlb0CEiExDuGb1/XNxw6fvx4165d8YL7+fmtXr36
qV9dkkK87gsWLHjxxRchUrRu8TtvXx+5lnOBsLAwf39/1EtqLd3EX/ESQggh
hBBCCCEkCfDo0aOdO3dOmzbtk08+mTdvngpjLvzzzz+LFy+WkDteXl7jxo3T
5yuK13TZsmW+vr7IULBgwS+//NKK8lxJPPmgoCDsr1u3rvrLvXv3ZHa6mrat
rkS2oaGhSSkmjxUlChVpXxEZGdmoUaOUKVOmSJGiW7duN2/eVFNPlTRAz549
PTw8IJCGDRvKvH0lt6tXr8oqvcHBwbLnroMHDx7o2RKn71p3f4le/f7771Ch
0aNHf/XVV0eOHLGiz5VdsWKFuO49PT0HDRqk/qvubu3atZIhb968kydP1suP
iIgICQkpVKiQn5+f+p4CO2/fvu0SkYtI0kAfrlKKjZe6a9eubm5uqEjp248X
Fi1alCNHDnd392HDhsWjb1/35+v7w8LC6tevj5qnWbNmjMlDCCGEEEIIIYSQ
BMVYPDQyMvLWrVvXrl27c+eOBNJX4fTv378/atSodOnSubu7V6tWTcWC1j0b
S5cuLVGihMTkmTp1Ksq5efPm1atXL168uHHjxs6dO7u5ufn7+9sXfjWuR5UZ
GhpavXr1JDBvX9x36u7UtwmyE0Jeu3Zt1qxZIduAgIATJ07oqxjoDufevXt7
eHhAIPXr1//tt9/wsCDhGzdunDp1av78+YULF8ahJUuWGA58V1wi9uHDh7g1
qFB4eLhx5VDFadOmyQcmfn5+uF8rakRACS0kJETW0i1QoMCIESMgIughtlDF
7du39+vXD6L29fW1oovXUD9CEgKjHrA0lTt58qQERmO8/SdEVXoSkwdNTzzG
5LGiD83oibCwsAYNGiRPnlzi7bMyIYQQQgghhBBCSEJjdyPbPRJ//PFHu3bt
kidPniFDhsGDB1+8eNGK7hdFeunSpWXKlEEeDw+PsmXLvvzyyy0dNGzY0MfH
R1aJRVrcsNgqF7Q+NV1PbN68uWbNmklp3r665fv37wcHB0NikydPrlu3buHC
hYsUKTJo0KBjx47pH0QYwZx79eqVLl06idvTpEkTyLZZs2YtWrSoUqVK+vTp
ISh3d/cffvjBcshQrVysinqKN/qY6IMaOkpnkD506FBAQEDKlClxy3379j17
9qw985o1aypVqgRBpUqVCqooeghZ+fv7Fy9eXCL5lytXzhhwMWL+E5Kg2MeV
jh8/3q1bN7zI5cuXp2//SVDVyPfff58zZ0687wkRk0dvsIRt27ZJTB5Uy7/9
9ht9+4QQQgghhBBCCEk47HPm9Z/q6IMHD6ZPn54jRw4vL69mzZpt3rzZnh8E
BQWVLl06efLkbm5umTNnzqOBn+LbV/H2nZZgRQ+8v3HjxiQWb1+Ng4SHh3dw
0KpVq7Jly6ZJk+bjjz+GYCWEjqX5i/T/9uzZM3369OKyzpUrV+7cub0dIJE2
bVp3d3ccCg4Odrpep5A4HdfGbdonNiuwZ/78+dAoDw8P6JKKWyL/UvnXrFkj
8/ahihkzZoR88uXLB0GJKkLaat6+fa4+3XEkgbBP9jYOHT9+vEePHtBbxuR5
EvSXesGCBWi50CrFY0wepyXIzu3bt/v7++MJNm/enPH2CSGEEEIIIYQQkqA8
fPhQ/6lcIvqM+n/++Sc0NLR+/fqenp5NmzZdt27d7du3LWfT7IOCgsqUKZMs
WbJ8+fJNmzYN2S5duhQeHn7q1Klvv/22du3aONSoUaO4+zpw3ho1aiQB377I
Wfz2IltsDx48eODAgUOHDu3cuXPKlCmVK1euW7fuqFGjrl+/ruSvFiyQnz17
9pT1duvUqQOBSEAegBKGDRuWPXt2d3f3pUuXulxsGadBhNR+8djLogxhYWEt
WrRIkyaNv7//L7/8cuvWLfUXfShkzZo1Em8/V65cY8eOvXr1KnJCUOfPn//+
++8bNmwIQZUtW/bp3SF5nlD1qjE4ZSx+Ydle0hMnTsi8fV9f31WrViX8lboG
ejulV25qvz4kavw3MDAwR44cqApi8e3rz0Xf6u2gfbDVKdu3b2/QoAFOp9bS
JYQQQgghhBBCCElQYplN+uDBgw0bNnTs2LFixYr9+vVD+u7du3oG3U+1dOlS
mbfv4+Mza9Ys3UF9586dr7/+Onv27LVr14771PEk49u3osffEJeUciJBPtev
Xx80aJCXl1eePHn69+8vPij79PtevXqlTZtWX0tXcfr06datW6OExYsXWy7l
2Fc4VQx9MYht27YFBARAFfv06bN8+XIZY9JRdx0SEiK+fchzwoQJljYCFRER
sWjRIqiin59fAt4Meb6BmlnRXcSiflBjK3qVq7+q9O3Hwv379y1ntcSjqBWx
rcf17VvRH4RTx75+KBbo2yeEEEIIIYQQQsjTJKZwKJbDDbVhw4b27dtXq1Zt
zJgxJ06cEIeVFUO8lKVLl5YqVUrW0p0zZ44V3ROyc+fO6tWrN2rUKO7XlpR8
+4ZslWRU4uzZs7ly5cLNZsmSZcaMGffu3bMHiundu7fM22/YsOGpU6eM8j/6
6KMcOXIsW7bMss2ET/wYk5n1SPgAqrhr165u3bpVrFhx5MiRhw4dEkefIFP6
dXEp3763t/ekSZOMb0wOHjxYv379cuXKPcX7I88RDx8+rFu3rp+fXzkH5aPA
HijwtWvXYvojfftOwds9b948yEREilfbLwrIc/z48fo6HYbrPi6+fVU/qFoI
DwJnwbnkjNji8cmpGzRoEMul0rdPCCGEEEIIIYSQp4/h7hDP8KZNm3r16tWs
WbMpU6acOXNGDj18+DAiIsIeJMGKmrefLFkymbeve1PBn3/+GRAQ0LNnz+dz
3r5CROfU916kSBE3Nzfcb8mSJS9duqQfEqHhcXh6eiKDv7+/mrev5Dxv3rx6
9epJmG5XnLdvxbCOM+59x44d/fr1a9Kkybhx444dOyb7IcPw8HAZbzLkqfv2
J0+erBdlORx33bt379ChQ8LeDHmOyZAhA9RPFhlJnjy5LN8sK2Lg1Y5pKjh9
+zHx6aefQnqyXLgSptSWffv21T3zj+HbN0AVjeZGPTU5i4AHmjt37lj+S98+
IYQQQgghhBBCnjL6rGY1AXLjxo3du3fv0aPHihUrLl++rFz0+/fvnz59ekhI
iPxXd6dIvP3kyZMb8/ZViINr165dv3497heWZHz7Ksb+xYsXP/jgg5EjR966
dUv/9kFkW7BgweRRnD9/Xg7peXr16uV03r7kuXPnzo0bN/RvK57aDcYX9lgl
uLVdu3b17dv3jTfeWLp0qYjlHwfHjx//8ssvf/nlF3s5yrefN2/eSZMmyXiK
lPnQQXh4eCzTpwl5QiZPnjxu3LixY8diO3HixAkTJiAxZswYaKO+SITxL/r2
Y2L79u3jx48f5wDChEg//fRTJLBz3bp1T+jbV3WsGrNG5YAnJeXjXHiOSMhD
RJ0T+3XSt08IIYQQQgghhJCng1P378OHD7ds2dK9e/c+ffps2rRJn6KP9OzZ
s319fceOHWv/rz5vX3z7+inUcofGAr6xkGR8+5bDfQQJdOrUKWPGjFmyZOnf
v78xcRfbQoUKqVmp586ds2zz2PV4+ydOnFADLnJUX3nWadCkRIsercjSXG2Q
2NatW99+++2uXbuuX79en5yPdGBgIFRxyJAhynWvjuq+/YkTJ1quOdJBXBc9
/LsRMMrQdh369mNCrxxiCr/jlDjG5NFrS/sYgTr6r7HO6NsnhBBCCCGEEELI
U0b3Nd25c2f79u39+vXr27fv5s2bZYK0TOYHFy5cGDJkSNWqVX/88UfL5uhQ
8fYLFiyoYvIox3UsHq2YSEq+fRAeHi4Rddzc3AoUKGB4/8S3L479ChUqXLly
xbKF5e/Zs6eat6+vpSvT0a3o896f6r3FB4ZL7d69e3v27Bk8eDDueu3atWpI
SKLrX7t2bdy4cRUrVpw3b57sj923L3+0u1gJiXfsn59YUXob+8gmffsxYV9Y
3NICvhmjnDpxjMljHwk1VgCJY3VB3z4hhBBCCCGEEEKeGro39ZFjxdItW7Z0
6dKlfv36H3/88bJly3755ZcVK1Zgu3z5cmznzZtXp04df39/ZLP7ryQmj8zb
nz17tmWbiR33GftCUvLtQxT3798vUaIEbidjxowzZswwMixZsuSFF17AUS8v
rylTpuBZ2N1Zai1dI96+Pm4SdzdUYkO/i3v37u3evbtnz5716tUbPnx4cHCw
aOBPP/0EhUQaqti8efOaNWtKRA7jlu1r6apDooQu9FEDcV1iehnlIyZ9dE+g
b98pelvjNPCO0z3Cf4q3H8sYgSL2qoO+fUIIIYQQQgghhDw1DBfT5s2bX3nl
lSxZsuTKlatgwYJFihQpXLiwj49PYQdI5M2bF0eRZ//+/VaUl+Ps2bM7d+4M
CwsbN25c8eLFkyVLli9fvg8++GDXrl07duzYu3fvtWvX7OFWnIIrOXXqVGho
6KZNm7CdOnWqn58fCqxVq9Z33323bt06XOH69euvXLniWr5Z8SdD2hMnTkyT
Jg1kGxIScunSJbmL8PBwyKpatWru7u4ZMmQYPHjw6dOnLc0HtWfPnt9++w15
WrRokS5dOgikcuXKy5Ytw05I+Pjx43fv3pWc+rcSLoSKJqRuGbf2+uuvQ9ly
5sxZoEABqJ9ooyQKOMiWLVvTpk2R04q68b///hs/oYozZ84sWrQoBAVN7t+/
/7Zt2yDDP/74Q1Yodt3hD+LSGOtoixJevXp1g4MtW7YsWrSoSZMm0Fso+fjx
47Fz48aNqAn/+usvPeIWiR1UApCbNBYffvhhxowZ3dzcOnfu/PPPP2P/Jgey
LsnjVQXGR1KoruUxoYVCzVOlSpXkyZNXr159zpw50pDhOV64cEEvgc+REEII
IYQQQggh8YKaCfm///1v8ODB6dOnl7AwyZMnd3NzM9JIpE2bdsiQIXfv3lVT
8T///PNy5cpVqFChQIECadKkQTYPD488efL4+fmVL1++devWy5cvV6f41+uZ
Pn161apVK1WqhG3JkiUzZMiAk2bNmrVMmTJVqlTBTmxdcUZrZGQktufPn+/X
r5+3t7evry8k8/777w8aNKh///746enpmT17duz5+++/jf++9NJLZcuWRZ5s
2bLJg0iXLh2Eg50VK1Z87733zp07Z48576LuIwlPNG7cOPmKQbQOJNMQIUBi
b7/9tqzOLDe+YMECqCIUD6oIJUQed3d3qCKkhJ2NGzdeunRpXJSQkIRGfT/y
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
/vz5AwMDdfe+oOaSoU/k4eGB3gq6YDKDyOlnwvg5fPhwFIiceJRbt25N5H0Q
p1/cX79+fe7cuehm1qhR4+WXX4as0PdMnz49JABxBQQEQEnUvx5py+wisW7d
ugoVKsiUrQkTJuiBfB9FfSGCHuv8+fPlo34UiI6/9dz068kzwZilr8KURUZG
Hj9+fPny5dOmTStfvrxMa1y5cuWzvFZXBoK9cePGxo0bf/nll1atWnl7e6Mm
HDJkyK1bt5xGiX8MDBcx2iy0UKhDBg0ahBYzVapUqLL27NnzhGeJ6aS4u1Gj
RhUoUAANASrJ9evXoyXt378/mkvUk6tXr5YlbOIR1MZr1qz56aefGjdujEoV
zfcnn3wioa2txOQnv3v3LkwUvErjx48vU6YMGosqVapAE/SH5UKWw/ODMc3j
ypUr7733HmpC8cBnzpwZD9TIqcIMIv+IESNgG+jxVfD2GWMBVtQbBEu1UaNG
Kn+KFCnwHp09e9a1Zow8NvqUHqQ7d+6M16R79+54TS5fvnz16lVs165dW7Ro
UVhQMEphJoWHhz/2qChq3cWLFxcpUgTPMUeOHAMHDjx48KDxPuoBczZs2ICn
I88RHRD7uXbt2gWzVr68GDp0qH1SkLrIffv2oa+BnDAC9XKU2rz66qsSwwfN
xMWLF40SlD58/vnnqGxljGnmzJkqxCghhBBCCCGJBD2kCRLov0+bNg3m9Kef
frpz587Tp0+fOXPmt99+GzNmDLrJMgm8V69eauKKDAooK3fp0qUlS5ZUvn37
x7ny8/bt28uWLcubN2/u3LklSowg+RcuXNi6dWucztvbG3mkc9e2bds///xT
z/ZUxBP/REZGvvLKK15eXr17996+fTt6E5cuXbp27VpoaChuFn0Z9CC+//77
iIiIf6KWipM/yk/8K23atOgi1alT5++//zYiJOg905EjR+JhQXQ1atTAiWTn
o6hQ/IkTvbt048aNuXPnNm3adNiwYWFhYacd/P777xMnTvTz80OXE4rRrVs3
7NFLUBJYvXp15cqVcfvQsalTp8Z0ujt37qxbtw69V3TZ5syZY/TsCEkIDP/D
kSNHUONVrVoVNR7U9cUXX4TelitXDjr8DC/Spfnwww/RiqEZQqWKGtXdAWoS
w7f/2Og1LdIrVqxo1aoVHlmePHlwusyZM6OKbtGixe7duxOiqUKt9dFHH+FE
7du3R+uMn7LGDdqRGTNmlC1btlGjRmvXrlXRs5+cAQMGoEwfH5/8DiSy2Sef
fCJrTcbXWZ4cGC1t2rSpUqUKhJMvX74sWbLIN1mo5O2eyUR15cSKPrtj0KBB
MnNb3O9ooCdNmhTLF08weNKlS6fHhJSRNT2z/u7DxFq+fDleVSnf09OzY8eO
d+/etZL60I8xNX3Tpk3S4jRv3lzm56uFhsePHy+fQuBVgm1/7969uLwyRsAf
1EI7duxA9SgzKN57772jR4/ac+qXhA4Cug/yvQaqHcs29wNWX82aNXEUL/j7
77/v9L7U2d99911UAuLbtw9E4qGnSpUKOvDyyy/DGlf79dW+kMA1t2zZUhQM
gtIt6n8VCCGEEEIIIU8TsVFDQkJq1apVuXLlZcuWSTdHlm29fv36jBkzSpYs
CRs4a9asAwcOPHXqlOFjl9lQMgSg5u3rheucOHHi9ddfz5079zfffGNFN/In
T55coUKFPn36IDF69GikUeCrr766f/9++wW7ENKzWLt2rfRY0ZXQ11uEkNE5
lZ4UekArVqxQUyItbcpZz549JU/dunXPnz9vRXdTPNKWnBs2bFj27NnFtx8W
Fma5QoBQvQ++ZcuWhg0b+vn5LViwQFTRcvQ3r1y5gj1QM/TXXnjhhd69ex8+
fNiyxWiCJssnJN7e3hMnTtQL12fvg0uXLkGqKGrOnDmc1UmeAvo7C73dunVr
6dKlO3ToMGHChHHjxrVr1w56C81ftWrVs75SV6V9+/YvvfTShx9+OGnSpBEj
RkiViyrx9u3bdr/uY1eJqs758ssvK1Wq1L17d1Q1aLOqVKmifPtPfi8GuNpR
o0blcLBhwwb9mzvLEainW7du6dKlq1ev3ubNm+PrpPJxGVoo3KBMkIY8x4wZ
Iwu1x9dZnhy8Mr6+vp06dcKrNHbs2GbNmuE6q1atGhoa+pxMyU782B+E+pJO
fiLx1ltvZcqUSZZGFfATzzSWYqGW4npV7v3ffvvNPgdbb+Jv3LjRunVrCcku
dpfYAC49e+Rf0deewBaGvSxIBMPe+GIUZn/RokVlIA/v/s2bN2V/7MLRy0fO
Q4cOwXqHfQUJN23a9OjRo2p6iX0NlEdRi878+eefjRo1wqmbNGliOPax3bNn
T82aNXE0S5YsQ4YMsTTTV0rDpV67ds2KitIPmxltgRXdtJOcat5+mzZtLly4
YAwDyWQP2QOdlLtA7Td9+nQlCiNemdpvXxjlX0VHCCGEEELIY2PEiHjnnXdg
Bnt6esKuDgsLU9YpgJ0/cODAFA5g8P/www+WbUJUUFBQ6dKlYf36+PhIL0mf
WI7tLQeWo1f1zTff5MuXb/bs2bptD9sYBvaRI0fOnDmDM65evfqll16CDf/K
K6+oefuuiFqqeMqUKTJPDB1J9UW55bh9SEaF0x89ejT6WfbwEd27d0+bNi3y
1K1b9+zZs8bqA/qzGD58uOHbtxJxz8L+7fyoUaNwp6lTp27YsKEKTiISu337
NnpqOCqjSNA0S7t30bR169aVL18eGfLmzTthwgRDPgCFoAOI/ZGRkUuXLs2R
I8ekSZPo1ScJijFaZzk0/+7du/v27Tt+/PjVq1cPHjzYtWtXvOCMyfMkHDhw
4K+//jp//jwq1fnz56MmRCMybNgwcU89eTVo+G0uX758+PDh06dPo13bsGFD
/fr1cbqWLVvG+7x9aUf8/f3TpEmDs6gZsPrnXdOnT0fDmi1btsDAQP0rrSep
3ND4Hjt2TOQ5a9Ys8e1/+umnhjPwmbcvV65cgfFw8uTJa9eu7dmzp0OHDrjO
SpUqrV+//tleGNFRlo/6UE79vHfvXr9+/TJnzox3dsyYMWIOxYtv3w5O+uuv
v4rDFidyd3evWLHipUuX4vVeEy8inODg4CxZskACderUgfDVUbzLaJIKFiwo
jwD2JAxyS3N6x1KyXh1BwugOoAQYt2PHjpWPieztoDHkiqoGZ8QTUWvp6nUL
6lWYtSgTeoJa3Tg7KnkoQ/v27eVEaFWrVatWokQJFb5Sv3iZt4+iWrdurR69
08GdQYMGiYJBIHZV1MP4G18uqHTSHjMihBBCCCGJBOU6ls4RrH09Wo5k+Prr
ryVOvpeX1yeffKL7S4WlS5eKbx/ZxOOqg073u+++O2TIEPnL1q1bK1eu3Lx5
c/0CJKHs5E2bNsn8HFf37VuOjiTuKygoKE2aNBJUx3AQHT16NHfu3DKLDL1a
tcqYHiu+T58+Hh4eyFO7du2LFy/GNM/8kSP8LDo+ruLbN8Advf/++9KNQqf+
888/NxZTW7ZsWdGiRWXJvHfeecf4OzKsXbtW5u2jRzllyhS1X2R+5syZwYMH
v/XWW5bjuRw4cACd+lq1aj2t+yPPO3o3Xx/YOnHiREBAAPTW19eX8/bjhcDA
wBw5ckCkQ4cOjS/fvoGKX43t9u3b/f39JXRDQszb/+mnn6QVHjly5OXLl+0+
pdDQUBkQ79GjB9TJmNj/5P4lmAESKE9i8uiHEkP7okJhw97o3Lkz5FClShX6
9hMnuqNVElAqaJe3t/fChQv37dsXj/P2nRIeHo52Xx9B+O677/R3KumhDGwR
zp07d1auXPnzzz9D2kpckmH27NnypmfPnn3Dhg16rJtYytePwkaFISfO8yJF
iixevFgfyrFsTn51ClQsv/zyC4w3Yy1dqb5Qr1avXl1ihKJW18M0oeTz58/j
X3iUcqLIyEiYzagz9WEF9XVGx44dYZCjqJYtW4pv394ui8T69euHjg8MTljg
sEit6DXq6dOn586diw5UmzZtOnTo8N5776EDBcvzyy+/NG6ZEEIIIYSQhEDv
6cN8hR0Okxg9o8KFCys7XOXctm1b/fr1pRMEi1o/JIZrUFCQrExasGDBWbNm
6TN8kGH79u1Vq1Zt0KCB/OvUqVPoejdu3FifTa1b+PgZGhoq83Nc3bevJIme
1HIHBw8eVEflfj/77DOZi45HAFE77RH06tUL/Qs8oLp16545c0YfENGljUc5
cuTInDlzuopv31gyAOlx48ZlyZIFd5o3b96vv/5aZZMEuu3oi0mX/M0337R/
+Lx27dry5cvj797e3ihK1yts9+/fX6dOnbJly8rprly50qNHj2rVqkmQVc7e
JwmN8Saqn8ePH+/atSv01s/Pj/H2nwTlvVmwYEGOHDkg0uHDh8eXb19fmMNw
T+3YsUN8+y1atJDVQOKx1sW55s2bJxX7p59+qmbS6uHd0HaIb79du3Yq5PgT
XoaqOVH+V199pWLyJDbfvu5+PHz4cKdOnSQmD337iQrDkausUDym4sWLQ70X
LVoESwmVYTz69vWgKOrUt2/frlevnvwL5sQLL7ygZgIkbXQ5PHjwAC+yMdUk
IiKiUaNGHh4eKVKk6Nu3L2wky/adb0yozyf/+OOPJk2aiJ3WsGHDI0eOGBcQ
S2kHDhwICAjo37+/fQF6FCvx9jNmzKji7QuoCVEDFytWDNaj2ol7ke+FjdMh
gZ5F6tSpoTAyb1+fSKPnP3r0KKpTiAL3gpx79+6VewRQocDAwNdeew3GOZRn
+vTpo0aNQtcGV5g/f37cgnHGWORGCCGEEELIY2NM/N6/f/+3334L63TJkiUS
zt3SnPPfffedzBhED0j6WXrccrBs2TKJt49ss2fPlp1imaOntnDhQti66Emp
v9y9e1dmpxveVJVh8+bNtWrVSgK+fUubeoSeVGRkpLEMMUTh7+8P2Xp6eqIn
FR4eLvt1p4rl8O2L/7927drqATll+PDh8qm1S/j2BV2dDh06BH0TVTx58qQ+
CIVswcHBommQhkzcEre8yrZmzRpZqSFPnjz6WrrICdmuWLHCx8cHGayoRwD5
Q0WNjj8hCY2hbCdOnOjWrRvqAV9fX8bkiRcCAwPFGZ5w8/YVqExQ2TZo0EAm
gv7+++/xPlb42muvpUqVChry6aefSkxpQVV9u3btkkYTVdxPP/1kNPFPTiKf
ty/gfmXePq6zcuXK9O0nKvSXQi1aimcEvYWJCBNU7B88wXiPyWN4sHEiWKQS
Uh5/SZEiRZUqVeL9fhMbyi8tPw3bSbarVq2SZUr69Olz+vRpsVeNPDGhsi1f
vlwKSZkyZadOnaS60E9t/6kKv3Xr1h9//CGrKVnRZ7ns3r1bfPuZM2d+6623
Tp06hSs8c+YMWs9Nmzb169cPh3DemMIH6Z52tZauxNs3TiRpdFI+++wzaGbq
1Kll2lJERIQqJDQ0tEWLFk2aNAkKCkKFDEvyypUr27Zte+ONN7y8vLp27WoP
QEQIIYQQQki8Y8xnhil7586dmzdv3rt3T9n/cjQyMnLUqFHp06dHP6h69eoy
p1S3WpGWmDzIIKE1xd7++++/jx079ssvv7Rt29bd3R09KTXp0ZjNoiIbqOtJ
MvP2BaMXo3c60JOSyZD9+/c/f/78Qwf2P/bu3VtC+lStWnXnzp0nT5485UB1
bc5E8c4777iQb9+4MNE99JKuX7+OreHYh2SmTZsmYXLLlSuHLpVli2sK/RTf
fs6cOYcOHSryOXv2LFQRog4ICEBvDrqqynxaN0qea5y6NXSHyfHjx8W3z7V0
44uFCxfKvP14jLevHObKfaQ8Qvq8fX3afLyAqq9UqVIpU6YU3/6VK1eMuhHb
bdu2ieMrderUX375ZUyBoP8TSj/BvHnzEm28ff2FOnLkyGuvvcaYPIkNo6W2
HFq9detWWJXQ2I8++ggmqOWwBmHPJFBMHqXPsC7q1q2r/oJtgQIFrESgyQmH
vcYQYOF///3333333ZgxY2Aa5cqVq0SJEh9++CGsJmWZC3EJLyPVDgoUqaZI
kQIvo9OLcXph6kT6HlWV7dq1S/oF4mxv3LhxQwfoXOCaZZgmW7Zsxh/VdBr9
XmQtXfylSZMmu3fvhu197tw51Kvotlx0gH7HzJkzIZAMGTJUrlz5s88+Qx51
YdhCRDjUq1cvWJiq/4IO1IIFCwoVKtS9e3ddaDQ1CSGEEEJIQmNYnvauDeze
Fi1auLu7w45VwQ0MSzU4OFhi8sDkhjEMk9vf3x9b+ToV/8Uh7JHM8l+12J/e
X1AWcmhoaFKKty8J6WLA+A8MDFy4cCG6BmXKlMmRIwd6JZ988gn6FEYsI/1Z
9O7dW+Lto+dSp06dBg0aNG3aVPo1Im30UOQnuhUS5tQlfPsKfeq+is+jPGny
E5rQsWNH9BbTpk07cOBA5eDSe6wSkwe37+npWaxYsUaNGkEmEBc68j4+PtKR
9/PzMxTYGHIi5OmgVO7kyZPdu3fnWrrxSEL49p3yyBaTJ959+zhF8eLFxYE5
bty4q1evyn69ydiyZYs4vsAXX3yhX9sT+vYlkZh9+zqHDx9GM4Hnznn7iQ1d
T9DKh4SEwJiBudK2bVvd/jl+/LgYjfHi27crJ47eunWrdu3abg7kvzAP4vVe
EzWPtFiON27c6Ny5c+vWrZs1a1ahQgUIc/To0du2bYuMjNTjj/3rO66brDBx
Yaclc6whhcIfRUXvNAw2p+idEWNtL3RG8NRQLHTmxRdfrFixoq+vL1pMbPH4
YBbidBJv/1H0YJWWbTRBLEl57jAm33vvvcGDB7///vtII4EtpFGwYMHChQv3
7dt348aN6otaBWxyKE+rVq327t2rG6srVqyoWrVqt27dJM6/Rcc+IYQQQgh5
KhizxCWhrPSIiIhJkybBivbw8Hj11VeVr9iYAyPx9tGxSp06df78+WFslytX
DtuyZcvmzZsXJjcO1a9fX50lpoW0VGLTpk1JZt7+o+jBGdCTatOmTbt27Vq2
bFm+fPk0adKMGzduy5YtarDDHirWcsTk8fT0hEDSp08PUUO8+K/0a5CWRJky
ZZDOkSOH9ItdxbevdxvVPFh9yEm2UMWvvvoqe/bsXl5e6E9t2LDBsukPWLdu
nfj20XHz9vaWfh96rBBOvnz5JK4RpGTZxg6U/AlJOJy+idh57NixN954IxnX
0n1idP+SxOQZMmRIvPv29Rn7lrOYPPF1IkXBggXd3Nxk3r6x+KMktm3bJjF5
wIwZM6Td0W/5MVxM+t8Tc0we/QLEtw9Zcd5+IkQNo69evRo2IWwVGJbiHbWi
DEtUhvE+b99YJkNi8qizQFtguCbIDScalISNBDhz5sz58+fPnj179OhRWFnl
HAwePBj1jD1STVzOoubtp0yZUnz7cjSWSURKMQyjTnfv79mzR/oFmTNnHjhw
4NWrV285uHLlSkhICBQJzzFbtmxGxahPtlfnQmaJyVO0aFEUNcLB8OHDR40a
hQS2SH/44Yfbt2+/d++eXpqS3gcffABrHPZ2//7916xZc+jQIWllzp07t2zZ
stDQ0Dg+F0IIIYQQQp4E3Uw1ZkdLBvx88OABDOaaNWt6eXm1b98exmpkZKRh
k4sDAaZs6dKlkznW0p08efJNB9evX0d/AUZ+48aNlW/fmLilF6L2I71x40aZ
VeXqvn17n8JyGP/oRknMojlz5pQtW7Z8+fJDhw69ePGi0cFRhbz55pseHh4Q
CLo2Bw8evHHjBsSLTg0SEDW2SN++fRs733///axZs7qKb/9fp5VKBqjihg0b
oEienp7NmjX79ddfdeeSLq6VK1dWqlQJt587d+6PP/5YhAMg859//rl58+bu
7u7ot6rnoj+guHRdCXkSYvK1njx5UsXk4Vq68ULCxeRxumfHjh2Gbz8ea10U
VbRoUXFdjhkzBrdj933hApRvf+bMmfrfn3ziqJq3j2tItGvpiiEha+mireS8
/USF7qRdsWJF3bp106VL165duz/++MOKrqJHjx5VLveMGTNOmDBBD+co5ahA
KyNHjpTPSZRvf9euXXLUyGlpigp7CZatzNyWqPswG5L2/GqnclC2tzKB/s/e
eUdHUX1xXCEEQoCEKgihhAAiNaE3qUoRpEgnNOnSqxqaUqW3CFIiAgJK7xC6
UgUEKaGHnlACoSegPzO/79l78s7Lm9nNZrMpm9zPH3NmZ6feeXPba69fvx43
bhzEDoezd+/e9+/ft7J+UIzMjyUceBgy6hbRsmXLyMhI/UXNDVYD3RIWFiaq
L4WThvOfPXu2Ro0aeF85cuQQc+nSdXHU0aNHCxQo8N5778lnFol9xbWm8fbx
9lu0aIFriXIliLV/wYYNG6pVq4abgb/94Ycf1qlTp1u3btCN2I77p7Yi+sYn
DMMwDMMwDGNfZJ9ZRjjA8MYDAwObNm1atWpVPz+/Q4cOwYVWwistOnqCN0vj
7Xt5eS1cuFCTZulCpLB8+fLcuXPXq1fPwv3I3Qc0U2hA7XMQFwQFBelvPl4P
n4iQh69v+ySWr169GjVqVGYTvXr1EoMtREngJ6IGCmBr16597949zSgdTV2A
R48ejegGeyJ0PX78uJa8ewQr712eaI9W8JjY58CBA23atKlYseLgwYMPHjwY
ERGhpLbE/jQmD4qih4fHzJkz5Zb/EPWWLVvy5s2LqDNRHo5JjYhwXqm7lPWt
fqwDyu2Ldvviu5BPkphPkUzQ9+Ih9N3N9PMnrl69GnYHIoWCpcln5Vcg5/20
mOIlSye/MvE29a9DaGllTB7aaK/XBztSokQJSmBOmjQJZkLW/7QObU+5fWi/
uXPnakaZJZKPGCxCkZt8Nnk7PYtot48boLascR2LO+GQR/y4fv26r6/vO6a5
dGEO9Dunzk8pOSA+lsaNGzs5OaVPn75r166zZ8+eN2/eDyZmzZo1Z86ccePG
iRb1mTJlatas2TwTa9euVc6GJXZW2u2Lr09xJ+QiDb/0448/puoD6g45ZswY
LamLcUKj//w1XfcfSODFixdFixZ1dnZ2dXWdMWOGfjgacwiZX7x4sV27diRe
RBC7d+/WzNsysZ2OvXTpEtzdr7/+Wu+4/v333xQX5MyZE1GJYk8fPXr02Wef
0Zg8+htTfrZv3x7FDwXm888/p7l0NaN8vgVdAbGguH7wwQdiOmaUoly5clWo
UAEW5/bt25pOtgzDMAzDMAyT0Cie57///hsYGNiiRQs40oi87ty5Q+GAOQd1
/fr1NN4+5faV/Mlff/2F89SvXz/WJLN+vH144KLdvoP6ySQ6quxQJEDyCQ8P
L1iwIB4WYay/vz+iTv1osf3796fxZOrUqRMSEkJ/GXZwRoiK+ALhRq1atY4e
PZrAD2cfzL1QqmP6/fffO3ToUKVKlWnTpt29e1dpsa8cInL7+fPnp778sjAv
X75cr149zu0zCQS+6JIlS+JzLlSoEEqgp6enh4dHIRNYf/TokWFRj4o5l665
dvuOpffsAh55/vz5kF6+fPmw9IiGJAxdJ2djlBUakwciHT16tGF6ylCeV69e
LVy4MF5WgQIFcBW8RKxgictVqlRJfxXBsWPHaJQP2E1qiixfKP4VrEWLFqVc
2eTJk2mqEflfFLw///wTdpbSmz/88INmJlWFw0mSWOLRsELPiIedOXOmnNtU
jg0ICKAk6qRJk0SdiFwpkEwqkSmvSEnFffv20UZRv5ZMbjJ1InL7KHtOTk54
R1T88ubNixWxpKG0qCSnS5fOzc0tn4mWLVtGRTfhFmeDEnB1dRVT4lK7fb1r
JK/g8Js3b3p7e1O7fYDyn+JnOdHXZirfglyVSf1wAd7UrVu3NCuG3Jfdfjix
P/30E14c3ggUF1SxkthXqh3lalAoUmjaxo0bywP40wqFErirHDlyjBw5Urn/
58+fQ9U3bdqUfooblh9ZnJDm0qXmQw8ePFAeQTNSnnp5Pn78eP/+/d988031
6tWzZs1KJZBa8g8dOjQ0NFQvHIZhGIZhGIaxL1G6YXCE80lD8XTu3Ll58+ZL
liwRmWR4yK9evaLMquKprl+/nmIBLy+vRYsWiUvQypUrVwYNGjR8+HAL/q0y
dvHvv/9OTRDbtGlDuX0RCziWk6wkPQxnN9BMYylTWIoYkxoRyU+Kk/Ts2dPZ
2Rn71KtX7+7du3K0ojS2RKhLrVVr1KjhELl9w4ZSopXs4cOH8ewoivPnz0eM
KdrjyUXxfyaoDO/Zs8fHx4ckOXPmTKVlF84wbNgwnDCxH5JJNVAdnCFhYWFa
zLbQQjMEBwd/8cUXlNvfsWMHtuMbFx+1Yyk9+zJx4kRZhpQ8ofW+ffvSPkqm
iNZXrlyZL1++tGnTfvPNN8+ePTOXf46K2br+0qVL8ijc8nU9PDws3OeJEyca
NGiAPZs0afLXX3+JE8oqyOZXicJQvHhxupOpU6c+evRI/CWe6MiRI/JcukoL
ZLHbkCFDhAAVvv32WyXzJudIAwIC3N3dIZPx48dHRkbKtdV6+SchV69epXb7
lSpVgiMhPqKkvq/Ujlw88IIaNWr0ySef0GT3tGxkom7duuTAUCmF21O0aNGG
JoYOHaq8RxqTJ3PmzOJTxVGnT59WRp4hhKcEF3fOnDmU2gUZMmRo3bo1uRNK
R8IUhuxSPnnypF+/fvDMHz58qMyfRTXUYqJh2Cb9GcydX5znwIEDZcqUoT4R
AwcOhMOmSbZMLJXKxOfPny9duhTRhHDehArFsXJu38/PT27wT2emMRg13fQK
9FCy5W3Xrp0Yk8f6cYdkIBbEJqGhoY8fP8aNbdmyZfXq1aNGjSpUqBAKIdQ1
HkSTzL0152QYhmEYhmEYG1BiXuFI7927t0uXLv3794dzTsMUk+d88uTJiRMn
btu2TXGSgcjtFy5cWLTbF+dHJPXixQs6leWbEYgxeRBznTt3zsKeDgHuGSFA
jx49EJxS6KFFS54yeEWKFKEJcBEUUCMi0X+cnrdv3740l27t2rVpB6WaQ7yR
MWPGKOPt68OcZIi+1gY///jjj169evXs2XPnzp3yaEVBQUGTJk369ddf9ZH4
nj17KlSogMfPnz//jBkzlHQflghpre9jzjBxAp/YihUrfv7554CAAFriJ60v
W7aM0keG6WW53b7hXLoOV61pL86fP7/MxJIlS5YuXQph/vTTT/iJ9ePHjyuZ
IllKK1eupNHJoBKF1hW7ySkXWUNiT5x58eLF4g0uNYGVNWvWGCa9aQU3Q+Pt
05g88uWUFdsYPHiwu7s7NZsPDw/Xj/P2559/1qxZk8aZhxrUjMoMbhu74XFI
gJAknhErVD7ptuWj5HXsRvVWkydPpgG09fJMKuQbvnz5cocOHfApVatWbd++
fYZ1x0ySEGVqM6+ZKsJg3A8dOnTYxJEjR8Q6XlndunVpDHwUNjc3Nzg/2I4d
zp49q5wNiDF53o3mzJkz8Dn13pHI7d+6dcvb21tUaRUtWnTLli1aSh+QhxBK
slmzZq6urlApvr6+YpQe0ba/bNmyVLfi5OR07do1K88sr4eFhc2ZM8fLywvn
oYHmxKj7Ql0IJSxW4NyOGjWqXLlyO3bs0GIO14N///77b+rPCxd35MiRmk67
KrpLbvkvzkMrbdq0cXFxgdcNOZBHrewcq8EdO3Zs27ZtqWcQyhv1Vrhz587M
mTPx1M7OzhCspqX2qnmGYRiGYRgm0RCeJ1xTOKg7d+7s1q3bgAEDTp06RdNd
iRT0ggUL4PDPmDFDHwGtW7eOxtsvUqTI4sWLtZh+vvVRv0jVIu6rUaMGgju4
xyKgE+dMzjlqBTHAaZMmTTJlypQ9e/auXbvqXf3ChQu/Ez2nW0hIiAiBxUn6
9OmTMWNG7IDQxtx4+7SFxuTBnhAgQmbNfsmlhEB/S7QFEjt48GBvE3gKOeyC
ZH755RcfHx/EViJaF3IIDAyk3L6Hh8esWbPkcyptxhgm4ZAj+v9iokkFUqiy
mzdvQvG+Ez3eviPquoRAJFj02Xi5v5LYWaxgB5pL9x3TePtPnz4VWkKpNlUO
V7abSw3pDzx69OjHH38MBd6sWTNYT30tgHwJG+QApUdDDEHv0USTmpTRwhIK
k6YRb9u27fnz52V1p+Sp/pOmEpCLpVJVKhdCiE4ebx/62bA8x/W57Ii420uX
LnXo0OEd03j7Bw4c0FjzJyf0pVEuZlhH0fr8889F1xJ3d/fp06eLnfX9ROQx
eQjRa0aLqUA004yr0K7Dhg2jWip8rXnz5h05cqSFfj0phqiYjeRdXFxIXPnz
5w8PD1c+jRIlSjg5OUGq5cqVI4dT9COzjKyWYdS++uorXALXql279o4dO5Sh
9ZX1Fy9eQMshlGjfvj1uSb/DmTNnqlWr9o5pvH3K7Wu6CgJN95kb3na7du2o
40aLFi1ENyjFZFt+UrimKDxz5sx5/fq1XMxu3LgxePBgFK2GDRsqY5cxDMMw
DMMwjN2RIyxawkE9ePBg37594Y2fPHlSzqVgJSQk5Ouvv4Z/vmHDBjoDzRJL
O6xfv5663xYuXFiMyaPFbAlj2blV6gt+//33GjVqiDSFJrnuDuckR5kGjc+Q
IQNFUh4eHnL6iERUpEgRaqVWuXJlEWjIMunTpw/FYnXq1Ll7966ma6Ek9pRz
+9RuP9YGSEmILAqxggD88OHDQ4YMGThw4JEjR0RQSXNchoWFjR8/vlKlSsuW
LdN0gVtgYCAluCBnardvTaDHMPbCXFWaYXWn2Hjjxg253b68Mw05lbA3neyx
/NkqtoxYtWoV5fZHjhz54sULc6f6L+Y0x8pftCInrBTVLXY+fvw4zaX72Wef
nTlzRjNfEmyAOhRQm9XixYvj/EpvLOjGUaNGubm5Zc2aFSZY7iEi34b1t0Q7
y6MVUW4fNzB58uTkNnSJ/FKuXLnSsWNHvIiqVavu379f7CBXZyTZjaZi9F+o
/FKePHkCJxO+zfXr15s2bSra4aM8w6W5d+9eaGio3KWRtuCQoUOHZsqUSbTz
d3Jy2rFjB7bfuXMHZ8MK9sQKPplNmzYFBASULFmSPDFnZ2f4XWPHjn327Flq
KBiKxoAc0qZN6+7uDpkoamHlypXZs2eHiFxdXefNmyf6OVr2JBXpRZkaqJw9
e7Z169Z4O3CAob7wCjTdSJV0Tui3LVu2tGvXrkGDBocOHaK/hP4hhXPq1Cma
UiRHjhyIR5QGMJqUk5c/drngCbUmxtvH7aEgRUnNaaxsaQ+fHGcYMWKEGK6f
zv/48eNJkyah3Pbu3Vtjh5NhGIZhGIZJXCIjI3ft2tWmTZtatWqNGjXq559/
XrFixXITv5iYPXt2jRo1ZK9bk3o6r1mzpkyZMoitECstWrRIjH8u72a9i4tj
Dx48SOPtw9WnMXkcOuyKiIigMYsQMSFuoqSQiD6WLVtG83C5uLgsXLgQ70JE
KCKnhDiCWprVq1fv9u3bWnTdilx1QjHL6NGjc+XKJcbkiTKNLiv2SZLHjxU5
skYgibffpUsXFACE7RAOip8oipAegs369esjTqRxJwRUBbB7927K7RcsWFCZ
S5fbUDGJgPi6NTNpVSWnQR97cHAwtdsvW7ZsYGAgVWUq466k2iyBPiNN8pRr
n4VUoe5oHeoid+7cadOmhUoUY/LQ6BPmmmWSqtTXvCj1MnLGW1g6KFvK7Tdu
3JhaDv9nmjRBHCWKhG01NThD3759M2fO7Obmtn79etgU+Vbv37/fsmXL9OnT
+/j4bN++XW5kK9sahaiYaFIGTC+EgICALFmywMpPmDCBrh4lzfaS5EpVFIZL
ly516tTp3XffrVKlyr59+4QljasfwtgX5SOS/8JP+JyDBg0aOHBgv379vLy8
RCP8DBkywPPs378//oLpj4rurgjjDvcAG6tWrUrjGYoh+vH2sT/+HTJkyGAT
WGnUqFGOHDnI0XJ2dsYKXKn58+dT4joqZreglIqYIwPLxYsXu7q6enp6wo8i
lxLb4XweOXKkWrVqTk5O+NgRCzx8+NBySl9GrzBxwsuXL0+cOLFQoULQTsWL
F8d7OXr0KM3PS2d+/vz5qVOnZs2aVbFixSZNmhw4cEDocDoP7gEfMu4T7jFV
zeDe2rdvjz3h7/3+++80I4BiYWWFRmoKp92/fz8OwYFwL9OlS4cCU7169bVr
1+7duxehjdxZQItt8oXevXvjcAQ+cErxmOLqf/75JwxB+fLld+zYoa/PYhiG
YRiGYRi7I3vC8JybNWuWLVu29957L3/+/PDDCxYsCLe/cOHCWMHPfPnyZc+e
He50UFCQFp2puH79emBgIPzk8ePHYze43Hny5EEYtdfEsWPHaI4qa4Im/Hvx
4sWdO3du2bJl69atCNw+/PBDSlAj/tq+fTu241oUgzgWJAGEpS4uLhDpwYMH
Q0ND6a/Xr18jzEFEgyfNnDkzIqAnT57IkRTClj0mGjdujMgIoUTZsmXXrFkD
UeCvx48fk2zfvHlz5swZxCzYE4EtDctcokSJH374AXviijTOT5KJIDbkkBAC
adeuHYpizpw5CxQo4GkCZZJWCphAYN60adNz586J5BKCOzwmJDBlyhTKDKAk
9+nTh4riH3/8IaaETvIcFJMaMEwLa1JDRKzg+4Vm27Fjx7Zt2wICAurXr58m
TRoUcqhT2oglCrlIRyfyIyQThAWRJxA3t+fhw4d37doFCwJTMnz4cErlQZ/8
9ttvEDW2Qx9SXppQBq7Rn1N+X5puKAmygFtNzJ49m2bxrly5MrQ9Xh+uiJu5
efOmvTI8uFy3bt2gG7t27YrTyg++cuVKmIaSJUsuXboURsRQOGJFfljLd7V/
/348AowvHmfQoEGurq54wM6dO2/cuBGPjI1QuXIPvng+oM3cu3cP97l582a8
9x9//LF27dq4zw8++GDy5Ml4C7hPbIeDkZoryJIt9EZat24tkvNQg2JFTtpX
r15dWHz4h2JabXl+bUNE8h8fSNWqVdu0aTNmzJjjx4/LrmmK7xtF+lNUKIeH
h48aNQreFHz7evXq9erV68svv+zYsSPcJ7iauXPnHjdu3J07dzSLPZusvC4C
gXXr1rVt2xanzZIlS/HixXHFnj179uvXr3fv3ngd8IHh6uN+Dh06RLPuapJy
hh2EN4ujYBxxON61k5MT/MNixYrhhULfLlmyRF9bJD+vFl1zUbp0aZQcaAaa
Fhy4ubnhJ04O/QkVocVUlRbMbvfu3TNmzAg/E4b7559/vmsCWgiPiadbuHCh
eBAtFZtvhmEYhmEYJqFRWoSOGDGChnO3EB/BBx47dqzwV3HU7Nmz4XLDMUZ0
QDO9Ojs7582bF/42vO4mTZps2bLFyrgJO/j7+5crV87b2xs+dtGiReHDU/uc
MmXKwCH3MUEtWhNOLHZHPPijR4+++uorRFIeHh6ffPIJIinENZ06dSpYsGC6
dOkQIEyePPnBgwciT6KZIotKlSqVKlUKwUjmzJmplZGLiwsEjo0Q8unTpyl+
iYiI6NChAzbiL0RPCHwgukyZMuHkOBbbN2/erCXL+EI0+xSB2Pjx42lUZwu4
urrKsxKDxYsXoyhCJtQ8DPtAXBAFyiEeHwJfs2aNfoBuhkkcqOzJ+WGUw2PH
jkG5Qd1Bs+E7zZEjR9q0afHZogxD45UvXx5/TZgwIRl+tskWqMEKFSpAnjAl
0LSwR2nSpMmVKxc0A3QppA2p0qBntukBWYdQY+NyJvCmvLy8oLhEsog2wpyt
X7+ejo1Pw2ChHq9evdq5c2c8WsuWLXfv3n3z5s2LFy/OmjULWg7XCggIUKbZ
jSfNmjWjcoiT58+fH0oVRTRPnjyQJD0gpE3j/yStXqXuWt4mihcvTnU61CwZ
WypWrIgiMX36dPHikvBWGT1v375F0e3bt2+PHj3gGvXs2bN37974iSXWv/zy
S9o4ZcoU0Qvju+++w7/YH//iL6z0NgN2oD0HDRq0YsWKgwcP3rhxg8b304x6
USWhHBIBuctSSEjI8ePHR48e/fHHH2fLlg3ONtzLDBkyQGLYDv9K3jmeHzi0
xJ07d+CIDhgwANoD3yb0JNxaxAuIFKZNm3bkyBHZAZZrE06ePEm1AH369MF7
7N69u1xCELzs3LlTaEi5y7BAtNunk+BAOgnACp1n+PDh1P5fs64Y4KjPP/98
9erVcD6bNm0KVxMmAHrY19cX3iaNAmcv6TEMwzAMwzCMBeRe6gh5yFs2B/zY
gQMH0igodCDYsmVLHxMUgsHrxhJRGH7CFZ8wYQLcdWp0Slh2mHE2EdaRD4+f
dHK43xSgHT16VHM0P5nGcMA9379/HwLx8/OrU6eOu7t7pkyZEEZRmvrUqVOP
Hz+m/UVtCFaGDBkCCVADJyyFqCEQbLl69SodEhkZOX369F7RiLdAx0J0uK5D
BK0I0NavX2+hHOKJ8GgI0kW1EcWAe/fuJRFRmaFsAMX1WIHM//jjj9TQ6Z5J
/oicUnBwMAotaTaAgkoqlPQnbVm5cmWs7dUZwZQpUyhDSKpSZP9IG2CJf+01
vDZU9M6dO0kjfWlCfoN0A7jcgQMHDIfrjytivKCbN2/OmTOnQ4cOZcuWLVKk
SLFixWrUqDFgwIBt27YpY0rEn9GjRwsjQknUbt26kdGnx8RGmPgkz4uePn2a
DB9ZAbphYTFhLrGydu1aueqcSVaQmyRqP+X+nqK3hZyNlwctjLXg0dlE+ldu
yy1/jylbwSpVfqK6OSwsjKoIwaVLly5cuAA1ojR6j6fuEnJ+8+bNo0ePrl+/
jqvQFS9fvnz37l2hk7Xo2gfl0vhylXug96iMeyauGCXNnC4XHhqsTG6QL3ol
yKNcWu7MRdBUDvC9X7x4cevWrXPnzuFxrly5cvv2bXmIHitH72cYhmEYhmEY
2xCerZVpB+Eey/4zJfn1DjCFaUoT9Fh79UZJI8OLPcXtRcWc18/Kx0xy9EEK
Qps7d+4gCjh//jziGiyxRYSxFKeIJxVjO4sKAvEKlDSFPgEozpmcExpyiZJH
zza3v1Iw5D2pFikqejhZESEqw2g4UOFhUgxC+8lqEB+mGJxfURRivHTxUXC5
tRJzqR7NzFQINiAnlEi7Ko1FRZbSXk3ohZ6klbCwsNDQUErEBQUF3bx5E0Yk
MjJSS4Ch74WmlUefFvJMPkZZEbhSk6s3xEzyQd+8Wf+OZE/V5lkeDDP5SplJ
2eifWmxUfEj9u7BtBm1ztSdyUGCYt7d8Nv1p9Y03zGkDc1dRdrNBUej9cNY2
DMMwDMMwTIISFRMrD7G8g5L5ly9k5ckN4w55B8P+tskfpY2QfrscNJkbOkaW
pJLx04e6yp5aMo5b9SFerPtrMR9H7oGif0xr8gYMkzjoP0wr9+T0vvUoglLa
oGrxGx7H8lGG/4rqG/ppc8LfMLcmF4wELSSG+lNuRJ2E5VO+Af0nJrbzsGzJ
EHMq0XC7UsekP8ryVWL1AVJw2TB0sZRG8nJjEs2oLYRtukvRS+IqsUpbSdpb
/3YUx1gzevXmTijrDQtX1JdPUc+r18nJ1v1mGIZhGIZhUhLW5zyVPe2YSVDO
Y5gAN7dzckYJhURHcjnlrrQvFVKlGFbfkl8zk8QwJzQRHyVDuekjzVj3lwuh
Pm8vnyoZPi/DaDGLrqwB5EoupcKLkwPWoEhP3ydIi58k5Tci6yL5Df4nzc9r
qIVsyI/pT6I8oKIY43p+CyipKk0qvfplUqG8WXHDivxT/HypjojejZFfn9hN
3y5C3tMC+gbqIvGrd5lSvM8gXFDNTIt6xbfUzOsx6zHUTvJ7V95jrH0tzd1M
lDSCk3I2a96v5bhDQekoJJdYvV1gGIZhGIZhmIRDROj64F2PEr9b4+dHSaOj
xNpKxzAvIW+Uk9sO6jCbS9YpTaSsydLIuSN9C3bxr13GeU5QlMqOWJNvhn8p
GRv92BFaHKM2hrEvSiZW3q7fTdGByfPLdRQUratJFiQ+OXY5H2Vls9IoM/M8
2nBdC//acHJrrqsZNb4V260c9jzhEDZUaYSsJW/zxyjo9aG5lKyhnjTE8OSy
Y5Cq/AELn4PYKI+EKWs524yRuWsp+pPQN0oRtyRrcnGgoe6Vn/G/mINx6QuG
YTkRt2FhGCL5KlGSK67vLpSqChjDMAzDMAyTyOhDYM1ifGQuK6V4xUpwHaWL
1Czckuyxw6M21ynYcdG3HzNsEkkr+nhHjoP0MlGyRvrUk5aMc9r6xzFXDukv
EXDJTy2319LXd2hm2nQxTHJA0aKaqdwq5ZyLbqzIGkBRm6RA4j/5SFTMimbD
q2tG7erFXzboYdmwyk9k2Ew0IfS84aPJqjg5IN+kYY+5ZGsBUzOGVTDK90vo
07Cade/UnAdl2O0lpWKorMy58eYOtFlKclCgBAjKu1Auqg8ozN2D4vGaeyLD
ww398Fgf1lyko+na86f40sUwDMMwDMMkLXHNvdOK3KpHM9MuxdChtXB+Qyc/
1maujoJhwyTDYEd/lIX0keFGw8aoyTanoQSYmtWv2EJ8Z+6Ehpl/hkkEZG0Z
FV2vp9/BnB4wV6PH6LFgdGT7Es/281pMfaLPQBr+jM8btHDbcbLj8cGwiCaT
5JVeyPpvijP8DMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMw
DMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMw
DMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMw
DMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMw
DMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMw
DMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMw
DMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMkKP/++y+t/GeCVsR2Wv/f//5HK1FR
UWJFHEU///nnH9oi/qJ1Ok+UCf0OKQ/ISpGAZpKSLAH6qcWUJ8CxWkzZGp5K
LOXtJH9FyMlQ1EIU8h0qzy7voC9vtC7KrSaJ0XA7nZmWYnuCPiPDiO9RqFDN
VHppRWhFLea3zJhD/n41yaAoek8gS1XRIXG9rqyUtJj61tAa2gX5/DL2Kjmy
3PSWRWhjxQYxDMMw5iD9LKIhLaZe1fvzwq4pjr1YUayP3g5qUuym6UIA4Q/L
24W/rRmFEg6BcKgMt2tSpKA4YFrMaFScQQm+SG7KVRxIPnq/SB85ymVJPL4S
qr99+1bTCUczEoVc3uTS7kBCYxwO5bvWzPixSXmLKQJFT2oxJa/oYRsELvSV
rH/EVWRtTCh5RZtfsXx+AR5HbzeVfeKJ3rIYPogiDYaJE7JnqJnxZLARVj4k
JOThw4f37t27f/9+iAn8DDWBlbt372L7gwcP6K/w8PCIiAjlWuZcshSJnBuR
k/ziX3k3rLx8+RKyDQsLg/QgxvvRQLy0Qhvp5+PHj1+/fi0HEVESif2oNmF4
n+bKhrwdT/3o0SNICaKgwkY/xQoVUfyLnxAardB2ubSnknLIJAmKXhXI4SeX
wDih+D/6hIkSVNq3Ri+pXpbiPxumJmxAqV01l+5gGIZh4grVC+vtjoUsAene
p0+fkvtK/i1iK/oJ95Xir9BohJeLFfwFX1e+uryirw7WRyIOByRp4bnEutLg
Rz7Ds2fPjh8/Pn/+/Hbt2rVp06Z169Zdu3b94YcfDh06RDucP3++f//+DtoM
Qyl+ehOvTyUpByLUun37NgWetETxoxhfbKFCSOGYiLZQGuPTpoJhrEeumVL+
spe3zOjb+egDhPh87Po4Tt4urmWY/I8/hnduTj3aCyUrqC/ADpTNY5IbiumH
XV6wYAFcHRh0LeYnduTIkUyZMmXIkMHZ2dnJySlNmjTvvvtu2rRpsSV9+vRY
urq6YiVdunSZM2fGsly5chMmTDh27NjLly/pKtQGIGUjt/OUtyuOtL5CGaLu
3Lmzi4uLs4l3TEDIWE9vAhKG2DNmzIh1LH18fGbNmrVv374XL15AsEq+Ojlb
MUVfyXcuhKPvDyKOxb/Xrl3LYALigpRQDtOYIOFgoyiTtHwnmnz58l24cEEz
3yyWYeyCHD3JXaKUeIcblsQJud2dEm6TbPWSNGygaNsVtZhuGJ2cFL7dw1il
f5MmtVSRW5VottYQ6U+iRWtF2YtWVhiGYRgLmOvrJFsKzSjzL/4aM2YM3H7y
Y8lxhYtLriwCK2zHOnaAu4t1hGD4F/tg46effkraW+k2KIyX0O1v3ryRb0ap
B0/+RMXseqD028XjK6/AsGvDgwcPFi1aVLVqVR8TZcuW9fb2RtyKZZUqVRAI
Hz169Msvv8yfP7/DyUc24v9Fo+la25rzW4SspkyZgnBeiUlBhmioWLqYoH1Q
GlFKK1euLG4gUZ6YSb0oWSxl0AnarmQSmDhh7is27EdmA0qDIqVRlqjDVbL6
cgxoW3wn91DWjLoGiPuxr/4Xpl+JT+1bXcIwmqlovX79esaMGYUKFYK3c+TI
EdpOXg3+vXLlSgcTLVu2zJ07NxlxT0/Pzp07d+zYEdvbtWuHddoHrlGuXLlg
9/PkydOvX7979+6J1IRj+Ug2IJTM8+fP161b1717dw8PD3g+rq6u7u7uPXv2
xMZHjx4pO4N58+ZBdBAm/KIsWbJAwtj/o48+8vX17WgCKyTkxo0bFylSJGvW
rHnz5sUJ9+7d+/btW6VbU7Kt8lOSY7QxPDx8+fLleFhICbKCP+nl5fXjjz8e
PnxYaZyDZWhoaPv27SGQVq1a5cuXj6qZChYs2CEa/EsFEvtgvUCBApkyZYI8
s2fPfvLkSY0VJpPwyMNz6VuP4Kefn5+bm9sPP/yQZLfoOMhKQ3HzoEtnz57d
okWLTCagQKAW5syZ8+zZM6XHpX2/+lu3bnXt2rVs2bKbN29OiCZq/0UPjgcd
+PXXX1esWBFPlzFjxhIlSgwYMGDHjh2RkZHxvIS5FqT0IBs2bKhQocIXX3wB
0x/PCzEMw6Qe5LpmLC9cuABz/8EHH8C5hQ6Hf4swatWqVTdu3NDX4a5du5Z8
/po1a1IggP0RFMCV9TWBFQq14OLWr18fgUC6dOnSpk3bsGFD6iutN5RC1W/c
uBGnQlQSFBQkbpVWHDE009/z6NGj4VYhmDLXrY8Oefjw4cKFC2HgatWqBf/h
6NGjR0wgmEIU3KhRo9KlS0NQOXLkKFy4sIP2N5drc8TNX7t2bezYsR9++CE8
JRRFOBUoNgi+qNWTXOODlV27dqEcdurUqU6dOtmyZUNRxCFwRSjkF1CcBR8s
Z86c2AdFsVKlSq9eveK2K0yComT15aX4CwUbEUGVKlX27NmTJDeZYhCaARoy
T5483333Hb5xc32m4oo83CithIWFzZ07t1mzZjB/GTJkgKbCe8SWJ0+eiLds
LiUeV3CqN2/e/Pbbbz179vTw8KDLwTR8++23586dSwg9JoroP//8M2nSJGjO
qVOnimSXvJsdL8qkHqiAUfYeXo2Pjw9Mc7Vq1f7880/D7wU7BwcHw/NJkyYN
vrg+ffrgi9BiOpA48ObNm9u3b//000/d3d2dnJzq1q27f/9+aiuSyA+YyIgP
9vHjx4MHD4YChKKAXwSJNW7cGA5VFhNDhgy5ffu2voWkZtKfixcvLlSoEOQG
zxN+vl6xPHv2DOKFTwVHC35UmTJl4LFrZnJfyQql4atmakGEsoESUqJECaju
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
Ivv06XP9+nXlcM00KlqpUqVEu33aqB98GCs3b97s3r173rx5V6xYofwLTY4b
GDZsGM4wc+bMypUr46Lt27c/d+6cOFxz2PbVuO3q1avXrVsXFhlu1bhx4xDD
wrPCk8pyUEz/ypUrs2bNWq9eveDgYNmqyvu8efMmICAA4VWhQoUMd0jOyD1B
6OYPHjyI50WRW758ORVFevBXr16hmCFQhbOEiL5Lly5k7pXpePbu3Yv4HUWR
cvv6K4o0flhYGFyjHDly4HWIvxL4cZlUipzbF5ne48ePQ22iJCPUWrhwYbt2
7aAQvL29d+zYkcS367C0bt26Zs2aEydOhErE8v3334cRGTVqFHUc1uKtG2Xr
Exoa2rRpU2dnZ4rslPO/fv36gw8+oPb8YgQGcRLbLv31119ny5YtV65ccs0m
ASvQs2dPNzc3REb79u2z4fyGfPzxx7Vq1YJphpKcPHkyrAy1208NY5swicaz
Z89++OGHxo0bjxkzpnjx4mnSpKExeWSFKTeHlnP7vXv31nRuoZJVxqeKE6Lo
ZsyYccSIEfg2E/XxkoJNmzZB/0D7wcPZtWuX3HoBygq6gibJgoN94cIFxQUF
S5Ys8fLyotw+tdvXt5Ggn4cOHcqXLx/2hCaEkJVW68lcS+Bucf9Qm7C8np6e
U6dOlQfewfLYsWNZsmShJiVffPGF0ukDPx8/fvzpp59iBycnp44dO9J2OcsH
P/P27dtkICBqWHyUWGrKm8yFwzg6SpUcfiIAhzJ8/vw54ql58+bRlCX+/v5J
facOg5LNQJgJzTBw4EB5UFkhc6hZKJYCBQpAS2i29tORM/Y4Ay768OFDmDBo
lcGDB+MNQnFt3LgxIWL/SZMmZc2aVe66JcDl4IXC2YZJ7datmw0nNzQQENSd
O3fgMOMB9+zZA28WD9i2bVseb59hGCZWZI0K2zFo0KB06dKlT58egfzBgwfF
ds2U3v/mm29cXFygY4sVK7Z8+XJN1+0Umr906dLU61lut0//vn37Fu4E7BFl
aHEG7AZ34r/oedhp56dPn4aEhGD54sWLvXv34k5IqwcFBSmNhRwL0UP87t27
kAOeDkJYsGABNSSbO3eufihmIZalS5din48++kgeS1kvDZzZx8cHLoQDZfVl
5IZ2Y8eOpSmY8dSbN28W++BhYe4nT54MV4p6iMA1lf+llcDAwIoVK2KH/Pnz
z5w5U/k3MjISoRYFVnCT1q1blzdv3ilTpjhiuWIcC32jmoiICPixjx49gk6A
luvRowfKbfny5Xft2pUkd5gCePDgAelYsHLlSpHbf/bsmT6UsDnHTisIN6By
EdrAesp/CW3WvXt3RHaI/mgEBi1mFU9cQfmpX78+FGOTJk0uX76sxeysjSVs
SqFChbJnzy76xMUfWBaIFNJDWV28eDF1kZ4wYQLn9pm4ooyrI5qV4ueOHTtg
tWH6z5w5U7NmTRpvXx6TRylsN2/ebNiwIXbLlClTr169LF+Xav/nz59PTiws
vjIQTQqDxAvpVapUCV69t7f30aNHIUDR8BIakpqb0nAHYrBNWchw46FMsAMc
S2oUKv4VrdBpy++//w6RUi/UkiVL2mvW8oRDGd4T9/+OiTRp0jRr1kyeTgVL
FBU4olDjEBd8Tk037RfMd+PGjfH40MzUbl+ZN3PatGnQ29gN2+HB+vr6Qkqi
B3QylA+TSkDsSX1SeEweaxBmizRAeHj4999/D+nBKUKgqncsqd071AKUMEJR
eFD2/djhmA0bNoxiYX3uPf7QoAEoIa1bt/7777/FzQv9eevWrX79+kFtwsTs
3r3b7jewf/9+uAF4wA4dOvCYPAzDMLEit3amZjzk37q5uS1fvlxpAbVixQqY
D+hw+Lffffedvg3qhg0bqG2/p6cn5fbF+WEIrl69Onjw4KFDh2qm5oUnT56s
UqVKkyZNLIRXBw8ehEdNuX2aOzWF8eOPP1Lf89mzZyt90+SfAQEBNHT89OnT
xUa5ARXJ+dWrV/DTRo0a5XCRgjKVG5YjRoygogiXSXRqEHuuW7euVKlSNErk
wIEDxYEiIgsMDKxQoQJ2KFCgwIwZM5TJhe/cuTN8+PAePXrQdjgM1atXR2l0
OLkxKYwbN250794djjT8ZM7t24VVq1blyZNH5PY1eySaKD8G7fH06dPx48cj
ssuZMyfMH/2rNH9FwJUhQwbsM2vWLGoqbHNuH1fctGkTVVXguo8ePaLtb9++
1aJtwZEjR2A0YS9ochy7PK8gyjRoXpYsWXADkyZNotlL5X/tdSEmZaMfjfza
tWstWrTo0qXLsWPHQkJCqFGHHXP7mukzuXjxYu7cuaFg8Unig03Zw/JQAgqP
DEf6ypUr4muNMo3bsHHjxvLly5OLNW/evOfPn2u6isLFixcXLVoU4oJjb5g4
ov1xNlwiV65cOBsE26hRI+GJOUrtyYkTJ4oUKQItnS1bNniGWsy6JxiOcePG
kUcKP1x/+JMnTxDL4F+cwdfXV27ST/55u3btXF1d4XnSdvi0devW5WaoTJLD
uf24Iqc1oDYRq0KAlNuXdxNKYO3atTRe2XfffYcgXbOrp5TQuX0o9tq1a8Of
bNWq1dmzZ5V/qd4TMTjKT8mSJcVkvnaEc/sMwzBxRaSRYbD8/Pxo2sFixYrR
tCyaFIX9+eefNGEWGDlyJG2UvXdYFqh3atiPoEDunqaZ6n8rVKhQv359uhy8
3P79+8PjpZMY9lNLtbl9AYVOR48erVevnrOzc5UqVZYvXx4aGipa74s9acvD
hw/v37/voA2BxG2jKE6dOvW9996jUQSXLl2qxWzVf+7cuebNm+NfiK5v3776
8Xj37NlDuf2CBQuKChERrJ05c6ZWrVrlypWjiz569GjIkCHNmjVLxGdlGAM4
t293EiK3r0Wro/DwcH1kp8/tU2Q3duzYly9f0j76mdOtBCaDxr6AhsTV5Vpg
uiUYi+rVqzs5ObVo0eKvv/7SpDlZ4vXA0Y/GuX0mPoimCOQ6Usl8+/bthAkT
YJHxtUZGRsIiU7t9ODz2yu2LCrUCBQrAc8A3i0PE95jykBuWywNjCi8I3r67
uzu8SiiKU6dOiZ3lkyxatIjG5ClTpsyaNWuUVqliZ7yvuXPnZsyYkTrtYk/l
TpJzhp9CjxcvXuzcuXPlypVr166lDJJczXH37l0oVWpMUqlSJTpQltXjx48p
tw9/XozJI3bDCan3hBiWB2/k1atXyuDVDJP4cG7fNkinwWOnBo3ZsmUzzO1j
uXHjRhr6rHz58lCV9lWGCZ3bnz17dt68eXH+1q1b06SHsjMZZRoZb9CgQeQD
i76rdoRz+wzDMHFCaQ597dq1LVu2rFixYvfu3WIAAQL2CEE9+fmwYtOmTVPS
BWTCqDV10aJFFy5cqEV7rVGmqVF//vnn999//+OPP9aizeJrE/IllNtLtbl9
JcKC9LAD3ANEB5At4tkRI0bs27fvxIkTV69e1aRMkc0po6RFGS1fM3X027Zt
G0KtwMDAkJAQeWcIat26dcWLF4fcsmTJghBVDIsqipDcbh9lVT78+fPnGzZs
KFiwoLe3t4iqIiMjaSzulN2Qj0nmcG7f7iRQbp9Ocv369TJlytA0NDCd8l/i
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
MTZjWIYNc/JW5qZo5T9pbia915qqmqTqs/qKQPS9RKNiIv5NAV+6oXK2sim+
lW6qXMzYdjNJgqIzY+2uqFe8qUpJ2owiYU1SFHrTFh9tYEOHU3Pz0MWJKIsz
89rF11V6k1nezfocFMMwTKpCNj1WmgzD3rtWXihWLGTv9Zrc4eILvadkTixK
HYrSuMhCfUecKg6SLbFO5KT/y0LxEBlUfebffrfMMDYSp3LIhdYa9MkoLaZ6
lFfiH2dpOmOUoEPuy1c07IOQoF2Vo4waVhlmYhmGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYVIn
//77r1j+999/Yvm///0Py6ioKFpiY2Rk5Llz586cOXPBBNaxPH/+fFBQ0Nmz
Z7H94sWLWMFGLLEeHBz85MmTiIgIcS06Z8pGSIxWxBZFnmKLvLx79+45EyRe
yJaWACKl7X///TcJHEusY+OlS5fu3bsnn19eSW7QjVEZk++WSiBB/4q/5Geh
v968eYPyBrFQCSRBUamjEgjJUDkUkjx9+jQkhh3evn0r3wnDJARC1ymqgLbL
mpbLoTUYyooMk/xTWbHXdRWU9wjdJa4o6zFa5/fLMAyTGpD1P6G39Yrt0CQr
gxX8+/DhQ/L2RTxFvi5WyLMlv5c8W7i1FJddvnwZMZdyabqWclfCfsnbHSs6
k2WoSYGV4ncpdlnsL0cHECCkJ0ItQo4grly5gjeCoAMnV2LkZOvCyXG9HHOZ
u2FFPmLL/fv3RXhFpY5KI+Qjoi0RgslR2PXr1w0vxDB2RGgwuaQJPSCyIoZu
PGM9sr4leeozOfH52PWaSoupz8UWTafn43NpuWDo12W7bF9VJu5frCgaOP4i
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
QW/fvk2pMzJBhNqUp4+gNRDymDFj8ufPD1H06tXrypUr8l8EcFArV65M8+3v
2rVLrMcWnj59CtVXuHBhGCxNeuqWcoxJnnbsYyLP7RkZGenn5webe+zYMbjN
WmxjHRwcTHM8mpmZNW3aVD95NcIZepdu1qxZ+/TpI/+Evo3gpXbt2jABcNpp
JTZOs/qb+NMNTDpC75/IP0Xr3stGcG4/RUhsbl+T9LNy+8tf0ebf2G/Ki4iI
gKY6ePAgNJU+or916xZNnpwzZ85WrVqJ9SauihmGYZgUh5wBxEp//PEHrMaF
CxfCw8PpJ5EBWL16dbly5WCzChUqJPKlssnw8vKqVasWvXCK5tsXGw8LC3N3
dy9ZsqQwN/g73On4pzzl3L5CYnP70YZnMbALXJRmzZopj7ebGnI8iLM7efIk
Qi24MfQiYE3qih4eHmXLlqVaWRcXFyUxhYXDhw8jFsNZlypVatGiReKU4Smh
Y3t6eiLAR1/VYtKwItRimJRCudHkJ3fiqt7n3H4CUUKVeF6LmZDcvhY70a3/
Sf5VGQVAeAU7RZqK3tUrZ37Wrl0LTUVGc/78+XEVZSWK5Of2jbYx2iH1f+Hc
PpMc9GWEsLy//PILPMNVq1bB7uNeRq+2t7en+fZPnz4tD71p0o2ThNw+PsuX
L4+/QMcWKVIkNDQ05c/QJCG/CJ9RUVGQMJyrRo0amZmZOTo63rhxg35SFJ1m
KC8nccGlnzt3Lq7F2bNn8enr6wuXFVuAGJ2cnJQsouKtmWy9hNKpcJw0k5ty
wPjp4sWLBQoUgMOJPoNARtkCPkNCQjp37ky5fQcHhzMxQFx79uwZOXJkzpw5
s2TJgh4rx038gksmBTF6rxk16/Iazu2nCInN7VN7uWpFeQBfsXpazNg0NYCa
giZX/oitHTt2DDoKe0fku2HDBrFx2hpn+BmGYTI8yoiwZrA17969ozdJ0dtv
6SeYkqlTp+bKlQtuAOIp8QZ24dyimXiXbsmSJb///nt/f3+KBWBuECO0adMG
PyGC+zf2m3DF3J76w+PcvkJic/tg4MCBNEU/YhN62aIJ2nd9XIkeAtcFvQ7R
llLnjJULFy6kV5s1bdoUYaZ+g4cOHapbty76arFixUaNGuVngLoiQjOqpEUD
Ud8ijw6YoHyY9IW+/tloUpdz+wkkWkL/k9xG092/CcntK89Hyw9ZROueapcP
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
qW6fqn+12JGsUqg2b968MmXKoL2tre2hQ4cSmPlJE+IqLIGsvL290RW/++47
eEpv3ryhX3EW8H9GjhwpHjiV03Qit1+2bNnFixeLv4iNvzWQ+qfFZFLgmZ87
d44iLIBlOOrw0vGpn9RF9ExRt29tbe3j46Pp3PL0NaaZgjx//vzkyZP+Bkiq
kCSkigVEtZqxefJJVjBkxYoVgyqYNm0alVxqsYcRCUXr0usmsXHsjq4gdkqx
M8Vrmi5Mi4yMhKbq0aPH5MmTZU2lGcZYnZ2dYRPl9snRw+K/4eHh48ePz5o1
K/S8p6en3Cb+gC44OBjyJAGiW1ISgHopjRrHNVn32rVr8+TJgy46a9YsEWzq
s6kMYxQx5wl9NVpYSO/S/fTTTxs0aID+qelyKfQVN367du3QFdEh4ZQqRQ76
8T7clVAFaJ8/f/6tW7cqT51kMOjOhVjy5ctHg8VQZVrs4cghQ4aIlzG5u7vT
Stmxx0pLS0tcCCsrKy8vL1oZbZhSTF/Tm75sk3y0snN+/fr1oUOHQo0fP35c
mYcHMQg6ZIsWLYRrSsLEH8PCwjp06EC5fUQrYvuKT84wqUQ8HUwpLxfqkVym
lStXUtECFqi76qfz4t4rUBL1YpxUiA4Gq1WrVhBpp06dLl68qBgjRZ5ivVy6
Q1rFaAZAaF20//PPP6GpoG2wR9mWQWthv4h/27dvr9dyDMMwTMZGyfTSMs2N
D+fWxcXl7t27wmrANOCnZcuW1a5dm3LRIh9Cpo1y+1myZKlYsaKrq+u/0rT8
yk7jOh5lAjqR2+/Vqxdc7n8TMCu7aSKMtSJtSAk+FSIvyNPoJDNKsS4iNZo8
397e/smTJ0YfCRS7uHfvHsINXI7cuXPTRHwm66fJWTLZF0J/8/b2/vLLLydN
mnTr1q3IyEjRHg7Mxo0ba9Wq9cMPPyh+ET4PHTpEc/JYWFgsWrRIacDPJzKp
ipLlMKpmhfKUdRruWVG3f+DAAcXDz7TOudGskV6kYlluv3XrVkroTZ48WcyQ
o2TyFbWj/KQ/GH3V1vv372H+unTpMmXKlICAALFBNIYS++WXX2A0Fy5cGM/p
JBDlmKHVxZw8NCE2nX78T3kodtbomeoPkrbs7u6eL18+mJXZs2fDN4j/fZ0M
kyioA798+ZIcv8aNG1NuX0mQ0j348OHDtm3bohk8HKrb19+t4pGcixcvdurU
CY3Nzc1nzpyJG+ejnlhaAGlQBSkoUKAAVXdokjDhT2bPnh0uqJWV1W+//Sb7
kNQGDirNAl29enXxLl3FCVf0bfpC7ldQZVeuXIECHzx48LFjxyjwEacGNQ6L
DH8SnUfvQIaHh1Nu38zMrE+fPmJ9XDk6hkkNlPIGZRRVrx6jY+bkUebb1xc/
MES0hGZMB/r7+zdv3hwihTcoKhIVf1IfIOjbaLHfmSuPuVD2fuLEicOHDz9+
/LjiE0JxeXp6li9fnhxO4aFxzMswDJMZ0KfKKUcB53b+/Pm3bt0Sv1Kt6ZMn
T7799tsWLVogENBbor1799aoUYPmB1i9erV+F3JpZTyINqdOnbKzs/vkk096
9eoVEBBAv6bHuSn0qSdas2bNGsrtL1++3KjrRQizPmLEiFy5cn366ac0375+
48IZu3PnznfffVekSJGCBQsOHDhQPNZnyvZdSROhK6Kb4ZRnzJhx/fp1JfB8
8eIF1iP237Fjh1gvtnP48OE6deqgKyIWo7p9oxk5hkkl0MH07ySVdaZSH0UE
BQU5OTmh39rY2Pj6+tJKReOZ8i2cesjBpiwB5Ukl/a+U24fOnDJliphvX87h
K4ZM0dVyOlFuJu/rzZs33t7e0FRz5syB4lW2//Lly7Fjx8Jowj7Kf0zadVTG
IEJDQ8ePH08vFpHr9hOYRDIa7MtpAaUBvm7cuFHMt48YU5SwasYEyDB6RB8T
mk3OOWuGh3Tg+ME1atCggb+/v5LSF3fQ/fv3v/jiC9zaefLkgcsqbgoqSaUS
x/DwcDgPcLRoypSiRYv+8MMPcB4ySV8dNWpUPgNLly5VJnuHOrK2tqZS80mT
JtFghzwoqRnq9im3X6tWLZqTR99GM1aGmi6Qjx/u8ZUrV6DDq1Wr1r179+nT
pyMCQleBlps7d+7MmTOx3LNnT3Nzc3oxgfjjvzHz7dPIkZmZWb9+/aijysOm
1Cc//jkymQQl0FZ+1c9DKJ46WblyJb1LFwvydnhMKi5kMSqOHJapbh8ihUKQ
58kXCkE/HCD/Xe/QarHnU8JGLl26NGDAgJo1a/bq1YtU07x587AAZfXjjz/C
0e3WrVuJEiU2bNigjEHwdWQYhskMyEb/7du3Hh4ebdq0QUg1dOhQGItZs2bN
nj0bzi0+YTW+//57OPmwXKdOnZL/TgtiTh6EA5Tb1xdGJuqQjhw5QuVbjo6O
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
sRdK9xUqVIiOAULG8fz1119xDb4wjIxcR0prqM8EBASsW7duqYHFixevWLFi
yZIlywxg4ebNm9T4yZMn+JWaLV++XCwTaIlP/JfWY2H79u2XLl16/fq1MqNX
xs5ZybdhaGgonPCePXvSm0fIRe/Xr9+VK1fEvFuyQvjtt9+E5IVg4ZmTeH/9
9df79+/rta6WTtxLQtHDjx49Ep0HZ43Og64ldyqcPtZ4eHho0mlCsNRXSVYk
ItoCbero0aNiNp6M3d8YU0DJGMs1JJrUb1euXCnf11CS1Oepq2Nh1apVYgtp
cBqmjewoknzOnz9P9zupTfoUqoOMFJQt/Ss6Bnlr4jIp7pMif3wNDAxcYoBM
pFA4Qn2Bn376Sbz6XEtY4oVhGIbJSAif8/fffxfGnYwFWXwAY0EGC0Yfhoza
k7E4ceIE/UvYNWHR8BXBmgjK5H/FxenTp2lTcqRGCwsXLoQtgyty586d1JHE
x8DNzU2cF0UQJHDhD0DUSl0ZZC4CWGojogkhefqJBH7mzJnnz58jalNiChM3
8bLDc+rUKfI58Sn7LSQHkht+Fc9H038vXrwoOiF6CzxY0ZOxxt3d/fLly8If
41CLSSWiY88mrc8ey8tBQUGylqOUAikE0XuPHDkiNmWy92+qouSOjH4VeHh4
CHUqaw+xEoIVdftyqKWvJRbbFHrj35h3xNMnLg0UEbSNSEKK1JDY6c8//0xG
02iRfMKhA3v9+jUlmoTNFWklEaHLkV08IjWa5xTDFmKP69evF0aH9igOQIiX
1SnDmD7REml9LAzDMAzDMAzDMAzDMAzDMAzD/Dec2GcYhmEYhmEYhmEYhmEY
hmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEY
hmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEY
hmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEY
hmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEY
hmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEY
hmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhsl4/O9//0tU+3///Tc6Ovo/m0Ub
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
k+xy+k2bNqn89gXZUzlBiklsjP/ixQteM6J+/fr+/v6q7pO4NkgXb9/Q0NDa
2rpfv37aCDBxukVOAwIC5s6dy76U9K+hffn7nc/9jBnLiBEj7O3tbW1t58+f
T1IVVQHJivr5/CmonZ3dlClTnj17xpfIlcmqVatKlSpFPfCKFStSZ0zOWa5j
qVL6/fffq1evTu+C0nN4H1XKzIaqVCSQy5cv9+7du1y5ctRbHjVq1GgdY8aM
oe3YsWN//vnnr7/+Ok+ePGvWrNFOsssxeXr16qWt2+WeLQDpjFYhhTV1yZIl
HG+fbfsqZxJt5wHI7YuqA0/b06dPt2jRgmpC9tuX51NUKVV5yohL5GRch1BN
5efnR0P78uXL/+9//xsdz//93//R9pdffhk+fDg1i9Tp3bx5s7iWfVFS9rw7
duygzi31KgcNGvT48WO58NSmzJw5kzqEJUqU8PDwSE5uqtZcVSrVSIdSHjt2
rEGDBiTPnj173rp1SxZIhn8rGhf/mTDtREdHz5kzh2Py8AoXSsK3DMsDACDd
kCvGsLCwjRs3Nm7cuE6dOtRBpf6t6NkStO/m5lapUiUXF5ezZ88qCY0YlM+u
Xbs45GaZMmWE377Kppqc+k0kOHXqFLtvffvttzdv3lTV6l9QfyOxDhINgqjF
pJ6VWO9Vbs21zXpgYCC9Al6ZsWzZsmvXrhXWFdXSZu/fv7969Sq1yNTW0HCD
xh2Z5Mu1JOBnFxMZ3t7ezs7ONWvWpG4MKSGPtmiERapI3ZgBAwaQsjVs2PDE
iRMqjSJByWvpzps3T6WE2dz/GaQbcnWnqvrk46KLe//+/b59+9J/lrT34MGD
nEBl2c62eiv+vMmZMhat0pYtWwoWLEhDV2q/OOKxqGmVlEZLkGvyp0+fdunS
xczMrGjRouymJaekwV3evHmpxu7Ro8ebN2+0A70UMG7cOMqTRhAbNmwQblTM
7du3O3XqZGpqSjUnVYyKpC3aSi/5wlQkea5fv55uTSo6derUmJgY4Sgo/Lgy
f0MDMpY4fVHxFd3K1DQonj9//rRp0/jjFGq+Bw8eTC34okWLrl+/zskeP368
YMECSjZ58uRy5cpRX4gUvl69etSJouOUmHYoPW3d3d379evn6upaoEAB+su0
bduWjnME9SwfcYL/mBcvXqQ+UsmSJWfPnu3v70+V1du3b1+8eHH8+PHWrVub
m5vnyZOHulUPHjyQmydqeubOnUsC7Nq1q52dHUk4f/78P/zwA4v33LlzwofE
z8+PRErH6SxVsxzvqHPnznQ5HTxw4EDGCiE5sLPN3bt3aZRhbW1NNTmpSs6c
OfPly0fCocenJ+IdOktqyY6yfOGrV69ID+lJZ86cyR/Vkqyo7SaZzNdBlXDy
61gA0gq9PQ2hih4eHqScc3V07NiRbfv0t6V/Nx9funQpNDYxtH74VM2y6Kgq
GDp0KLVK/H09DVdJmPN0sHeiovGy+OTtRM3MW2oHqY9nY2NjYWFhq4OqJq6g
qOLiI3SW7s4zC6l/j9TJ3LZtW61atWrUqLF58+Z3797RI8ToOHLkSNOmTal9
WbJkSXKC3CZWHpX5gqpNVk6SJ3UAuDNQvXr1X375hYQ8Z84cOnXv3j1On1G1
Kz8Lv1xqK6lI/GEgtSDUlFDfg4pKp4SdHwAA0geV6YmDnFhaWlpZWVHPlvu0
NJB3cHDgLi5tqdX48ccf+WN/5syZM1QDU+XWt29f7t7TVV26dOGh1oYNG2jI
lkw7PJXh7NmzVHVzrejm5ka1OnU8qlatOmbMGD5OdeadO3c+izjShRUrVsyN
h7pVxsbG9IDt27fnNoIeUMQ7itN8+EAtYERExJYtWxwdHallp9fRrl07Gojd
uHGD2l9qW2n75s2bmzdvUoPi7OxMg5FKlSpRSvbbz7Q2bdUXeVTC3377rX79
+lR+UkVSJ9LG3LlzkwaSKtJPVkUaf/Xo0YOGpTxvThdeunSJm/5BgwYVLlyY
VJGu+vrrrxfo8PT0/Ouvv8QtYIMCGYVcHwYHB5Ny8hBgwoQJdevW5RAK/fv3
504scfz48bj45ScysNgZi3ZcIAzLKv8fGolwY0F0796d1zV2cXGZNm0aWwXp
LI9EUixP+db379+nzjxVNUOGDOHlenngExoaOmDAAKrBqAzs76SkbiTCd6Qm
YOLEiVQltm3blmo8uhFXgHSc2tzy5cvTaOvw4cMiKJA8MEzi1nH64FPr1q3j
IT9t6UmNjIxInlSvzp49mw/SNjtrJkg+Kj2R1Wz37t2NGjWihrtYsWKmpqbU
L6Jhcv78+alXWbRo0e3bt3Oy8+fPFylShA7SKf6MkcPy0EE6UqBAAcqBz9IR
W1tb6ix169Zt6dKlly9fpr+kkgn8/dIHrhL379/v6upKHafixYtTzdC6desm
TZpQJ4okXKZMmSlTplADJF9FlcmwYcNIhiRJ6mjxh6WUmPZJpPQi6P/OHyhR
zUPVKUub8jfSwQHK6AgdHzx4sLx0b2YjTnK5OX36NBWbFxXVLtrOP6kjXadO
HZ4g5ieizifpGFXF1F6TiEQyenySHqkxVdTyx02oJEGGQwpfsWJF+iOTftL4
mtWex0pFdZQsWbJGjRriM6gvyIkuHZANJrzzry5QIdWuVBVQpUe1AdUAXA9Q
JcByJpF6eXn9KwXPV/VmRWdS5Km9EUPjff5wkmpaUTXRDldWHF6J2s0WLVpQ
TSVcMlL8EjmHyMjILVu21KpVq0KFClOnTj116pS/vz/1NuvVq0fNK7UI1PlM
unL7Nx6RrXaOQ3jdUMeS5cm1K1et1tbWVK+SMOkgyZMnjjPWaZ+g90tFpS2V
it6LoQ76TxXXQcebNWsmx1MCAIDPjaj5eX/48OHcasjdWrHD7QgloIqXKitR
G9NPasKoc0sVGjUrxjooGQ+vmjdvvnPnTjk4QNLmBXd3d6q3uaqkbKmR4oEb
ZVVMB/VGfv/99y+0v0FyoNEBPSBX++wTReTKlYu7VSV0JN1K0sCKhrc///wz
ZWJubm5paUnNa8uWLZ11kMCp/aUMq1WrRo3vxYsX6Ujv3r1V4W0zIeKpqai/
/vord5CEKnKnJUc8pGPU1o8ePVr2FliyZAnJhBSPhq6UgC6kXoGNjQ0pJx2k
fgj1T1Qr9QCQ5iRmv5J7toqu4iVt/OOPP7i/SuMCUlSqOalCoH476TBVBdx1
HDNmjOqT3myF3kdO7CAJuWPHjiQ6NhIK8xRViSRkMaR98eKFXufh5KC6kG56
9+7dzp07s8/qiRMnAgICTp8+3aFDB6p8unTpEhISklYVL986NDR0/PjxpBiN
GzfetGkTVfInT54cNWpUqVKl6Iivr6/sz/9JhUk6AZ1t2rQp5UzypDs6ODhw
f4DkSZLkZovO0h0/2b4DwMQljGYQFx+RbPfu3evXr9+4cSNpNTXWtN26deuG
DRs2b94cpFtwh3j58iWfpWSbddBP2vJPPk5bceTIkSO3b9+mfoKsmZm5I5SG
sGyputi7d++AAQPKlStHdVQ+HQMHDrx+/fq/UoBuJf7Pe+bMGRbsunXrtm3b
tlGHkPnVq1dF4r/++otP0Wvi9yVeB73HU6dOydlmNmQdeP78uVAn3uGnkB+K
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
1Cg4OTlRDda8efP+/ft7e3u/fv2aE8vlTHqVnKShklNWb3Vcv359wIAB1tbW
06dPf//+vZws3b404efSft/HvgfXrl0bO3Zsp06dSCb0Okg4rq6u1IgcO3aM
58tS/N2BuK8iyZP+ua9evaKcL1682LNnTysrqzVr1ijpKA0AAAAAAAAAANkc
2eBAw9U7d+7QuLhOnTrffvvt6NGjR4wY0blz51KlSllYWJiamrZr187X1zcq
KkpcIsbIlI+3t3fVqlVz5MhB6VevXq2KmsI/3759e+TIEcqcMixRosTBgwfl
NJyAg/zMnDmTbmdvb08Zfum2fYZF/fjxYz8/v8WLF8+bN48Exbb6JUuWJBFz
W3zyP2jQIJIbpXdxcQkKClLSwl6UeVCFTQgMDJw6dWr9+vU7duxIqjhy5Mhu
3bqVKVPGxsaGVLFJkyYHDhyIjo6W4yEo8QpJWko6TIIiHZs7d67IUw6dQdee
PHmSVbFw4cKkcrDGgHRAFTvl3bt3d+/e3b9///z58wcOHMhzUrVq1SL1zsBC
ftE8e/bM399/1apV9N8nSXIdO2nSpLSy7Qt4EuH27dsTJ06sW7cuVVBUTXGj
Wbp0aSsrK2Nj41atWvn4+HCjKQf/T0ExxKzQzZs3e/fuTZVhr169jh8/Hhwc
TA03tSkNGjSoWbOmp6fny5cvxVWpj2L39OnTixcvLl++nFTUycmJv7ybNWtW
Rtn2Fc0yCqIJCAgIaNOmTZEiReivdPnyZSo5/bmmT5/u6OjYsGHD33//PTIy
UnZOSBniRTx48OD8+fMkFuquFC9enD9IXLduHeaIAQAAAAAAAACkD/Lwlgaq
NBAeOXJk48aN16xZ888//7D94c2bN97e3q1atTLR0bZt26NHj6qCyvJQlwbO
1apVo+FtmTJlVq9endhIPyoq6uTJkzVr1ixUqNDGjRuFbZa96ZYuXVq1atWS
JUvS8Jw/HDAwMMgatn0Oiezi4lKxYsXChQvnz5+fhJBDh4eHh9ZYobJaUIJ+
/fpZWlqSQFxdXYOCgrJMfHh5oQF+nGfPnk2YMIFUccmSJaSWfDA0NPTAgQOk
gebm5mZmZs7Oznv37pV9oQU+Pj61atUiwZIWLViwQJFcpuWQR6RvV65coZR5
8uRZuXJlFpAkyMyo3Ix5punSpUvVq1cvW7YsVQglSpQoVaoU6S1VpFTNZmBR
v2j69OlDjUhBHZUqVaJmy9DQkOqTtPXb53yePHkyevTopk2benp6imAs1Gju
3r27TZs2VFPR3an1PHLkCK8SksQcbnLgqYTevXs7ODjQfflrIzHDfvjw4QYN
GlSuXHnFihUvX76UV3BQUmHk79y5M4mR9JPkSZpJT0Rt0MyZMzPWb19706tX
r5KoLSwsFi5cGBkZqeiqfRbC1q1b6Z9Vp04d6qW8e/cuZX773IjISyrUrl3b
ycmpQIECLBkjIyNqoKnzo2SJdhkAAAAAAAAAQOZHWI/ZArBp06aKFStWqVJl
y5YtERERYnBKA+GjR482bdqURvQ0ru/WrVtAQIDIRFgPvL29aZybI0eOsmXL
sm1ftQafuOPTp0+HDx9esmRJupGqSJ6enh07dqSx+eHDhzdu3Ni4ceMsYNuX
bdddunTp2bPn3r17fXx8Fi9enDNnTrbtK/qsASJkB//86aefbG1tKX2bNm0C
AwP1XpIFoIf6/fffa9So4ejoSPrAiwXzk5Iozp8/7+rqamxsbGRk1L59e/qp
aCJOHDt2jC4nzSlWrJiIdyQj3sjLly+nTZtmb29PN8qSwgSZB7lKFHN2V65c
IX0eO3bsoUOH9uzZ8+OPP7LfPlWAGVrYL5gBAwZQI0XNBzVb9L8uUKCAoaHh
+PHj09xvn9i+fTu1mNTw0e3Cw8PZ8MvVy/Hjx52dnenWVFl17drV399fXJVi
v25qi4cOHWppaUmtJ2mO3Ebzzs8//0xtRNWqVbXfxKV4LpiE+d133+3atYt0
cunSpZQ/Va0Z67evmiJhsbdt25akXa5cObFWhTyTSy2vmZlZnTp1uC+Retd6
knmTJk369OlDYiFpk0Don2tjY4OYPAAAAAAAAAAAMooff/zRQEflypX379+v
SGZ/2tLQ1crKikavhQsXXr58OV/CZme2U+3Zs4cupMtLly69cuVKTiBG0G/e
vDl37hxbYqOion777TdHR8dx48bJBRDjdM7w9OnTNHbOGjF5tK7ptPX09OT4
Bh4eHklHaeBTAwYM4Jg87LevyvnLRfaD5Z1ffvmFv2ioUKHCli1bZAdU0o2l
S5fmypXL0NDQwcGB1FIcF7I9ceJEtWrV2LbPMXnkHMLDw/38/Egb2XX/yJEj
xYsXHzVqFKwxIB1QfWkiDKR05P79+/369SO1r1GjxqFDhzKsiF8+wtZNtUeB
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
YX94xVjSkJkzZ7569UqbgErIC9BTsuXLlyvSxIf84cOTJ08oJamofzz8pMSj
R4+URGIcZR7bvpKwdaB9Y2PjJGz7lMDX15fX0jUyMkK8fQAAAAAAAAAA2YGI
iIiVK1dWrly5VatWR48e1Q7k2V9OiR/Ui7V0y5Qps2rVKk4mPFcvXbrUuHFj
V1fX5A97YdtXkd1s+0q8ar17927Lli316tUjfdi7d29MTIxe05Ow9vj4+NSo
UYMEVbx48fnz54uUnPjmzZsuLi6w7YPPBOmhra0tWxo5BohY6JO2//zzT2IX
wravF/rbzp49WwRdYSuuYMiQIXJilQ9/Mv3246SlcglqbnIkhN+gkZFR4cKF
xSXafKKjo1evXs2GfaqFqOJSNHVUig37dGHZsmVZDiSQ169fKwnj/Ci6mDy8
Mg6lWbJkSWLlHD16tHguYRXn7eTJk1U3lfczm21fbD/pt+/r61uqVClOdvr0
6bQtLWz7AAAAAAAAAAAyFTQyjYqKWrt2bYsWLX7++ecLFy7QT0U3gqYx7Nu3
byMjIzmlbGLdvXs32/ZLly69cuVKJWHciefPn3t5ee3cuRO2fQFs+8nh48eP
W7dubdWq1YABA86ePUuqyPac6Ojo0NBQ2sqhThgfH586derwQrrz5s1TEjrK
vnnzZseOHZs3b86IpwFZH9K03LlzC4MwmxzZYZht+7JpV7ZFw7avFxLXrFmz
VCZ9XrSdRDpkyBBZhqqKNGVr6d68eZNuJ8zd4qZ0sEiRInovpEK+f/9+9erV
rVu3Hjx48Pnz5+mnqJpevnzJbajyqbA/SUCX1K9f30jHjBkzXrx4oS0DNdbN
mjXjFUk2bdqk/byOU44ZM4a1UUA/WZ6TJ0/mxNpIR5nHti/qc74plSR//vyJ
2fZ539fXt1y5cpSGyn/mzJm0LQ9s+wAAAAAAAAAAMhU0UKXxaYsWLebPn//k
yRN5Xch9+/a1atVq4cKFqi/9FSneftmyZdlvXx59035UVJTeRe4SA7Z9FdnN
th+nW9N506ZNbdq04bUeZGvSiRMn2rdvP2HCBK0Z5+jRo+y3X7Ro0QULFiiS
lrJOUj7R0dHp+jAgO/HPP/9ERES8fPkyPDz8zZs3oaGhtH39+vXbt29VqigD
235i0L+VpMdipC1J9dWrVyxP9o1ntCL9TzF55EaN8qf04qZvddALpdeqLR7d
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
Dx4/fjx06NDChQt3796dOg9p+MXWhAkTSJ1Y2aihIbGYmJhQsy4OLly4UNX5
QbsDAAAAAAAAACANUQVCGTx4MI1Mc+gwMDDIocHQ0DBXrlyzZs2iIbOIkT5z
5sw8efLkzZuXw/BSMtrmzJmTD9avX3/Hjh3yjZIY29Kg293dvWDBgg4ODvnz
57e3tzc1NaUMzc3NObd8+fIVKVJk9+7dSeeTCRExE6pUqVJABz0gB88nbGxs
6Cc9NT+gktDJv2zZsiQKkoCFhQW/F2NjY5YPpffz88vgZ0sLVG9z0qRJvMow
xywSCilvra2t/+///k9ez9HDw4MEQnpCp0iTDXVYWlra2dmRbGvXrr1582Y5
SAIA6Y9s66N/N/1/SWPz6yAt5ck70lv+dxN0fMyYMay3H3Vk8ANkelq3bs2N
CFWz3CpRjUGVJ8uZBFu4cOFnz54pqQ5BT9vhw4fzt1dJtJu5c+eeOnUqNYL/
9eM1FeKqiIiIadOmOTk5tWzZcunSpQcPHty/fz81346Ojl999dXJkydV6+Gm
MixPgwYNSJLcKNva2pJy0mNSm8USJqmStHl1mPSMt6/92osIDQ0dOnQotaFt
2rSh2t7X13fXrl29e/emNvTbb7/9888/U/nxizxLQk1PsWLFuGdCWFlZ8T+X
JMOaRn/ehg0bis4PvrgBAAAAAAAAAPA5YH9pHvDSyJfGwod10I6Pj88RiaNH
j9LxY8eOcaR3wd9//03HDx48SGnoEto/dOgQ7dOWLjl58uTTp0+VZMcZvnfv
Hl1I+fCWCyN+Uqn279/PixV+RqF8To4fP87yFI/JD8jSpgckCQvDEVstjurg
lJyYf/IloaGhGf1MqUUEyuCf9NR37txhdWJdYk3gHdrSPkmAZMXRFYQCk2ay
DFkbWRU5Je2cOnUqODg4nZd9BEAgB2kXleGzZ8+EYrPSClXnPzvtc0Qy2AaT
yfnz5+W6gitbbtH4J/Hu3TtOnMp64NatW4d0UD3DN+J7cZ0jquv79+8r0rRO
Km37RGRk5IEDB0aNGtWwYcPyOr755pulS5dSzSkWYdeuKpIyFTpz5oyocumm
XCcLSbLGypb2FNwiZeh1ho+Kitq6deuIESOqVq3KkunTp8/KlSvFB25pEj6I
Bcs9JbkFF/9fhkSnJGzaUnNTAAAAAAAAAABAizz2l20OKvuD9qeScHSsd6T8
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
l79+/frYsWOnTp1SdNME3t7eVapUGT9+vGz25x2VbV+bQL51y5YtSQNJnSws
LPz8/FQFVhKG5dGWOSvpDwAAAAAAAAAAAAAAACTNv//+GxgYWLduXVNT00aN
Gh06dCiJmDyqoCi//vqrpaWl7LcfEBCgxNtdY2Nj169fP3z4cC8vL77k2bNn
vXv3NjMz++qrr7KqYV8VK4Z+BgUFjRgxomHDhj179vT395dP/f333z169DA0
NCTh087169eT8/GCcGVXdB9cTJo0ydramqPxnDp1Sm8O2oNUqj59+hgZGQnb
vnCAp5y3b99euXJl0oSyZcuuW7dOniagnatXr3br1u3HH3/kiaFLly7R07Vp
00YOEyTuote2LwtBeOM3a9aMPwOhZzl79qyYnuAEMTEx7969CwsLe/PmzevX
ryMiIqKjo9++fUvHE5vFAAAAAAAAAAAAAAAAgKzK+/fvO3XqZGFh0bRp07t3
7967d++TfvvCjjp16lQrKysO286u++y3zwmeP3/esmVLS0vL/v37sy03Kipq
+/btNWvWdHNzU9ljs4ZtXw5DpEhG+FevXt2+ffvJkycfPnyQnc+9vb2rV69O
citevPiSJUsiIiIUfXZ4gUpKlPLUqVP04vh9tW7d+uLFi4om6H1iOWzevLlC
hQqzZs1SLalMF3p5eVWqVInyLFu27MaNG+XHoUfw8fGhs+3ateP0L1682LZt
G08BqKZsEltLVys3ElG9evXMzMwocf369W/cuCHnExkZuW/fvs6dOxcoUMDW
1pY08+uvvx46dGizZs0WL16saFaFBgAAAAAAAAAAAAAAgCwJm2HDw8NXrFhh
b29fr169e/fu0ZGgoKD/ZNuX/fZNTEzOnz+vxJtqDx48WLBgQTrYr18/RWd9
jY2NffTo0dGjRzmZylKdBcz72mD7etPwzps3b0aPHm1jY5MvX77BgwffunVL
lUAvQkpszd64cSMb4UnO7u7u0dHRogza2DXsZi9OnTt3buTIkbt371bdl237
Tk5ORkZG5cuXX7lypXz5w4cPZ8yYQTrTpk0bYVGn47wkriqrpNfSlfd37drF
kYUoJenk69evxan79+936tTJ0dFxwYIF165dCwwMPHLkCClVoUKFcubM6eHh
kYS4AAAAAAAAAAAAAAAAICvB66J6enpaW1vXrFkzMDBQ0dla7969m0RMHgFP
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
1KmTEm+Vbdu2raOjY4UKFRwcHNiqz37+tC1ZsiSfqlixYq9evTL48TICFqls
/b5+/XrPnj3LlSvXv3//7du3+/n53bp16+rVqzt27HB1dbWysipVqtT48eMf
PXqk6Iuon/ybvnr1atWqVU2aNLGzs6NX061bN/p54sSJO3fu3Lt37+bNm7Tv
4eFBx2vVqrV48WKOzC8XeO/evSNGjBg2bBgVjDIxNDQkBXB2dh4yZAgdd3d3
v3LlijxtkVh56I6jRo2iq3788ceiRYuSYpiYmFStWpWODB8+fNKkSaooQInl
w8motFQS0qiNGzdSmaOjo6OiokJCQqg8dGrkyJFBQUH/VWIAAAAAAAAAAAAA
AADwRRMbG/vtt98aGhqycZ5N+rxvoIN3mjZtKuyx7NHNvv2MuFxcYmxs3Lx5
84x+uPRGhIuXbfu07+fnN3z48KpVq1aoUKFu3br169evUaNGvnz5HBwcGjdu
PGfOnFRap0WonKioqLNnz06YMKFOnToFChSwt7d3dHSsq6NZs2a1a9du2LBh
//79jxw58urVK7nYvDNmzBgqkpWVlY2NDb9ferP0k/LJmTMnZeLl5SXi9iRR
njNnzuTOndvW1tba2po0wUiHqakpHbGzsytdurT8NcEnn65KlSplypQhdfr6
668XLVq0a9cub29vKiodGTVq1K1bt7LPMs0AAAAAAAAAAAAAAACgxJtD7927
568jICDgUjyXL1+mn1euXOEdEWDn48ePN27cuHr16oULF+gS2qE0ATroKtpe
vHiRLqH9u3fvZujDZSTCI10Y+SMiIs6dO+fu7v6///2vQYMGjRo1atas2YQJ
E/766y+eNGFzd2oCywjj9vv370n+ixcv/uabbxrFQ/edNWuWn59feHi4dllk
3nn69CmrAb/BgHjondL25s2br1+/1l6lhR6W8qFMWBk4T9pSnnTk2rVrnCw2
NvaTD0UC+fHHHzds2HD//v39+/d/++239CyNGzfu2LHjkiVLgoODky4JAAAA
AAAAAAAAAAAAZFX0mkZlu7Tw2JdXUBUL5soLraZHcTMxWpu5Vjh8kBDhd+Sr
+FTK7i6c4bVFYsd+Vc7ae2kDCiU21/DJOQjVgrkq5INJWOZVyia2cuSipG8E
AAAAAAAAAAAAAAAAWQ9hFxUmepUrtQj2IhtOY2JiVPnw2Q8fPsj+6tnQm1qe
+5APJvNUimPLyBMHvMO2d5UFXvyUDeO8r5oXkF+fPKejvVES5dFeIn+hoCTv
ecVVWgFiUgkAAAAAAAAAAAAAAJBtEc7bWnuv3qVOtfZYVeJsaNJPDL2hb1QG
dtlAnWLp6V3fVs5fFf9ftSO/Qb0pkzjyyVKpnlqc0ns8iXwUfTqmfV4AAAAA
AAAAAAAAAAAAAAAAAADg/7F31tFRJF0bf5fF3YITHAIskgQSXBcJHjRAcCew
6OLBdpHF3d3d3SW4BXcPS4AAARZC2G/T33PmHupUqmZCiJBJcn9/zOnpaamu
rqn73Nu3qhmGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRiGYZhoxP/93//RQlBQ0H///YcF+vz3339ppfiUt6HNxLI4
jvwpdqFP5VAxFfkCxVUrdUXL9BPVM32KbcRB5DtC0JZUw/Jm+v2yzqqW25tY
iWVxXXLhxXXpO8p1IvPlyxfl4LSlXGNYY52Vw8QYlJ5QND/RnpX2/8MLGM0Q
Nal0kvR/F8hda4Sg9MCi69Btn7JeNpphOK+wHfIaw3K/970ox5Ev0DB3FQzD
MEzIyDpc7kUVO6V37wqyD2VY8AjkT2V74XHQet2P0HW47jXEBq9NvlNyVej1
o9RnKE2k0HvKSeX7Ii+bNfpGcD9R8fLM3jK9PRhSO1ScfcNcC5GPo3v9yvFD
UxUMwzAMw/wYZCUj1hgW4hjfFHuyINTDLzFeKxKy8NPjzOInfUdL0s7Q4i1C
dIWwi9XyzfZj6aIUqWnpWYby7EM+jv6QhWEig5D/iWbbORMyZh+IyH/qyKhP
xf81gvc/ZvsTuWzhKZIcWJAPLuw1nP0wd2JBwZ/UG1JHqhyTWynDMEwoEZFS
JasnBGWr7/7NzQxNRehdt9ldQihPaH6KeSjxcMWhsOTEiUykb9Y5uWnKsxLl
0YyubXS9oaw0K4eU69LLphTb0l22lMVnaDVDKVixp7UwDMMwjDWjywz6DAwM
pA30B/qGlI0gB11DiHLEHqFoKS9diUIr8RmxpdmotfyTpbzQoOAPaEIj8q0E
/UL09XqWqS6S9ZZm9oDiSVMsaZBMlCDnmYtWCnQnLvb0jeHEkq+t/MEjo9/T
OyV5Wfeyw39DvysvzuzG38RSBEm26WE4LMMwTOyExKruCsnZJkLQ6hYtSMLQ
oq9KZothwR4pX/WhrLqzoHf1lqxtDEO+NEWbhfAoXzb93zyF2W3kBwT6SrMN
Q5YZuo+jtAo9IC82VhLv9cam+6rKSeVfv3n5DMMwDMP8SOQwqWKpZRmjR6WI
IC1xUd5GzioMYQBpTEIJ1ulBaWVLQ6pDUcNyvSn3RZ/1yDAnBa0/sG82FUTU
gPKoSN5GP4js++h7iYYXgh/EMJGBPqxGXi/+7D+8XNEPswGNH9DXKT6s6J30
sik9v7xXeFLrlb5d/mq2u/teLGXlcQ/JMAwTNszGxpXQvdnwqe6FhaZD1u2C
2ccHIXteZk2Y9bsS4UGv25Cz2QVfvnz5LhNptiaFAvz48eO7d+/8/f3fvn1L
n1iD9YpD9P79eyO4v6OXwexjGrO6hdaHMAhab41i8lghvRRpxDAMwzBMlKPI
G2VOP2G+nzx5Mnz48BEm/vjjj5EjR2KBPgVDhw7FGtps8ODB2AwLkydPhm6h
g8dsoSjQEzAIPZtXZvPmzag6qlKqQywPM0Ff8YkqxVesX7Bggbe3999//x1C
lVptbSueiGF52KmhZctg+dWrV6IpivaGmvnzzz9pJdUYoLoSG4wfPx77Wm21
MDEMxQMyO+ibW2Po0SMPerg7wk8qd9pyJNxsGD8CMXt8/US6A/5dKAmEZudt
ZredYRjmm4h4aWjmTjHbmVPAlnZ//fo1uVrkBciuFlZ6enoKuStcBvoJYMdx
48adO3fO0J6My5F/S307x2wVlOC8GIgR8uMPPUhO7UHMnw/X+Pjx43379nVy
coprIl68eOnSpatXr96SJUvu3r37+fNnbPn+/fsJEyY0adJEjMK4fPkytQ1C
bgDCScSCWIk1f5iYMWOGnGIXEBAgGpV8QPKb6MjCrx89evSePXtQqo8fP4p6
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
DMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMw
DMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMw
DMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMw
DMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMw
DMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMQ//d//6csf/nyRXwK/vvv
P1r4999/g4KCsBBkgn7CAm2AX/XtaWPxKS/EPOh66VOuE1qWL5xqW9Sh8quo
SVG38l6GVP/0Kd9H/WjWg1x+sRLL1N7ka5E/ja/NTCzLtWdIlanUlbyLfF7r
rBwmxiD/H+VWLf7XYo3cYhlLKP2b/r+Wv0bgv5vul9zb4BNfRRlig1FjGIZh
vgkZIOE9CTMhWxBZA9MG+nrSrrqJEcdR9DOdV1hDsaDrbdpXsZuKnLZ+FO0k
LlP4EYrgl70w2aeQ/Vyxl767QFdr1llpcjl1r0pRL3JzUhZkP1Q+siXVKt8X
2bdlmMhAb29G8H4yBGeB0ZH9U4GoT0NzvvT/eNj6Q/1QcjRSbGNoPb/eg33v
eZUF3V5HRg8v+7P6KcJ8ORGO3pPL9aPXHmNVyA1JvkfKH1ZubJaUjyE1Wj26
ZXb7mIqlwJ1ZHSXvZamKlPoX3U4I/ap11rZ8+Up7M1vg/0yIZUtHM6QuSLZQ
cvzfmp96MDGM0EhKftL0XZiN5BNm7U5EIfvFlvqoSDo1wzAME70wK/ItuVeG
FtNQDqVEYsV6oWllLOXPmC1k+MMyUYWS2CNcJ+EF6OJKSQpSjqCsl51c8kFE
WEMOKFlzpZmNw5utGUK5IiVDz5DqR2ne+tMiUdUc9mEiG+UvT0Tfni3KsRTZ
luO6RnBLJMf/w4yl+JXStxOiUwrneS2F943Ib0JyqMrStVtJ09VtJSFbRsaq
0J/FGOaatJIuojQ8WULoXYF49BbOR2zRhdA8gxNr5HwSeXvqzcz+cZSeRxw/
ukSW5Ee0epMwG+1XakCO9ouvuo5VxLkR3FqF8BiFYSIES9ndcsvkRhh6zMow
pRs0ItSdNOu0ip+UBYZhGCY2o3tAsm0SA5+VbeQBziJp36wANptaiZWKBjab
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
GIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZh
GIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZh
GIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZh
GIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZh
GIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZh
GIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZh
GIZhGIZhGIZhGIZhko43b97gMyYm5u3bt/gU61+/fq1siQ3Ep9iSvoL//e9/
+Py///s/sT0t0wa0LP4lHyiVQXJAA4UoSLD0VZZPjAkhTyETWW76T2UP5rYU
18XRECdGJy8aLrda7ieiX8mNpfXiv3J3knuaLFVZevprwTD2RegBzUgryp1Z
S9X60F7ICk2+r0nOmqQZ7CtM2r84ioLQS3ZHtFdZUOypzXpe7ody/5RbKh/R
0ZB1uOK6MAzDpAhCr8quqfD/haZStLq8Umg2RacZ+v/ij/roTB8XWDhPzdmc
EDp/xS7LgY8QlGUbJ8cdmtEFEuvl/zq+xdG3kaB4Xw5Ole2Vdsn5AS224YaO
h9w/Fc/WMV0IJhVgmJXSpH6rObYf62iQ3PTylHWILEl5ey0RQlYyOUo2TDNK
UdoFxZ4KsyvrQ72tTDxyvjQmFvlMnNQuMw6FfD8aJj/FPaV0P2U/QpHqE6qK
o5tULXFsZDVlONihd5kUp93cekON6shy1ufetbhOuIWkmV7vKTpfjAgQ+myV
pnNBGcbuKOrO0DOxey46FaM4nORVarooXrO36pMDVdkNS+qhGQvaydwIe2IO
IfQkFvQ5IgfEnAfCMAyTUijDzZqkSPV6W3ESrPFLDTOrhspQSX0rIw76hIwz
6k/LU3RELlp81SepDMdZxMKrV6/EV2VvyowjR0OfoFNQHCd9NEpfSQLKfuSI
VfmJjmtuOgTDJBFK0kB/bzrmfepoiDtaUa36aaWG6ejEh7RKXKPXMMlmpwwn
VtkLmj5tLmjl3D6TSJQxqTdv3kRERDx69Ojly5e0gbizLly40LFjx/bt23cw
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
e3/55RflPDdu3Fi1alUqxIowMImkkaRcunQJQoZjv2TJEr30cuXKRaYBYRT8
fyVWxSf+SI8GQ3QIN5S30hvO23eK3D4hj02MHz8eISc8ity5cy9YsECLe/J/
/fUXJEDDQOgzshyoI+3evbtKlSpofokSJRDVil+ps128eBH9sEGDBrRbxLxw
xsqWLcvz9pmUhXP7NqA88lO+fHmagVmqVCnc2srDTbNnz6YBYmhRqBG73+xJ
mtsHK1eufO+999DAiRMnRkZG6muP7N+/v06dOtigXbt24s2PyqfNcG6fSSSi
VG9MbNES+gp/r0yZMnPnzo2IiLh7966vry/u0Fq1apnL7dNsarrX4DKJefvi
joCDVLduXeyEKsnjpwsXLuzdu5fmDyiPUKVioCXCwsKioqLexqKZGj5nzpzi
xYtDeh988MHmzZvpXlbGCkNCQuBBUb19ytvoc9E0LrNp0yZsA8vlRLl9+QG6
K1euwJP08/Nr3749VJymmw0iJj6VK1cuJhYtVlaPHz9u3rw51S3v1KmTmLdP
26BLN2nSBLHV7du3SVzourA+4rXODJNScG7fLqTW3D4cTnjU6CFt2rQ5c+aM
/BNZk1u3bg0cOBAOZ5EiRaZOnWr3E+DcPsMwTIJQ5j2uXr06ICCgZcuWX375
5dGjR2mlPBeadCzcgIkTJ2qxfr6YLw33XtTbJ/deBHHYYNeuXWXLlm3cuDH5
vS9fvoSloKOIQ6xatQoKvFWrVjAWIjEikhJbt25FGAIjAv85ODg4GeRjL0TU
ic/w8HCErmi+LPzXr193794dzj+96hHmMkb32k3K7VMtmgYNGmA/SgAlj8WM
HTvWiXL7IlASX3/99dcePXog1ELAtW/fPjntj889e/bUr18/nYnBgwdr0tvf
CKq3T0+gzJgxQw7hsbx//378WrFiRVqD3nj27Fn5eUOGSRE4t58gxItI6Ctp
iUmTJiGq+uijj0aPHi3K0QsNM2vWrMKFC0MzZMuW7cCBA5q9H9VJ6nn7Q4YM
oXf1Io6gd+IozYe2r1u3Ljbw8fHZsWOHXrUm5gQ4t8/YC3poTjN14Dt37rRv
375hw4YnTpxAL4qIiLBm3j7cJKq3nyVLlt69e4v1b968efLkyc8//0zOUnR0
tPhJ+Ampvq+au+up+Tdu3IDA06dP7+XltWDBAuWlruJz8eLFbm5ukCGcJTFv
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
7t3bcFqjZqdHZpyUdu3a0RuaihcvvmfPHuX2hNBo3v577733888/a7rJFYsX
L37//ffxdw8PD7hbFlTZxo0bsQ08rtKlS1P9ZGG2HNNgGfbD58+fb968+cMP
Pxw8eLAIfKjVkAl0O7x3KqevSeNN+CkiIuLjjz+m+c+fffaZLKi0PPmZcRxi
Yh+fUbKs8+bNw22Lfjt//nzFxdKnW9MOindEiK/iqU+9Pw+DBQ+Q5u1Tbl9+
U4ymk79yXCVwkDWJ8sYZWoCtHDZsGK4gFLVck8cw7kioEDSTke3Vq5erq6un
p+eaNWv0G+zduxfGGnakWbNm9JScIZZtASnYt3GLDBN//PFHjRo10MCAgABR
FEhJJaWgfReHfvXqVXBwMK47zdsXAk+zvgfDMCmIMjatmaqYjhw5Eop67dq1
Srr18ePH33zzjY+Pz4oVK/RRPCyLl5cXlFvJkiXl5/ss2zKZ/zNx+/ZtWKvm
zZtv2bJFicsiIyPHjBmDiM/CALHDEhUVRRX1AQylMvcJDacwClasaNGioiaP
7Db07ds3Q4YM2KZ+/fp3797V4j5iKfsA48ePp2PVrFlT1ORxZBRTKMaY0N8+
+uijH3744eXLl/KWiMLmzp2LrkiBpDyTAZ87d+6sXLkyzdunmjya+bdKMUxS
I/dtZcxO/gmOdI8ePXCDo/du375dni9tYUQg1WNhUFiOgET4QG9gR2zVunXr
S5cuaXHNHLTKJ598AhVKjxjbjD6JjXOAsm3SpAlFdidOnNBHNDYHWbSff/75
x93dPWPGjLCPV65cUcSCrwsXLoTSg5mACUDcpxnN+9KHjfJ6w4EkYapCQkKy
ZcuGBk6cOBE6OS0nThkboN5iOPVRKDo4PzRvv3bt2gcPHlTUpuil8FRpHI3m
7Ss71L/MLg0CRQdVkClTppYtW8rFnyHSCxcuwLPCjYwNsHD8+HFNNydzyZIl
bm5ukDB0zsaNG2OMqgfTX8S7dEuVKiU7/3qV4lDI02hfvHixbt26Fi1aDBky
BOYDZgL6E5/37t3DwvXr1xctWpQrV67FixdrOgdSeZeubNNZPTIOhRKPi3fp
iiE58VManwelzLHX4k4/EwZL8QP3798P3xIihQcoq1xlFqWcx1YWlMyAPn8i
e5XQTvqaPEpDEql+v/3224IFC7777rujRo2Sp3pqpoQ2bESOHDngE+JXy/M6
lEJtypQ8BbFy9+7d1atXRwM7duwoz9vXHMa4UBPEvH14I8uWLRM/aUZPKTIM
wyQdyjA0viJcGjdu3Mcff7xy5cqwsDC4rOHh4TAfDx48wOeJEyfatWvXqFEj
2C+xE6GxYVlo3n7p0qXpXbrysaxUa3Chx44dC7OIE7hx4wZcaxz6rgmcDAK9
Nm3aNGvWjJ7Udi4g5CJFikA+sIM9e/aklUJKx44do7ffItQaOnRodHS0PIeK
QACbOXNmuSaPppsfRTscM2YM9obArWbNmkeOHFGcimRrspWIE5Mbe/v27WnT
piHqpKpQ1A3Qagq44DV17drV19d3586dmq5Rv//+u4+PD42SzJw507DJadNf
ZZIHmvZMg5XyenqRq5y0J+guhvb7/PPPcYN7eXmJeftih5p5TzjVEyOhn1cm
Rw1YPn/+fNu2bf39/WGnSGNQfoYSNdu3b0cc1L9/fyzbJsy3cUulyerl6NGj
TZo0kd+kpkSCb3XlLBJKp06dYCNgRBD1UHcSe3v+/Plnn32WKVMmerGaPtRS
hvJFUCnWK3/Rjx38+OOPCOWgWoOCgmi8lRNZjPXE6OoSaFKQjh6FPgxzT+mR
qlWr7t27FytfvXpFNz4NCtAfoS2bN28OJwdOUa9evYSG1M/oS4Pdkpo8f/78
999/P0+ePLNmzYJvDzGSSYJvP2nSpMKFC7u6usKJWrNmDb3hXR7sw2YLFy4s
WbIkvWyXJoXKA820JV0RqslDpSHg/L+Nfd2JfDIOhfJ8KL08F03Inj17tWrV
Pvjgg+rVq1epUsUnFqwpUaJEwYIFly9fLv4uxo9gXGjefpYsWagmj6L2GSal
0A/oR0ZGPnr06OnTp/iEHaf3REyZMiXSxOPHjyMiImKkSVYOGDMmNRZm2uu/
wg0jueET7mXdunXhIME2/fnnn5Aw1iN6JVdNeT2ccjhzORNRbVJsht0+efIE
h7t06RJcWRcXFyje77//Hmugyek6anGfw9KMpqNYw5EjR7p3745QGiru+PHj
smQuXLjQt29f2Bf8pLwgTEH/9mH9tFIt1prA4lMT0A83bdoEVQx5wqU/ceLE
w4cP0XAx9VHs04Z22QVcXFwLyBynGhgYSPX258yZg5PEGvwqDCvn9hmGSTZk
FxTO/5AhQ4oUKeLm5gZvFoEVHFos1KhRA14uvnp6eubLl8/Pz+/w4cMUQ8mx
AJx/b29veixX1OSRczJafEoYJzBw4EBYijJlyuCg5GPj0FggBxv7z5UrF+yI
eKGqsxBjeq8ZrDCcqGLFiu3atQvKn6SB9TDQAQEB+Cljxow0h0qZPEkmr1+/
fghjIeEPP/zw9u3bspsRI02Hw/Lo0aMLFCgAQwM349ChQzHS68wcMNaI0U0R
QesmTpyIrojIFH2AuiK6AS0ARGGFChWqU6cO3Ce5ReRBQbz0Ll1Er9OnT9d0
Dzhw4Qgm6bBy5oy4/UVI9c8//3Tp0gWhFrr3unXrKC7AT1Qr3nDPaQFD6ZnL
EF68eLFx48Y5c+aEtaphonLlymRBYEqgOipUqAD3e/jw4VSAOvFA5yB2o1Br
27ZtDRo0gCZv0qTJ7t27H5tAJCLXE0vMRYwxvdemXr16aODYsWPptSzCEOCI
tWvXRhQ2aNAghF3mjmg4QiRHl8rT3whPnphAtDJ37lyyQTj6/fv30WSsp+pA
ho+xM4xlRIdB7+3WrRvcS7g3uXPnhvnGJ+7fZs2atWjRQqQOoCRxgzdq1Khm
zZrZs2eHtnRxcYGhx2b169fHliEhIcqe0yw3btyA0+jh4QGpBgYGLl++fO3a
tT/++OPQoUPLlSuXI0cOyHDFihXQUeJ+h6MYHBwM8TZs2LB8+fJUkD9LlizQ
otBsTZs2XbZsGTmT8KmwK6zB+kqVKmXNmhVqIUOGDO7u7rhA+HtQUJAjO1py
9zh69CjCFvHWe/lTvG3c1dW1YsWK169fF3+EBUFfhaygkOn9VlTgiPoneuOi
RYvEaL7GHZJJIZTXtsLJbN26NeJof39/GpKjdzxhZatWrbD+888/l7dPiVNO
YZSAVClRqGT+Q0NDP/nkE3pQFHc9VAHkCZOEZUgYEX3btm3hGWpxfSQRlStP
d8oJE1n4YhkqCDvEZcLhYPVIccErg63EaeBwWA8drgwH2DyPRTMVGvrss8+g
/WBNjhw5An8PPu3ff/89btw4b2/vli1b7ty5M96yY8qLHuSfFNnCrLQyAekh
xs+VKxcaCLcWhobk2aZNm7/++kvJfqQIOEnIHOYVZwXD918TVatWxSXAGpxt
nz592DFmGCalgOYZP348tCi9zpU+hX8rXFw4+YgLEAuIsdelS5fCv23SpAmc
BAQC2P6dd95BUNDIRPfu3Xfs2CEOoVlUcV999RXNXaeji0MTpDZhwmBQEvMa
xJQCsjp16hRkUqxYsR49ekyZMmXNmjUItRBwQUrwB7JlywZbIMZNtFiLDPMB
8ULIhQoVSp8+PUSBy0TvkUQQQdWksXF0dPSgQYOwBlvC3CMSoWcEYPFhE+ED
4EI45sCx6BJimsGsWbPy5s0rd0XRIQXobL17946IiBA7+eWXX5o3b47Gwt9A
1E/d1c3NraEJOLSbN2/WH5Rh7I7smSuOq6wGscHZs2fhpcM/xCduXniwNPej
du3aFGqBxYsXiyoWjnkLJwPmPGR5ghm2gfaDkiRjIayGsCBkyKAVN2zYQG8e
t+FM5CgMe9i4cSNdKYrsoLhwlAIFCuBM6PIhEqEKS5pkBG24jmIwaP369b6+
voggZs+efe7cucjIyPv37//xxx8BAQGILwYOHIhOpRzOckPk/SvaWDPVgoNh
QgSHzypVqpBlwYEQ0VCKAJGmPHjBMAkFne3nn3/28PDImDEjrDaMO3QgPukR
FfGcO+7ZAwcO4KfMZoBrBP9QHsrX0qStF4kdqIJ58+a1b9++WrVqnp6ecIdK
lSqVM2dOiBru4tatW6E9xGwHSjd169ZNSBiXIGvWrLgKWAPHPkeOHFSMC9tD
yN988w3W0DWibeTLB49LX5TMQVBKNu3du9dCpwJoHYQGla5JevLy5cvmtocc
IJPBgweLYpJamuyHTMqif2sben7BggXN9VsYd/TbIkWKiPF97rQyws+UP+fM
mWNOnqQ/yX4l/jkm+iNUOpRVFhPmjgtXzS7mj84ZrT58+PBXX32F+LpTp04D
Bgzo37//Z5991qJFC8TgO3bsiI6Otm3/ZKmVIY+xY8dakCcZl02bNqXgS0zE
+Iu584S9wHXHeXp5eYmnaxmGYZIB2e4jNv/iiy/gkUIjmdNX+LVw4cL0clIx
Ufzrr782tz1iAR8fn59++kkYCM2in9+uXTv4z9CK2bNnxydZLvrEoSm4gNdB
z/wmuXTsh/zEGYKICRMmNG7cuGrVqqVLl65QoULx4sXR2Dp16kyePPno0aPY
RrZ0+FqoUCGyFCQZmDYhYaw8dOgQ2Y6oqKiGDRuS3OgiYkv4aRAalrGwYsUK
zYHjLHki7ujRoy2EWugMkEPevHknTZpEbSdZBQcHY73owxRjYhkSwN7Kly8f
EhIib88wyYnsx4o4CwrBgh9L2g+aWf8eNEbv20O2bm5uFuwRaVFsc/LkSZtD
V9lXxznMnDkT2tXcQQnxIFti4mWhuhFJIbTp2LEjYqtu3bp9+eWXCLU6dOiA
yAth0ZkzZ+xbu6ls2bKwy6RXSalSXEm2hkIt9G1+HopJJMqoGS0rZa+0+HwY
ZTJkmq1jJnj+/PnZs2dXr14dFBQ0bty4kSNHQkusW7cuLCzM3ICpUiBRCJxu
c7FepDj0OXzHH4yW58dqVtS70881tbC9PE7KOVImBdG/aMxyUlS5wbW0OnXf
HHLOPN75irIA5eJINh+UkN88a257eX5gYlSQSERcuXJl27Zt8+fPhwWBHZk+
ffratWsvXryYyHqh+nlQlkUkK94U9DmteRRCGEHZEDAMwyQ1ehc0of+1/C+l
lm+8ypCefdMHC/Ijwwk6SUdAMV5Pnz7dv3//8uXLYR9HjRo1YsSI8ePH//nn
n1iv/FEZztZMzZdz4IYTL7W42SfNGcIKOcLSTM2MtzcqcZm8H/lVfeaKDTq+
TJhUid5Lt7Cx7JNzikCPHDRZGTrZNmdevxNNUjvQt/FeF31OzLZDUwOjo6PP
nDmD2CooKGjs2LGBgYHz5s3buXPnnTt3kiKZKT9KJp+GLPl441yGMYeSi9CM
OphmXe9KfDYjVRIT+8ICy46QOf2pXAKlIKfhsTQHtllydsia7eVIJEHNkat5
cI6USUHkKXbm0A/SOWPEnXTo1aA1DqeykMj0vgXFq0dcUJuVj5JLF9ZZX0Lf
BpSBJ+tPUo7xHTBnrhRV1hzyJBmGSZXIE1esfF5MUVBWqmIrNb/hORjmb53R
39CHOWLgQ264UpBHrJdTUkq5P3nc3NDuO8uosfXnqReF7L2QDOXOKToMz39m
Ugp9fsByV5d7qePfvCmI0Jnx2iOhFhKjEg3NkzV/idG9WMSG4yohnjAZSoRl
RxUnp7P0u+XEPmMXDAe/5I4n0qQWblt5+7e6l26nHeLNt8h+pjwtX/5JbKns
WdmP8pPigjpmQptOUp4DY8156htrAcMHHxgmOaF8qXJLxtsb38aSBjWnNVjQ
gZY3tlkPiCyN9T6eHQdYZUuaoLZbv3/N6oF78emwA8eEEL7DniHDMKkYC268
4Zay5x+v1pKdCitVsdDe+jRsggZ2HRbDKU+GYqEt5RFqTaryp78Qhk9YO37u
xbBjWOiKioMqdwnlmXFF1Ergb5+zZxir0SdgLQxTxsQ+qiN/dcxbOKXQm4ME
jQzaJkwlwWjDMEHilY+FzpB0ys1cYt/yNgxjJWIOQ2Kmuik6NhV4jIkk3jy/
ZubWVqaXKJfD3AwTeXunmFWiP3nDbWjBtklQWuJmtzJMIrFyOpxtDlWaQgkk
rSxwZM3AtDX70WI1iZWFa8RsFrskmc3N8bA5M6PYCy0+91U/yuDgetVwQibD
MEzSYahtrPFv5WVr5gCYswgK+qI98gx2JWfrRKrSMJUkN018FbKSn+QVKHXt
5HDDUMLxbuA4xEhvc9MSUnBPXqksCMT8MaeINJnUjfx0ieUtDb1xx7x/Uxa5
fEe8kACVSpg2Y83fDS2gXYYVkhO98ZI/lXemMEyCMJxjb7jGyjR1DJflMUKZ
TC5LWNzIevUi26yYuDOBrQ8EHA0bxsppnr/1Q8OyYeJ+yCQ/yrMzVnZCy4N6
jJbAlLKIbW1WAvqxRS0+d0tOkph7r0qCDq30CrFgfURjjoTOXxIbKPMeHQd5
0McpxiAYhkl9WD+wq6TZLW9vs9tvbijceX0My+loLa5gFbnJzpWYtK/fiTI/
X58FcljLIp9tghJ0AjnaMiwnq3RahxUFk4qRp3BYqULl9Kn+nZJpHDEMSl/j
TSzrMy2JrEFq+OiQhVPVYhVU4kM8zfyMrMTs35B4HznX52MZJqEY9iJlAr81
t63SA9Nyh4yRCnaJNVpc8SqOojIyYsGB1Kd0ZAuFBUeuf6h0JGuKucW7xvBf
snAcUxRMGkEehY93My02ccqdVo/1s8Vk7yiR3ruib63xXekME/kQnH5NvKbB
hv1bP79diN3xe6Z8no5/tgzDpBqUCTlafCooQQOshklUy3bQMP2l/MvppsHo
g9aY2AeWlbESTSdYOT4yNzqgpMRjdDPWrJ9o5CDEWJwrImRiLlxScm7Wp1IZ
JqmJMfPiDHMbi4VEpqNTJYqiSOj7X2we5tPrE2vS+/a6doaj8G/j1tBIilfS
6NWy3n/g4SfGZsQ9YiF7YOU4WhoPqOP1zPU+oX5up+FPhlU7FItm/cVKKRQF
bk36SxkajrdrsSZkUhxDV8dC1zUc2uOeLLDhSRzFEiWmdo1y3HiVvFiw2Rpa
ziHYxbxaTnHokY2RI1t52bKwb8wwTHJiW5YjQbnihB5Cn+tWzKKTakgLZsic
5peDKb1xVzI8SjInJu6kVsP9Owj6gZt40T9kKsvKXHzqmD4Ak6ZQemy8/rle
ATKEYfBig4lJ5AnEuzf9r7adgNJh5KPLO0wKPa8fTTAMGB3WxDAMwzAMwzAM
wzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAM
wzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAM
wzAMwzAMwzAMwzAMwzAMwzAMwzAMw/w/9s4zqoqkCcNLFsxpDRjAjIoIKBgw
YsCECXPAHFFXXXN2zVnXhDlnELOIqGvOCUUBkcWECTMGdj/ne8+tY59m5sIq
il61nh9z5s7t6enp6amuqu6pZhiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRiGYQycf/75B9v//e9/2L5//54OYoeO05HEjtP+v//+K7Yi
K1V6OSvaiY+Pl4+L00V6+bp6yyn/a/jI5aebVd24IlUd/hL1I/8lak9V5zgo
H6HE8rXkKyoJn5GBIJdZbm/adkWVINebtp3IjY325dpQpAoR15WTMUwKIcs3
RRICcrsluCl+DLIMFAfFe01SVEgV7GjTy5Lkk66r6oD0SlqxL0s2lfT+JGSZ
Jueg7VO+bP8o9/UEyUzVVb55p6yV8IrUHohvXkiGYRiGYRiGYRiG+eIIX73K
ayp7RVSJ/6eDjixbtqzGB6pXr46tu7t7zZo1se/h4VGtWrWqVavST+zXqlUL
O/hZp06dYcOGiUzevXtHOyq3rbDEVcME3yOiJlXuF/JBaV0lonLq16+PqkPF
Yku1hx2qUlHn4kjHjh1XrVoVHh7+5s0bJaFX/Gvd6GchRii03jPVQZX/E39t
3rwZDUxufgA/qYrwF1Uj/sVB2qHjv/32m97WzjBfHHrT9b6YegdJmf9EFp4q
ESF3VXLKz5eHWhkljivS0KRel/vnXF2Vicg/sfJ8KbSucq0ETrmrfyR6R361
MxCSN7bCMAzDMAzDMAzDMIaG1lFPP2/durVp06ZBgwZ11eHj4zNnzpzjx4/H
xMRop+rNnz/fxcWldOnS+fPnT5UqlbGxsYWFhY2NTalSpZydncuUKeMiUbBg
wV9++cVYh4eHh1wMeR8F2Lhx4++//96lS5dOnTp169Zt3rx5J06cePjwofLB
j/EV6ucLIk/1lOeT+/n59erVKzAwUPylnUxerVo1VC/qM1u2bFR7lpaWzjpw
0NXVFf9ii/28efNmzpw5T548VatWHT9+/J07d8SUYJGbIXhgtIgHqnKC4Ra2
bt06bNiwLjp69uw5bdq0I0eO4LhIL+5u9erVqAQ0s8KFC6OKUFempqaoExxx
cnJCLaHGXHVgv1ixYkZGRlSfZcuW/RY3zfx0JDbVWbyYt2/fXrBgAV7ekJCQ
b1C+7wpy5GoFGknRiIiIhQsXQmKgC4PoQCeCPuXMmTNxcXGUTP7Q6VOvK/aF
lxgPDp3mkCFDOnfuTMKKOs379+8n8/Y0iJ5aLsCTJ0+WLl06YsSIs2fPykX6
gnJeXJdy3rFjB/qs3bt36/0O5RuiuvHIyMi5c+dOmjQJLSGx0R+GYRiGYRiG
YRiG+d5R+dVfvny5a9euPn36eHl5VaxY0dnZ2dra2srKKk+ePB4eHrNnz759
+zYlFi6Re/fuXblyJSQkZNasWXZ2dr/88gsSjxw5MjQ0FMdpe1FHWFjY/v37
+/fvny1bNlNTUycnp7Nnz6q+7o+LiwsICPDx8WnUqFHlypVRgLx581pYWOTP
n79OnToowN27d7Ul/y4Qt/nixYvz58+fO3du9OjRLi4uxsbG06ZNk5MpCSdn
Xv1A06ZNLS0tyRcdFBSEusXBy5cviwR79uyZO3cu6i1jxoxZs2Zt0aLF4cOH
X79+LYeGMMxhEe1kWjRFtJZ+/frhrt3d3dFabGxs0BTRIGvUqDF58uSbN2+q
Tn/8+PGlS5euX7++cOFCe3t7IyOjHDlyDBgwAI0TjRD1Qw0SabBz4sSJgQMH
IjfUZ758+fDzu2tRzPeIyseI9zE+Pj4mJgYCYfv27V26dIHEQ2sX431MEqhG
palKnz59umTJknbt2jVo0MDV1RWVmSVLFvQ4pUqV8vT0RCU/e/aMTvnM73To
cpBUeFh9+/Zt2LBh1apV0WdBUqVKlQpbSCrI9qioKG0hP0fa/PPPP48ePULv
CQmJvrJQoUKQYJs3b0656eioMUhRXHH8+PFubm7m5ubYEV/bGQ6ogejo6DNn
zmzdurV9+/Z4lcqUKXPgwAE5rh3LeYZhGIZhGIZhGOZH5eXLlwEBAe3atevY
seOiRYu2b9++c+fO+fPne3t7w0Y2MjIqWrTo1KlTxZRplY3s5+dXvHjxX375
pWDBgr6+voo+Uzo+Pv7mzZvIJGvWrLa2ths3blSkIAavXr3asmVLy5Ytu3bt
umzZMlwdZUAB2rRpY21tjQI4ODhMnz6dxhe+IwtdjvOMih0yZIiXl1etWrXy
589vpGP27Nny1xPaDxlo6+PjkypVKtRw1apV6SnITnvyUz19+vT48ePDhw/P
lStX6tSp3dzcAgMDX79+/V1EIRA1EBcXt2fPHrRDtMZ58+ZRU1y8eDGOFChQ
wNjYGG1s/PjxN27cEOfKLtO9e/c6OTmhotBu0WBEGjmyEyoEDWnhwoWZM2fO
nj37ihUr6K/voqKY7xfV6hK3bt2aMmUKXm1PT88KFSr8+uuvJiYmaL1o8N+6
pN8N8mz2Z8+ezZw5s27dun379t28efOuXbt27949ceLEevXqpUmTBqLD3d0d
x4V7PxnIUvfNmzeQThBTHTp0gIDasWPHtm3blixZgp958uSBbLezs0N/h15P
tepHMvovOjc2NhYyDXeHe0RHkDNnTlyFfPvJzjlp0BePHj26YcOG6LMKFy5s
ZmYG0Qrx+/bt2y97oc8kLCyMXiU8a1dX12zZsuFxk2+fEnypcEwMwzAMwzAM
wzAMYyCojNyzZ896eXmVK1duw4YNL168oINv3ry5ePHi4MGD8+TJY2JiYm9v
P2fOnJiYGEWzYt3WrVtLliwpfPtiSqTKw4+DV69ehfWdM2fOlStXyoU5fvx4
/fr13dzcNm7cKNzR2Dl37lz//v2RHgXAJf78808KzvPdgXusXLkyarhly5Zt
2rTx9vbGHRkbG8+cOVMV34AQbkCqiu7du1taWhoZGVWpUkV8vyBylrd4QKNG
jbK2tjYzM3N3dz958qRiwD4NbbQENDlUjqur67Jly54/f04H3717h5aD+8qX
Lx+aWZEiRSZPnhwdHa0KkYGfwcHBLi4uSGNjYzN16lQ5Z3maLhLfuXMHbT59
+vRosYb5RQPzwyBLQvFqnz59GjINL2mrVq3atWtXoUIFvLM4sm/fvm9dXkNH
70u9fft2SAb0L5AhQnK+fPny8OHDDRo0SJMmDUQu5Ofu3bvRsyTvuvJQwqlT
p5o3bw5JtWbNmlevXlGvFxcXFxISMmjQIMgfXK548eIzZsxQBedJtjSOiopy
cnJCP4IeBP0I7pQGMTdt2qSkTNS1unXrQpxSn4VWSuPLkyZNMjTfPsS+s7Nz
9erVW7du3bZt2/Lly6OvxPbgwYOKAcejYxiGYRiGYRiGYZjPIT4+/v2HtXSn
Tp2aLVu2XLly9e/f//Lly5SALOLQ0FDY9VZWVmQsa/1OSOPv71+iRAny7S9a
tEgcF2n+1aHoYibgWjY2NqtWrVIk3/WoUaNy5MiRO3fufv36RUZGKlLMhJCQ
kObNm5voqFq1Klnr3xHy0sNr1qxB9V67dm3u3LmpUqWiefsipSoysFyBXbt2
TZMmjampqbu7u/z1hOwzFPNCw8PD69evj/R4aoMGDfr7779F+hS+109G+50C
2g/aIVpjjx49zp8/r0hx9dEwunXrljp1arQ0V1dXtDo5K6rnoKCgUqVKiXn7
cv2IWhKzfJcuXZoxY0b60oTd+0xKo5q/HRUVNW/evN27d0MgHDp0qEOHDsbG
xo6Ojnv27PmmxfwOUIky+hjHy8vL3Ny8cOHCM2bMoBFqMYxy9OhR9FCoXohQ
dGc0LPiZMXkgXtBh5cyZs1evXqLTpIFaPND27dujMBBE6DTxiD9/3jh9mYX+
ws/PD53y2bNn0VfSIOaWLVtUgfG/FGvXrl25cuWFCxfCwsIgmSEtccVx48YZ
mm8fXR7EOOoZNQMNoVWrVuhbS5cuLebtKwm/cft2JWUYhmEYhmEYhmGYLwzZ
ue3bt6fVRfPkybNx40aVx3XevHnZs2dHApj2U6ZMUUWWUHQxeYoVK0bxUhYs
WKAkdGL8/ffff/755/z58xXdBGyY3s7Ozt7e3nIxWrRo8YsOW1tb5KYq4YwZ
M6ytrfEvCoCsDNBHnRjCjaBaCXHhwoUWFha4o5kzZyrSdxBitEWVQ/fu3a2s
rJDe3d1db2Ai+UMJ7C9btqxQoUIUT37Pnj0G7s2QQxL179+fmmLOnDlRSyIN
1cnatWtz5cqFf9OkSTNy5EhV9So63z7F5EFLlmPyUA3fv38feU6ePFnRNcXz
5887Ojo2btzYkNcjYH4AVB5X+Se9yFFRUV26dEG7hWzkePv/iezHFpKQOinU
oYODAzodVS/WunXrtGnT4l90JSdOnPjMS4Nu3bohNxMTE0ik9evXq+KqQc7k
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
wzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAM
wzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAM
wzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAM
wzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAM
wzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMY2j873//w/b9
+/f0U+z8888/4l/aEvHx8fK5SE/br1bgnwS5St9/QEn4LOTK//fffxXpedFB
fi4MwzAMwzAMw/wAaK1O2UoSR8Q+2bPiXIWNI4ZhGIZhfgL0Kjzag1qfP5MS
qJTVpNE+DlZfGYZhGIZhGIb5YfhI+0ie6USToGjLMAzDMAzzg0HzH1QKkpiQ
r2gmkKvmjSvs4f8qaD+sED/l+Spiyw+FYRiGYRiGYZgfHrJ9EpvVT3/RETaR
GIZhGIb5URGaTxKzIBKbI4GDPAvii5NYTJ6PPzc+Pp7n7TMMwzAMwzAM84OR
hHGk16ply4hhGIZhmB8YvXoOzWogp70cez/ps5gviN7vKcRf4oMLMS6jSJEk
ebSFYRiGYRiGYZgfho8JHisbUKpPmwmeus8wDMMwzA+GVkf6999/9UaA0bsv
L1HEpAQqD/9HqqMcLolhGIZhGIZhmB8G2USVI+3o/d6Z7SCGYRiGYX4ShC4k
9B95yvc///yjWntI7MgTxVl3+uLonbRPla83gJJ8UP7mgmEYhmEYhmEY5seD
vlbW2rNKws+cZbuJ7VaGYRiGYX4wSM958+bNnTt3QkJCgoKCVq1atfQDa9as
2bZt2+XLlyMjI4XiFB8fv3fv3rVr196/f1/h4Dwpz7t3727dunX48OFNmzat
WLFi8eLFeDRbt249d+7cgwcP8C8li4uL27Nnz71798SJ7N5nGIZhGIZhGObH
QMxiws7jx4/Pnz+/e/fuZR9Yt27dgQMHYLfCLKL0sFvDwsIOHTrEc58YhmEY
hjE0ZM1Enn6A4/STouWIGIOq+fbir9evX9+9e3fTpk0DBw5s3LhxiRIljHT8
8ssvxsbG2FpbWzdr1qxDhw5Ig5QvX77cu3dv0aJFLSwsLly4oPzovn0xVV5v
QHvt5HkokGJfG+AxsfzpLJGnOPLmzRtop/7+/j4+PmXLls2cOXOWLFly586d
K1cuZ2fnJk2ajB49OjAw8MmTJ9BgocoWK1Zs//79dEXk1q5dO3t7eycnp5Il
S+LJOjo64qejjuLFiyMHBwcH7JfUgXNxBMfd3Nx8fX3lki9duhSnIw2dSxni
XGyRHj8ddDjpqFmzJprKmTNnVBUoV2Ni9UDjRyINz6thGIZhGIZhUgjV58lC
85SDjsrf0orj4hT8NXv2bNKoSdnGlhTjEjqEzkx6OJRtHITW7eLiAvVeFUVT
tcaZ0J/l8nyPPmqya1TGlJKw/lX2rKLv63LaeffuXUxMzJEjRyZNmlSnTp0C
BQpYWVnZ2Nhkz569SJEitWrV6tq16/r16yMiIlBv9+7d69mzZ8OGDQ3ZYlXZ
lar2pl1bTdVOxM7y5cvRwNDMhOFGLRPtDTaa+EmmHx1Heuy0bdtWkdrb1717
5mdBll3y26363IaXDvxIhHzQdhnyVvQyev2ByXjfxXNUSSrZ/ahNL0j2w5Xl
ntxr0K3Jnancy3z+F1ui/xVZyb47JeEtf0P5KfpZeQQcO3JptdE/GMNBbqvY
f/PmzcyZM5s1a9a6deudO3fKb5yiac/4+ejRoy1btkD/KVq0qJmZmampabp0
6bJkyVKuXLnatWvXqFED+lK1atWgMqVOnTpfvnyDBg2CzlCmTBkjIyNLS8uz
Z8/+JDqAkBLiflHVQUFB06ZNQ1U3aNDAy8uradOmy5YtO3369KtXr1TS5mMy
19bhixcvdu3aBbW/cOHC6dOnr1y5csuWLSdMmAALYs6cObNmzcJf5cuXd3d3
37BhQ2BgoKenJ5JhR/kggnr06IEEFStWzJ07N56viYkJniOUOjxfHMRzrKDD
zc0NyfB8f/nlF6SBejxy5Eh5bALqMdLgFDs7O3NzcyRLlSoV0lPm+AtZUSbQ
D3PqcHV1HThwII3+aNGGG1Id+eFbFMMwDMMwDPPN0foZcOTevXvQ6jt27Nik
SRMo+Y0bN548efL+/fsfPnyotacWL14M1bpSpUqwp6BFQ0+GlVSwYEEoyVCz
aeumo2zZssWLFzc2NoZaji1Ud/nqsivm77//XrJkSfv27Rs1aoSrw7ibMmUK
CvDgwYOvUCcpgdYmpe3KlSthQ23fvl0OPao6RbYU3r17d+3atbFjx1apUsXa
2ho2DgyxAQMGzJgxA/YRrKRx48Z5eHi4uLj07dsXlsjo0aORrH79+soH14fh
WxlyG0NLgCHWs2dP1BIaA1rjmDFjDh48eOfOHa09tXr1ahiMsMhg7lFThMmW
N29eNEIcLKdDNMUSJUrA9kcatEaYclT/vJQek9LI77hKnOL4zZs3IeuGDBly
9uzZb1G67w+tx572Q0JCpk6d2rJlS0hIiA70ZZAPR48eff36tRyvLBlX1OvK
fvz48c6dOyF+cSFyjk2cOHHbtm0vX778jJtLFHQEhw8fnjt3brt27ZroGDx4
8PLlyyEwVYNHeov9qQi3Krbr1q1r06bNli1btD7/z7zK5yP7ZiMiIvAIUC3X
r1/X9qqMQSErRaSoPHv2DFoNeWgzZMgwffp04TTW+zRv3bo1fvz4woULW1hY
GBkZpU2btmbNmsOGDUMbCA4Ovnz58pUrV65evXr69OmlS5cOHDgQOirSFChQ
gDzAUBWEyP2B51fr7X1Q1aglKEWOjo7Ozs6lS5cuVapUnjx5oNJDoYLYfP78
+SeNh2rTQC5BWEHRgnWAZ9qjR4/AwMDIyMhXr16J9Hfv3t28eXPv3r0bNmwI
DTZdunR4NLt27RKZxMTEwDaJiooaNGhQtmzZ8C+K6u/vD23w9u3bd3TgQsgH
P4OCgry9vTNmzAg1r3Xr1lCblQ8N5sWLF2gtSLx27VrcMlpLzpw5oVjS6bgE
dpAAmaA73rBhA/RnpEF5UC379u1T1V5iw/SiixFC6QduVwzDMAzDMMy3RTtX
/OnTp35+fu3bt4d2XaVKFaji+fPnNzMzg+pbsWLFcePGQddVEk6ljo2NhSYc
HR29cOHCYsWKQd+2tbWFpUDKNlTl2zqgKt+/f//cuXOwtXPkyAFjCobDqVOn
VHMsYWVs2rQJOjnUaQ8PD5gbNjY2MLty5cqF8kydOhUZagtv4Kg+48U9Hj9+
/OTJk3369HFycjI2Np41a5beyU6qe3zy5MnevXtROb/++isMjbp16y5ZsuT6
9euPHj2iBDT/CrX6xx9/NGjQAA8RFhBMXU9PT3kO/Ne5649HNn/EQdRSQEBA
9+7d69WrV7Vq1XLlysEMh2GIxoN92Oy4cSWhMwd2ItohLDtYozDZ0BTRbkeM
GEGmH46T9UdmXVhYGGoJCVD/aLFHjx4VhfkGVcD8BOidXk7ziqOioiATNm7c
2Lp1a7RJZ2fn3bt3f8uyfg8kJi3RJUGiNm7cGHIPvYaLiwu6D7zmhQoVqlGj
xpo1a76Uv52EKsQ75AnkTMmSJZs0aTJ58uR58+ZNmzYNEhhHRo8eDfmsV8R9
KqLPhWxcvHhxpUqVatWqNXTo0D///BOX69y5c/ny5SEwT5w4oRrG1bvq+seD
0+Pi4tCtHDlyZMiQIbgpc3NzKAMiXoeqkMm8vc/mvS6ECMQ7XiV0Aah/PHd0
FgcOHNB2r9+R/vCTIN4RvFDoyhcsWJAnTx6KpZMlS5YpU6ZQMtX3enQK1ELq
zUV6Hx+fM2fOiMVz5fSU/6JFi2rXrk3hegCa9KVLl3743l90OuIIqgh1my9f
PujbqPODBw9CNcWbvmLFCrzp0L2ho65atQrKp6IbUlQ++h0XyZ4/fw7xCM0N
tV2kSBEIK6GyKhqlFHoaFGOouHgoSC986XL6CRMm4NVGAldX17/++kvvpfGU
IyIifvvtt4wZM6IXOHTokPb2kTnuDvmgpc2ePVtbHuqdoSui40AyU1NTdM2q
77P0KtWytOev8BiGYRiGYZivgJgTjp3Xr1+vW7euVatWPXv2XL9+PXTmo0eP
rl27tkePHjS7qWDBglCqb9y4IU6XdVo/Pz97e3to44UKFfL19dWr7oL79+8v
XLgQer6Njc2aNWsUSd+Oi4uDQdG8efPevXtv2rQJJjkMDRSpa9euSIwCwC6A
GQLj/Xs0zMkzg/L37du3WrVqFSpUyJ8/P9kvc+bMkY0OvXcHE2P37t3ly5c3
MTHJlClTu3btTp8+LXJWEpotL1++3LFjR+HChZG/hYVFgwYNFE0wEMNBNb6j
6Mq/bdu2Nm3adO/eHXYlLE20xo0bN8JSQxuA8Y6qg7UYGRmpuh36GRgYWKpU
KVRU3rx5Z8yYodcH+PbtWxiYGzZsyJ49O6y/ZcuW6XVVMUxKIPy0ERERw4cP
x+tctWrV0qVLZ86cGe+sk5MTxSJgkkDMG5cF5tOnT8eNG1e3bl3UKgQm5AY6
kfnz5zdt2jR9+vQQtm5ubnjrkYzSJ1seCnl79+5dyKI8efK0bdv22LFjz58/
R0cWGxsLqdWyZUuIoDFjxtAXZ9QDJtvVI2T74sWLId9q166NbjomJgZHcNGL
Fy8OHjy4ZMmSaEtnzpwR7n29M3U/iT///NPHx8fDw6Ny5cr58uWDXEU1jh8/
HiI0MafWN+Hq1at46FBgqlSpgvr59ddfUU5XV9fg4GBKIE/8NsB+8GdGfiJ4
fWbNmoUuniLkA3TQUJy0T42iUd28eXPUqFHk7MUp0C0HDRoELVHRhI2S506j
9Z44ccLOzo4C8ltZWZ0/f17r+v4hkQVCeHg4tEozMzNoiWFhYRCqYqYE3vFs
2bKRQxsKOc2x/3iQOXLD08S5pOvCNJg5c+bDhw9FPYsHJGtfly9fhnpsbm6O
57Jz504l4RPBuZDwNI5TtmxZiFk6rgrtSCs17Nmzx8XFBbnBmlA0U+vRydK8
ffLty1/Iyp+Q4BaghaL7IPf+kiVLktAV5ZYmN1cWOAzDMAzDMEyKIiu6x48f
r1+/fpkyZTZu3Pj8+XM6+ObNm9DQ0LFjx9ra2sJuKly48KRJk+7duyfWOFM+
aK3btm2jlcsKFCiwaNEiRTPDSgQKhgWBC2XPnn3lypUiBwAtvU6dOhUrVtyy
ZQuuS9lCr0YBhgwZkjdvXho4gHUQExPzdernSyHu3d3dHZZU165de/To0b17
d5o2NmPGjMSmVorAsxcvXmzTpg0eQbp06dq2bSvWfSMjQjsl+NmzZ5MnT6aP
zevVqycXw/A5efJky5YtXV1dYUaRRfnu3TuaQIXmhzaAesudO/eYMWOio6Pl
Eyl2xKFDh2jePtJMmzZNZWHJzRKn40IZM2ZcunSpSPC17pL56VC5p9ACT506
BbFZu3btbt26QSDUqFED72zJkiW18xUZLVp3H/qO/Pnzoz5DQkKUDw6fly9f
QmC2bt3aysoKItTFxSUgIIBm7yfjfZcnDD98+HD48OE5cuSws7NDPyUnUHTe
5lw6RowYIbpUvcX+eCASHRwcsmbNun79+rdv38ojtnfu3GnevHnOnDm9vb31
hoZO3nXRfZQtW7Zjx47ottBKU6dODdE6ceJEQ/PtBwcHOzk5QYXAe4TutUqV
KihnuXLlxJTdxCKBMwYCHg0a1fTp0/EKW1hY/PKBzJkzy/24vANddPTo0ejo
ybGPxtmiRYvIyEgl4ToR2tV8FN2HkFC9SAcT8fZ/+OahUgI3bdqULVs2VAIU
bApcI7h582alSpWMdQwaNOju3bt0PIkqEisiiTR79uypXr16Kh3jx4+XVXfx
RFQZQt3FM4WBgOdCA3OqlNBshW+f5u3Lz1fOEAoepBZEQWBgoDgoZCY62VKl
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
Nc+fP7906dKCBQu6du1aokSJtGnTpkiRIlOmTNmyZStUqFDt2rW7dOmybNmy
mzdvvnr1atOmTU2aNBk5ciQzq3Z5/fr1999/nyFDBogxTZo0aQMhXbp0+G/G
jBnr1q27ZMmSCxcuRPk5s0zdD93y2rVrgcknCLmlT5++cOHC58+fN32ZSwgh
hBBCSJhh9ULfvHkzduzYT/VvQebMmVu1aqUGwNC/NaGLJXfu3AgHVGgg0YHE
VlmzZt27d294NzaiMHXqVPQriEVEJMGpRKlBx6fu7u58tUQIIYSEPfrUQq9e
vVq8eHGOHDlKliwp7o2pIKH6ff369bNnz9atW9e2bdtcuXIlS5YMu3Tq1Gn8
+PHz5s2bP3/+nDlzhg4dWqNGjXLlyo0ZM+avv/5q1KgRvCYsR+1ctMhTpPT8
+fOtW7cOGzasdu3aZcqUKV++fIUKFUaMGLF9+/YHDx7I2Aa9xib+VblyZUgs
Z86cjo6O0aJFixcvXv78+atWrYp9K1asiN2xgG2KFi2aPHnyr7/+unDhwgMH
Djx//rzJj9JvVoRCepqpXhMICAjYtGlTmzZtytsoW7Zs/fr1PT09Dx8+bFg+
GLl+/Tq2qVSpEn6TJEkSPXp0yAqdUKQHceFfkBUkhgX8xokTJ5qNVKlSnT17
lnNmkc+N/ujp38jrv4ib0DlXrlwZTm2MTOhy00cn6nXhYLO+/fbbAQMGXLp0
KXTPa/2WH23w9/f/6aefYNe8vb2N0NYnciIpfHfy5El0lRYtWkC5wY40bNhw
7Nix+/bte/HiRbCPr8tT/5pJH2i3c+fOli1bDhky5MaNGyG9ntBGbznk8Ouv
v8LZWL9+fXi3ixDy5aLbIz10unDhwsyZM93d3eGyQofDO+3fv//mzZt11aoG
2yN6ggNcpUoVOP9x48aNGTOmg4MDggJ4szABlW1IRIA1BQoUEOfWycnJ1dXV
9D2vqqYCmzhp0iQ3NzfxrgGMFxpw69atCBssBIGpzepPxFO///47pLR8+XL5
l6mQrGF7e1KnTp1KNhA1QLYSPiCGxRrI9tSpU+FyUaGIXkVH95qw7OPjM2vW
rMaNG6MPSFfs3r07TCe6ovW75gULFlSvXh19plChQohGY8SIgWAKgTz2RZwl
Man8QnQISyHJGDZKly4duXoUiYxYPVirHwvV98MPP7Rr127//v3h1MxIg6n6
linxcuzYMVgNed6hY/ELm7J79+6nT5/qewXjwZc8mNw11YZr165NmTIFERaU
CU4HLQSj+ffff0OD6TmckMwvo+ffJF83YsSIWrVqlSpVClfXoUOH3377DbZb
j/sMe9H9p2LKg6GLIm5t27YthGnaMnzzVCaLcO7cuV69enXs2BHhZ6gcX8+X
mkbwGraaMOgAcIQksqNBCR4Q5pEjR/AEwdXBo3TgwAFDk7npYcdDN23aNDgG
MPe5cuX67rvvtmzZIhV4VOr+wYMHO3fuHDZsGJ5NOAZfffVV8uTJhw8fHuVv
kFTOf/z48S+//AJ3MU+ePOJLQ6rZs2fPmDEjvPGxY8fevn3btCN0C5TkkydP
0J8zZ84Mlz5fvnx//PHHo0eP0Mnxrxc28CdEDafLxcUlevTouAVwq/CsKUUX
8bPWendCfzh69Ci0KJzq+vXrw3DARfz666/hQyKcgRO+a9cu6xWJoC5evFi7
dm34k4iAvvnmG0gGMsQv/oWuiAXcBWy5Zs0a3AhsEzt2bERYAQEBYX7F5AtF
/zYZyw8fPtyxYwcUY5MmTfCMIwhCh+SXyx+DaTiiyuueP39++/bto0ePhoKF
lXF3dz9+/HjonlTpH9ypW7du4Q4uXbrUzc0tVapUiHNXrVplDShCBZgS6C7o
QFxajx495s+fv2jRIvGuofNhGsSpDh7W1uIqcMazZ89u3rwZLm7x4sUTJkzY
rFkzeHQhu47Pwv379728vODqN2jQIFOmTIkSJfr999/Du1GEkC8aU4ADi79w
4UIPDw9XV1d47NDbiAKcnJySJk2KQGDQoEH//POP2lglGcSPhZOfP39+OPlw
FSZPngxvFm4tDgi1j4gAG8D8Xbp0acyYMenSpcNmiMX05IBoeLi7c+bMqVu3
bs2aNWvVqiUNiB8/fpIkSQoXLjx48GBEE0Z45xCCgV7IFNcInwrmoGXLltmy
ZYMoJk2aZDLK+vAnBAgSJnz77beICxBBVKlS5cyZM7I+yvhjpqwXrm7lypXw
PKtXr47eCC8CASZ6QuLEiQsWLNi9e3eYfrWvqlME2aKz/fXXX8WKFYOg0qZN
C98Aa9Abn9hAX5XeePPmTfTSNGnSQP6Ic+Emhc9lky8MFV6paAsP+40bN7Zt
2wbVB70HXQdvFm5teLc0EqCPmDLemzMoAcQdVatWhR2pVq1a2bJlYXFixowJ
ZVu0aNG5c+c+ePBA7R688+p2EzZu8eLFcOxr164NZQWbBdMGTYX4rkiRIv36
9ZPhW3pcFuzzyo7QZhMnToRBxOnGjh2L+G7evHkdO3bE6aAwYVWtXyGF0GIi
1Lpy5QqU5G+//VajRo0UKVJAwcKEhfzIoQha8ubNG2nnzJkz0c5kyZKVKVNm
165dRii10zrQF5Gdt7f3pk2bGjZsmCFDBgShs2bNCvmJvjRUjz19+vT333+P
Zwfmu1y5cvv37zfNPWS8vwt4ikeOHJk+fXpsiSdu/Pjxt27dkoOY3Fr86evr
O27cOLim2Bi9d/To0UZE6rqhjjIu06dPz5kzJ9QguuWBAwfOnTt36tSpjRs3
Ojs7x4kTJ0uWLKNGjbpz546undRBsEvWrFkhMXhcq1ev1g+uO7TQAxUqVMBm
OCB0oN6MCCthU4EdhCpHjx5t27Yt9Oeff/6J5SNHjqDvwUWEHYkRIwYcb8Qj
27dvN7Tknupm/v7+ktuPHTv2N998Y2i5OF2e0KIQfqlSpRwcHHr37u3n5yfr
+dEo+UyI8tQT0aB///7NmzcvYgP6E90b/XbKlCnh29TIhS5SOADwvuBvQJ65
c+eGDwBV4O7ufuLEic9xatiybt26eXh4wAMsVKhQqlSpcDqYNk9PTyO0E/u4
TITMGzZscHFxgeKCNUGoAm2Jlbdv3160aBGuukSJEgsWLMCaYJ9CFpReXbt2
bfv27WGzcIGw7PHixcMFNmvWTM8+RQTQ4B49esBkoJ249RkzZowePTo8f8Rx
4d00QsiXi1653bBlU+fOnQuT0a9fPyhz+LfHjx9fv379gAEDsmXLBgcAoesP
P/xw8eJF473Xqo8MhPOfL18+KGHEC7NnzzbsOfZYg4hs8eLFCK/gVMAiGJox
QgMQkjdq1Ai+B6KPIzbWrVvXs2dPHFPs19ChQxG82z14xOfNmzc//fQT3CpY
Q4RLEjdBsBMmTJBBVjrqywj1J+xdokSJYD5cXV2vX78eZQae6VGSYbtS9IRl
y5Y1bNiwe/fuMPTHjh1Db/z7778HDhwofSxNmjToFWfOnJFdTN9Ibt68GaYW
gsJmkK0RyCcqz549Q/eGa5QkSRLpsVFGpCTCYhr3C3XapUuXevXqSVyQOnVq
dG/4itDA4drMSICuN9QC7EuvXr1q1ao1fvz4PXv2iBWDoWndunWCBAmgE6BA
5s2bd//+/RAm2MUCQlP98ccf0FRQR1Am0FSnTp2CyoIJQ1Qimgr2VKISU2Y4
eGd//PjxpEmT8ubNiz4DK+nn5/fMBszizz//DLOCxuzatQu2Rs10qRMMFXf2
7NmuXbtKF4X0YLths3CirVu3RqjCJidPnsSj5ObmVrx4cbQzadKkkD8CUi8v
r9Bqpz5PEECI3bJlS8TXeGAlb+zo6IjITk+nkI8HT9OPP/6YM2fOWLFioY/B
Tdq3b58p9jdsfRj+EjwESB4yh9rEw+7j46M2M43HluXz58+3bdsWR4a5HzVq
lBE5fchP4sKFCy4uLnHixClfvryMqBeF8PLlSzg8UFAQMlxr6BN/f3+1lxpn
gp4sjjce9lWrVsEXtWowcekh/3jx4skwiUWLFlm/UQ3Lq/4YTLfe19d30KBB
CHD69Omjp9wfPny4ZcsWSC9mzJjy5gIa3vo2GbvUqVMHl4/NWrRooR/Zeu0I
Yb7++muc6N69e3Y3ICR00eMj9Gr56Lt3794I57///nupJYXQO7ybGQmwDtoH
8ACLFSv2zTff9O3bF881zBZEWrdu3dDN7Su1g5AB7k3NmjXhZOImNm7cGLcv
e/bsK1as0BsZWkABVq1aNXny5PBj4TbrLXn69OnUqVMRs8AzXLx4cTDOq0dD
anns2LGQZ/PmzQcMGABnPn/+/LhAiBfmLBSvK4TIrYevAuHgvqOpnTp1Qjs5
bp8QEhFQetXb29vZ2Rl2Hzbi+fPnalj+lStXoGwlvZ82bVq4puozXj108vT0
hMXBNrAys2bNMg21Mj60TQ0aNEiXLt3ChQt1z3bHjh1VqlQpXbr06tWrVQ03
hCFXr14dMWJE1qxZ5f3C8OHDVRwXWVBCkBoRcABgKOFWSY0dfciEXfsoouvY
sWOCBAmwfbVq1a5fv/7uPWFzCZ8V01CoAwcO1KtXD5H7n3/++fjxY/WaA/cd
cShiefhOqVKlgm+DviFH0AtHbN++Hc4G4qz06dOj6xqaVFV4KydCTNesWTOE
Wgh1GWSRz4q1Hgu6NLp6wYIF69Spg84MFxEeOx5w9F6O2/9P7GbwFi1alDlz
5lq1akmxMlkPa3L27Nm2bdviSY8VKxYEDmv17NkzIwSpFdlx3759tWvXLl68
+NKlS+WA0phr16798ssv8Pxjx44NozlkyBBo7FC53okTJ+bIkSNlypRr1qxR
VlL+5efnhwgI/3J3d5cC0fp/g20p4BhAFbu5ucFsqS5atGjRrVu3WsexB/vq
Qg7ag3bi2hEPoqmwknAYSpUqBb8iVN6qqN3FTuFxhsMjxZcglg4dOuB08ePH
/+2332hKgsGrV69WrlyJp6ldu3Zw82DiVU0ew1LS8O+//0aHdHR0jBMnDlwp
64h9a8+Esp07dy5cghQpUkhuP2rz5s2b9evX58mTB5KETti2bZusF8ncv38f
ng+0E9ykVq1aqWEShman4BTBmcfDXqBAATVuXzdeapddu3ZBy8nA9UqVKllf
uUY09O6BRh48eDBTpkzwxmF558+fr7/FQAT0119/OTk5wXAkSpQIisW0O8T1
8OFDye3jCJCqKVVlaG4nFqCZYaF69+59586dMLxi8iVid04HqAU8sD42EHvC
bOHJnTFjRji1MZJhends2BIa8D3gcOKJ3rBhQ5UqVSBSKIQjR46E4knVgkwx
g4PD6p0+fRrejuT2YT1DfQoPaK1x48YlT54cQTdca2syB7E2XCy4PV27dg3G
eU16WBZgjOCznTt3DvKE7sXxIc8mTZroRirckW4AP2T37t23b9+Gez9y5EiY
gK+++orj9gkhEQTo6oEDByZOnDhZsmTNmzc/dOiQ/l/4AJ06dZKCMMWKFYOf
b3VfsbJgwYL6uH31L5OH/+TJEzgSGTNmRKgla2SDnj17wnlOmjRpmzZtjh49
amhm9ObNmwhAEMpBeULVR67JSvTLR4QFWwBDALs8efJkhAyQ2IQJE6SWsmH5
iFKfYw63QKY2c3Z2jnRvN/4TfVQe3AkE4LCSjRo1UoWbpDPcvXu3b9++0hMQ
ty5YsMBaUHrLli2I0SAoBPKQrXXQvkgbO8JNWr58Oc41depUNVwtDC+afFlY
vV/0502bNiHeh4qDu96+fXv4sYUKFeK4/Y9Ef2CxXL58eflgZ8CAAVLQWOmH
f/75R0p1xYoVC5FXsEcB6UVChgwZkjBhQhjNxo0bw2hKvR35Lxx+eXsrNxR6
RpnLkLxQcHd3hyHGZapvAVS2GQu//vprGhs4nf7NlxGCiO/+/fubN28+duwY
Qi1cI6wzJGw3tx+844cWvr6+aNLJkydhW/fv39+sWbOYMWOWKFFCagcJIXkB
oVsoWVizZs2+fftwOjy8o0ePlllHf/vtNyMCSCNygQdn165dlSpVwiOzZ8+e
KlWqQJiS27f6kNj4xx9/xHOHfqh/4mSagEPQsyLoFdWrV0+ZMuXw4cPD6MLC
CREXRIrnFPond+7cqly8/AvPcpMmTaAJIWforrNnz1r1EnoynHn5SGfFihXW
xJEalu/t7Z0uXTqZSwtemX6QcH/lFxjvtII5EI40HuoaYjE+7DY3btxAV8R/
Re+pK1Lp+ocPH9aqVctak0cxZcoUqCMZqA+rhFPAIkj5aBbkIWGG6Vt7wzaR
rnhEWAjXpkU+TM+4aAP4A1WrVoVI69atG7pz4Zn0s/h78HkQDkNFZ8yYUWZD
Dt1PKaGjoKxw/Jo1a8oUYKZvFuBFt2rVCo5W2bJlDx48GLyz2G2wnGjnzp1l
ypTB8SPauH1D86tl5ACcChgIJycnldcihJBwQbcXbdu2Ff82RYoU8+fPV4Ol
5b/w86WeGHTXqFGjlJ+v1DIsi3w8lS1bNmxsSqheunRp4MCBw4YNEzUIM1Gs
WLEGDRoYmrGA9ysNQJgg35fpg7GnT5+eIUMG/Dd+/Pi//vprxIwXAsM6Hbxh
E2mcOHFwRZMmTZI1dlMlSj6dOnX6+uuvJbcfeQsTBYbeo3r37i2RVJIkSXDf
TRWqly1bJsPJHB0dTcOoZGHz5s3FixfHBugw48aNU+slA3br1q0RI0b07NlT
1h87dqxUqVII+Y0IPMyMRA2CyIXiz8uXL7dv3x7dHoH/li1bwrx1kRLTK7lU
qVLJOLQsWbLIjNt6Rgs2Tkp5J06cWEp5h+TU2L1z587KaM6bN09vEv4LJ19m
VIkbNy5sn57GCd47xE2bNuXIkQOROAK6e/fumb4EeWcr/QrVB7PStWtXmXre
+uozeOA4aP/Vq1dbtmwpbytMuf1wR/UELFy8eBHBoKrJY9om2MdX3cmU4Xz9
+jUMDW40TNLs2bMjbD4zAqJe2Xfp0gVWePv27Tdv3pQ3dKVLl8ZDas05nzt3
ztXVFZ1cSh+cPHnS5AAYH7qmKp3l5+f3ww8/ZM6cGQ7Al3CDnjx5sn79+t9/
/33jxo1qkhHDJhwZbwkBJkiQYMyYMXpNHiUuVW+/QIECq1at0v+rjiN3Z8+e
PVJNTgr4WPP/ERm0Fu2XOVkSJkzYrl07/dPOd7Y5Nbp16yYeKYIgU20iw1Zv
X8btx44dW43bl3cHIiIZmOTj4yMr4bUmT55cDevleBLyWdGHHBgfGi/EntFt
IM76ElRiCLHrwOuDKPbu3QsrJrl9/dvJ0MKkTmE3oUzE3VU1eUKR3bt3V6lS
BYqxYcOGp06dsl4+dBpCaWyQN29eZSM+FZOxVgWKsbxjxw64AeifcOci5ly6
ckfevHnzyy+/4EYgvmBunxASjuhRKszTgAED4OdDS2fIkMHT01MlogVvb++K
FStKab4hQ4ZYJwRcuXKl1ELPli0bogmTI3Ho0KEyZcrA6r17/xUborPChQur
40BDdu3aVUoi4wimUALbbNq0qWzZspK3+fnnn8NMSqGFbrxkecaMGYgFcDkT
J060ZgyMD30G7NWhQwcpaurs7Hzt2rVQ//4uvLAmOUePHp04cWJJzsNQmj60
P3jwYM2aNdETIIqOHTvKv/S3J1u3bpXcPgIxGFzjQ48ILgrcFWwgNwLekZub
GyI7Ux6MkNDF6hiLalWDqfBQt2vXTmrycNz+f2KV54sXL8qVKxcrVixohvz5
89+4ccO0C5RJypQpYeMgZH0m9+CdGr8wmokSJcIBoWoWLlwo/1Ua3svLS0Yg
A2xpbfannnTRokUyddrIkSMfPnyov7YQG7Fv3z7JizZq1Oj48ePWBgfv1MoS
Xb9+vVWrVtJFt2zZEtGsj1LgFy5caNGiBeRQsmTJ0J0nXS5Zwk/987oxY8ZI
ZCc1eSKaZCIsogPhC+XJk2fOnDlPnz6FRYarKeP29bGCylNdunSp1OVzcHD4
4YcfrLVNrB6F+oVjWaNGjcAmhIpKyNW9fPny8ePHUIy6DN+8eTNixAjRhPDJ
d+7cqV6g6JvJuH151wz33pSCVtLD8RcsWCCfUaRNm1afuujt+yl9w/C6Pxa9
V9y7d2/atGmDBg2CXt22bZvJV0eHrFevnqRAIQp9d9nG398fPqTMJty8eXPj
w67l6+sLKwCrpD62ffXq1ZMnT3SXlZDPjWnEtSxMmjRJPlfhXLofiWnwvGkZ
Dpi4fPXr1w/Fevt2X83gjFBcqiaPp6dnqA8qmDVrlkwk1KBBgzNnzrx9P2WD
2gAxS/fu3bEBrAn0ZzBOYdc1VSu9vb1LlSol9fYj2ly6Os+fP5fcPsIB+XKT
EELCC2ULZOzN+PHjBwwYAH2uJsxVv8uXLy9QoIAMmzdVK1VBk2yAcABHMDR1
jchi9erVuXLlgtUztBrIiOP0NuzatWvs2LEwEDNnzoTJ0E+BXRYvXpw3b14c
P0GCBCoZHinQA5x32iA0XCZiAYRXuBy7n5MbHzoPnTp1kho+1apVu3nzphFV
4gLdV5GFw4cP//rrr+gJU6dOla/F9Y03bNggtTUcHR0R2itPQ+2+ZcsW2SB9
+vTo0no3RlTl5eWVO3fu/Pnzq730rhgWF0y+YEzfRCvQ965evSq5/aJFi27a
tCk8WheZ0N+PqJVLliwZOnRo//79ly5d+uTJE9MGgwcPlilW8Xvw4MGQh0II
5aCpYDSnT58Oo2l6CwmbKNN9wmgOGzZMvT0M9jvE1q1b41DRo0cfPXq0Ph2w
upADBw5IXhS2EnrS7vSXn4re2kuXLqENsFmFCxe2m9sP39ejSrznz59HMCj1
9vVx+6YtQwuYFYnsYJI4k1oQyDsRMdlyC7AGjl+tWrW6deuG4F3yFeXLl5fc
/t69e99Zxu337NkzXrx4uLmIo+fNm6e/ZzH1drVS+Vc3btzYsWPHlStXorat
V1UH5U8lB/EYjx8/XrNmzVixYlWqVGnt2rVwfmR7pVElpz179uyMGTNCzjJu
X69Fpqd3jh075uHhIZltZ2dnmW8xhC8TPzfWUTQQwsOHDx88eIDuZJot99Sp
U8mSJZNaykOGDNFTo2/fz6Vbu3ZtmUsXaue5DRzn2bNnPj4+06ZNk3myol4h
TRLZmTx5svRb9NLwbksEQrdQgnqzbHw4N7H+X+PDmjz64AoTproHym+xnjfo
ml13796Vj9yzZMkiNXlCF6l/q3L7qsFKQ167dg2GWz5ZqlevXmDH0eWmX6Nu
p3S9qnaEsS5Tpgwa0LRp04ic24cHKFUZoepZb58QEo7oY++xAO30+PFjeOaP
Hj0yBUovX778+eefZT6pEiVK/P3337pJkuOsWbNGcvtZs2adOnWq+LfYEd7y
gQMHJGdVo0aNILx9bIxTowFws/VqAzgLTMCgQYMSJkyIg5QrVy5qJL4kt6+P
2w+aTp06xY8fX8QY8pkZIw7WV/YSFiHGf/LkiaSnVH9DT4C4JEFXqFChZcuW
yV76qPvNmzcXLVpURpGNGjUK3QldC70R3fvw4cM9evSAK6vGXxESQZDcvgwO
jBoqLlTQS5kFlrtTK1+8eIF4JyAgAM+7viV+oQecnZ2hcmPEiOHh4SFlzUzH
1yMpuwO09EyjMpo4HX7Vp8Sir6Cp4O2LzSpVqpSKvIKdVcaOMo0IesiIESNU
kQ39gPv375e8KC5z+vTpunBCJc8GobVp00aN2zcdOXRTeaZBv6ZXwKaTmjrG
+fPnpcSfzKUbiq2yi/oiW+rtR9iUZkTA9HoLdwr+TIMGDbBgvC+BUrlyZTyk
aty+odl3/DZu3Fg+eMTDtXjxYv2wyk+wvtJSG6jnNMqjf1cCSa5bt27evHmt
W7eGD589e/ZvvvkGnhIcLdMrAAV6cs6cOSHnfPnyLV269IUNbA9vSjw0aFQ4
VPBLcbNSpkzZqFGjnTt3yr4RPLcv6O92Ta+Q1HqoWShSR0dHOI0FCxaUuhCm
5D96bN26dSEoyCFdunT169eHfXFzc0OvLlmypPRVIANyCIk4MLf/Mdj12XQV
96m5fZ3/HKEXhMf4uXP7vXr1kjlZJLdvWPTk9evXEVCLfoN3HfTRAvvkQZeh
6WKZ2yeEkBCiZ0vU+1ksQKkinnJwcIgfP36fPn1gUKz7qpo8cIOLFi0K/7ae
DVdX16xZs4qBQBD3MZkN6+igEydOuLu7wwNBAwYNGiSTUkV2mNs3ocdZpokg
FRcvXuzQoQO6k5OTExZ8fX1VSRPD5hjgTy8vL0mCYZsCBQrUtwHnBF0xV65c
UtaJuX0S0WBu/2OQLJ8ptWs336uvF7WQJ08ePPvJkydfunQpvHFTUsua47I7
sN+0xpRIVPueO3euWbNmsWPHhrffs2dPqRwSwuHisKSivkaNGvXgwQNrAvPg
wYOS2wewL9arCGG2LSxz+8aHN8KwSC+IT2CY24+Y6O/RsPzo0SPIrWzZskuW
LHnx4oUYfX3cvppLVz9Co0aN5A1XokSJFi9ebB0boC+oX7sPaVTl3Yc1dp4+
fTp+/PhvvvkGXlCJEiWgAOHPe3p6iidvV91hAT05U6ZMEHWqVKmw4w8//DB4
8OBBNgYOHIjl1q1bQyPBKS1YsOC0adPgjFmbYUTgz0ut6t06YhaaBOEMhABR
TJkyxTSPmPz58OFD+JYyJymAuBInTozfZMmSffXVV5LbR/BirRFHSPjC3H5g
WGuUGe89SfWnXrhY1nxkbl8fSWI9iPHhwMsg+Ny5/R49ekgdZuj/kydPmtqP
3+vXr0tNHlC7du3/PKAM1Dc0o6A+uzM5ewJz+4QQEgx0pSool1VVV4NPmy5d
urhx48KD3bZtm2EvnIdlgYcvpYzh0KZIkSJp0qRwbvELdady+0G0xK4te2ub
WmXChAlp0qRB4Ozm5ubt7R0a1x3+MLevY42z9JBQ5XYWLVqUIUMGdMVKlSqZ
JnNUbhjWFylSRLpiwoQJk9tAP0ySJAl6pvgqiNfC6soI+SiY2w+Mt/YKmJtG
6lo305N7UCbNmjWDJXJycvruu+9MaRbrECxVpEJP+FsPHhiwWVDv6dOnh6Zy
dnbWZ0Y2TWz3SULInTu3hFG//PKLn5+f3io5JkLLcuXKSWnoqVOn6u84QiXh
HJa5fX10gSlJ+M5Sp8W0I3P7ERb9gVq1ahVu0IwZMx49eqSEdu/ePRh3CLNs
2bIHDhwwfb6BhSZNmohxl9y+EUjhAhwQhzpx4sTZs2dPnz6N35M2ZAFrovY4
ahnnoJYvX758/Pjxo0ePHjx4cNasWR4eHlWrVu3Tpw9WBlbOaPbs2dmzZ49m
m3ncxcWlS5cuXbt27dy5syxAi8Ijxe+kSZNw+169eqX2VcfRX+VEZN69x/iw
QMSdO3eGDBmCzpY5c2bEIA8fPlS76Jd2//792rVrS26/YcOG0MwBAQH+/v4P
HjzYvXt3ixYtHBwcmNsnERDm9u1i972wXZfDVE3348ftW10yq578T18xDMbt
i8PZqFEjye3rQ+nQsGvv6+3/57h9u1+HmVSudS/m9gkhJIS8s3yXCk2+f//+
atWqxY8f39XVdcOGDS9fvpT/ml4KIEyTevjZsmWDG4yoCp4tXNyrV69C18lA
LBznP0dM6bPrvrON3/b29q5cuXLcuHFr1aq1detWKbYQBUZeMbcvBH3tyr9C
Tzh06JC7u7uTkxP6w4oVK549e6ZHr2p7dBKpt582bdrhw4dLkIXwE10Re1Wq
VAkhGMftk4gGc/tB8+7DejhGkKGBquQJ4HjjwU+XLl3ixImhRRGkWJOBeho8
sAYEnU9Wp3v9+jWMZp06deLFi1e9evU1a9ZAU1lb+Klgd0m1SU0eqDW9VWIu
oSErVKggoRaidWu+LiQNMMJp3L7dkflqvXWEG3P7ERY9RX/ixAnco44dO96+
fdvQ7qPK7cu4fevuP/74Y5IkSWQMyezZs9WO7z4crI6nfsGCBS4uLtVtwGuq
WbNmDRv409nZGcF42F59mKJ70SpBJCKCWz516tQ8efIkS5YMtwBKw1r5yrBN
pJg1a1bIuXDhwmouXV3ZytFUkkqNyVQHibAj9oNGAh9fX99Ro0ZBStDkkyZN
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
n969e7dChQrRokUrU6bMwYMHrQV55s2blzNnTmzg6Og4ZMgQbK+PEjcsYyn1
s69bt6527dpz5879/Ncanig5vHr16uXLl5CwPnQTy4MHD06aNGns2LFdXV33
7NljGon6TptLV6YqXrlypS7kgICAqVOnpk2btk2bNoZNsDjy69evcTp1FnWu
8BDAf2DqJ/7+/gsXLvz1119xyfv27TO1+ebNm87OzpICLV68uOm1kewuU+46
ODg0bdoUctDT9deuXUN/hqjVnMW4I0+ePMEytgyb6yXE+PABl644ZcoUGeaN
nv8lvO4MISZDY1oJoEurV68u9fY/R27f19cXVnLcuHG4X1KwTufSpUtSch+a
qnz58iadH4qNIYQQQgghhBBCyJeJnmGQnMPz58+3bt3q4uIyYMCAy5cvv337
9t69e5UqVYoRI0apUqX0RKsacdq9e3epKhw/fvw//vhD/mt38LNeYV4W7t69
e+DAgWvXrn2uK4xIWF9tyO+xY8eqVq0aO3ZsZ2fnbdu2vX792pTrlmVVbz9n
zpzz5s3z9/fHrblz587NmzfXrVsn2ez27dsr2aq5ek2jWyNmWklv5L///gsh
PHjwICAgQObKVM3Gv06dOpUiRQqpYj1ixAjZXb+u+/fvizQgUg8PDxzHz8/P
19cXEsO+48ePd3R0jB49uo+PT2DNIOQzYfruSe+3eGAnT56MnhkzZsxp06aF
UwMjGabh+mqlLOzZs0fV5AnFevvK9sk88o8ePXr8+LHSt7IBNNXBgweTJ08O
0wl9BbUT9JtuQgghhBBCCCGEkE9FTXerfk+fPl25cuVGjRpdvXpVjYKuVKmS
1OTZu3ev2lflUho0aCA1hxMmTLh48WJTtsrQMiFqR1M1/gibcA4t9BGbsrBz
586lS5dOmDChfv36mTNnzp49e5s2bby9vWXouEks8ufvv/+eKVOm6NGjQ87F
ihVzcXFxdXWtWbNmxYoVU6VKJcN9Zdy+ftJIjfXdREBAwPjx49HZZP5K9FJ9
Bgfpzyq3j83Spk0LKTk7O9euXRuyKlKkiOT88atq8hASukhhFllWj7D+ONsd
cA6Y2w8VlFT37dsnc+nWrVs3iNy+aT5uAfdIXiyqP43399GuXTM+LKHv5+c3
cuTIOHHiQNuUKlXq1q1bpveGUUA/E0IIIYQQQgghJCKgcvv+/v4//vhjtWrV
1q5d+/z5c/mvr69v+fLlY8WKVbp06QMHDqhxksb7VEbDhg3x32jRoiVJkmTB
ggWBjXy2rjeNSw/164pQ6KmhJ0+ejB49unHjxvXq1Stbtmzq1KlbtWq1Zs2a
+/fvq+1NwgEzZ87Mli2blJpJly5dzpw5c+fOnStXrsyZM+MIsWy0bt06So48
VxWqz5w5g6vGlUIU8+bNs9ttIEY3Nzcpcx0/fvx8+fLlyZMne/bs+M2UKVOi
RImkSsaNGzfC9iLIl4V0WlNpHT3nb31UmdsPFT41ty+oCnWGdtdUet9Uuc74
8J2j9exHjx7NmjUr9AxU9JIlS6yvKQkhhBBCCCGEEEJCjhpi+r///W/x4sWl
S5f+448/Hj16pDa4d+9e+fLlo0ePXrJkScntGx9OX9ikSZNo0aLFiBHjq6++
mj9/vn5kdXDJTvv6+h49evSIjWM2ZPn48eOHDx+O8rlW/WuFO3fuXLp06fLl
y2fPnl24cKGHh0fx4sU7d+4MCZtSgioBKDV5YsaMmSdPHsg5ICDgyZMn+L1y
5cqsWbNKlSqFuyAzz1rTUJEUPS+KZfSQAQMGQAI5cuSANGTGYb2biej8/f1r
166NHhsrVqyGDRsG2Hj48OH9+/cPHToEEcWPHx+y+kIqQZGwx+7EDaZC69YH
3GBuP5T41Ny+mCd1R9THU6bvLJShNJk2dRx1K69fv96tWzcHB4f8+fPPnTtX
2VP9e40o+RL2/+3dfVBU1RsH8N0NJYPcojAjE1ZxRV6jxBdeDHN0HJdBqz9C
xMVkFKRy0hCbEJR2cqvpRX5gqYySMBOKrTJjjZkl4hCIFNo4WLytzFCJwGDM
MkDpcH/P7BnPHO5dmUJEXb+fP+5c7r3c3fvcw2Hmuec+BwAAAAAAAABGH8sz
lJeXv/LKK+np6W1tbdKN+Vgle24/OjpapVJFRUVVVlYqCwtkZ2c/+eSTbIz0
3r172fytkmJ0Yl9f365du+bNmzdnzpzw8PCIiIi5c+fOnj17jl1kZGRGRsZo
XfFoG6L0EO3q6ekpKCgICAjw8PB4+eWXq6qq+DB1Saj8kJ+fz+rtBwcHHzly
RCzW/ddff5nNZk9Pz6SkJLEA9ehd4e3EMmktLS1ZWVn+/v7x8fHUzLq6uqTB
5aR4y+zo6DAYDBQoV1fXhIQEWYttaGgICQlRq9V//PHHqF8K3C9YoxX/kKXB
NdDYMbIDkNsfEcMYty+WTpIG196R7Pl8NoBfdr9kZdPYsr6+ftOmTTNmzEhM
TKSO3WazOfxuAAAAAAAAAAC3iGcqrl+/HhMTM3ny5KysrKKiogMHDhQXFx88
eJCWu3fvDg4OVqlUer3eZDLRRtrb3NzM06qHDx+mA9gw6XXr1jU2NkqOZuml
LaWlpWvXrk1JSVmzZo3BYJg4cSL9lru7e1hYGG3Zt2/fnYjBaBAL8khCQHja
uaura+XKlWPGjHFzc0tNTW1oaBB/nWWQ8vPzWU0eirbFYpGNFz1+/HhoaCiv
t+8cg0LFcbCZmZlBQUF0gT///DMrGCXmSPmR1KQpmC+99BIrvGM0GiVhwC07
JjEx8cEHH3Q4ly7ArduwYUNgYGBAQIC/HfWcM+xoS0lJCTvG4V8ocvsjYti5
feaff/5ZsmSJnx3dMnbv6IbSj7T89ddflYP2eQ9jtVo3bdpEXTH9K7xw4UJv
b69sbgXxRbaRv3IAAAAAAAAAuF8FBwd7eXnp9fppN/j5+bFpXtnco+PGjXv6
6adp+/Tp07/66iuWmqbllStXjEaji4sLHfbiiy+eO3dOlsqWbjxE6O7ubm5u
bmpqamlpKS4unjVrFp3Ww8MjPT3darWK1eadjzgEVBzqyVM9r7/++tixY9Vq
Nd0Fi8WiTP3l5+dPnTqVDvD39y8tLZWdobKycvXq1WazmY0vdY7cvmS/utbW
1m3bti1atOitt96qqanhu3p7e202m7LISUdHx5IlS9icuQkJCeLZ2FMAk8k0
f/78y5cvj9pVwH0lLi6OzW1N2Apf7tq1a4jS68jtj4hbzO1TT+Lr68vvILtx
7Ee6NbW1tbK7xnse+u+2ZcuW2NjYtLQ08bC///6bvWckKZ4zAgAAAAAAAAAM
Gx86fv369ZycnKysrMzMTFpmZ2dv2bKFVrZu3Zqenu7t7e3i4uLl5ZWUlLRt
2zbaKCYuaIU2TpgwQaVS+fj4HDx4UDw/J8tmlJWVRUdHP/DAA56eniaTaTSv
evSxIF+9enXHjh0ZGRk1NTWspLM4kjMlJWXs2LEsfZSfny9LH7G5dH19fTUa
zcyZMy0WC4snzxP29/d3dXX19PTwjbLyEfciusY///zzvffei42N/eKLL/gr
IYSCuX//ftrFjhSfZXR2di5btkytVrPcvlhngwXNZrN1dHQgvQa3yYkTJ/53
Q15e3s6dO2mZm5tLy7q6OvFIWSNEbn9EDG8uXRH1NnS/6H8i3Qh24+jWsHXq
XgYGk+x9S1NT07vvvksfVFBQYLVa+XegbnnPnj10KvFhNwAAAAAAAADAiJBV
FVCut7W1zZs3T6VShYeHnzlzRpaMYjnVCxcuJCUleXh4aDSaNWvWXLx4UZw4
Usy78jP/8MMP7LReXl7bt293+kQrXbjJZNLpdFqtdunSpb/88otsOsWUlBRX
V1c2OjQ/P59tFA9g4/Zpb1BQkMViUZ7f4fo9rbW1ldqGwWAoKirq7e3l2yks
jY2NbMoG8YUIttLR0RETE8PG7RuNRlkjdPqWBnecw/lV+a4h/jyR2x8Rw8vt
s9y78n0KcYvD96GoS2loaDCbzdSxl5SUsIphfBd19dRTRUdH8+/mZPOhAAAA
AAAAAMDdhg/mp2V7e3tUVJRKpZo7d25lZSU7gCdI2ZF9fX20i+XqPT0933zz
zYaGhoGBAT50XFadmH69vLycTqtWq+n4999/37kTHSwOixcvZtWN6JJPnjzJ
h5GzQjEpKSlubm6019fX98iRI9Lgxy6s3r6Pj49GoxHr7TtH3Fh8xFZH19XS
0vLRRx8tX768sLBQfM1BslfjoQDqdLq3335bfD2Bt9jY2FhqWhQrVm+fN1cx
s+ocoYN7CJ9LVzYHK+8HcnNz2Zs7eXl5kvDqjcPHo8Dqj/FgiivsgIqKioUL
F7Lcfm1tLYunw6j+J2Jynr7DpUuXPvzww/j4+OLiYv6VpBvzpB89epS69MzM
TP7rztR1AwAAAAAAAMDdjJXTnz9/vlqtDg8P57l92TGSPb2/f/9+Nuvuo48+
um7dut9++01ylMFg9Xm+/PJLf39/ltvfvn270yc66JKTk5PHjRun1WrT0tJa
WlrEveXl5ezJiLu7+9q1a5uamngVIx6Z3bt36/V6Nm6/tLTU+eo2i22gsbHR
ZDJRk1u9evW+ffvoektKSiwWy6FDh2iFGs/GjRs9PDzYCw6yULS3ty9dupSa
lqurK6+3z6c5kJxoMgK4F8kejIpvlLDcvouLS15enjg9tHST+vygfF9JfHhX
UVGxaNEicdy+MoDD6A3Ek9TX12dmZkZGRr766qtFRUWsgzp8+DCtUH9FW157
7bVJkyYVFBTIPhG3EgAAAAAAAABuk4GBgba2tqqqqpMnTx46dCg0NFStVgcG
Bu7cufP06dNlZWW0Vyyhz5IVHR0dJ06cWLFixfjx4ydMmLBgwYI9e/acO3eu
u7ubZzNsNlt9ff3evXsNBsMEu4kTJ7Kq6U6ccWUDSi0WS0hIyBNPPLFjx46G
hob+/n4KIC0vXryYnJys1WofeuihuLi46upqcfBnXV1dRUUFhX3z5s2TJk3S
aDTTpk2jiJ06dYq2U3j5LI33LnE4/bVr137//ffs7Gxvb283N7cpU6b4+fnp
dLqpU6fq9XpfO1qnZkPR+Prrr3mz6enpOW139OhR9qbJmDFjFi5cSFt+/PFH
ilVzc7PscQnAaFLOo02oO/3222+p56TlG2+8weaJWL9+PW05duwY7aUGrJyd
HBhZbp9CRL3H8ePHv/vuOwpgTk5OWFgYdQURERGff/45baRdFNLW1lb2ttSt
fC6xWq0ZGRnUEbm7u0+fPp31TlPsptr5+PhQT0Ur33//vfjoYejSTAAAAAAA
AAAAt+jYsWMxMTFhYWEhISHu7u4qlcrNzU2v1z/zzDMzZ85kRWMYllHhBQrO
nz//8ccfR0ZGPv7440899VRERER8fPyGDRvS0tI2btyYnJy8YMGCwMDAqKgo
k8m0efPm55577oMPPpCcOuPKkkg2my0nJ2f27Nl+fn4vvPAChYICkpqaGh4e
rtVqKVyrVq06c+ZMX1+fWJP5nXfeoVvw7LPPenl5sZI+tNTpdKGhoRRGo9FY
VlZ2hy9vJIh3v6qqilqOSqDRaGTrFARqOe3t7ZKQZ6PGGRwcHBQU9PDDD7Mj
KbAUqICAANplNpv7+/sdfiLAKOOJZeoPqUedbeft7c0a+eTJk2fZ0a7FixeL
RaXu3Fe+G4nPBCX705PCwkKKJIuev78/6woeeeQR6gRoO3UatJ2/9yQNK6Ti
rDGenp50fjZPCqunJHZTtHRxcXn++edZT+XEz68BAAAAAAAA4K5SWVm5fv36
lStXLl++nJaJiYm0YjQaV9qVlZU5LLbDBkN2dnbW1tbm5uYuW7ZMp9O5ublp
tdrHHnuMlj4+PrTx008/raqqunLlSltbW3l5eXV19R25xtHEsnNdXV1nz541
m80sMuPHj2fD9Q0Gw4EDBy5dusQKy0tC+uizzz6Lj49PSEhgwacbsWLFCroX
tIWWW7dupVDfsasaIbJ5Kuvq6uhi6QLpSo12tMIjwNohyc7OFn/x8uXL7DC2
pCPFJcWtsLBQHC995y4X7l9ipX326lNSUhJr56zpJtqtEKSmpoo5YeSHRXz4
PQ/LN998k2DHokd/+6tWrWIhZdupOz116tTA4KnM/+uHSvYunfpe9hH8ZrEO
hz6OlnFxcXRb6dM/+eSTa9euiU9sb+XTAQAAAAAAAAD+DZ58kBUqF/PPPFkh
y1TQlu7u7tbW1pqamrNnz9Kyurr6p59+On/+fHNz89WrV/lIVDpbX1+f05eb
4BdIF97Z2dnU1ETRYGGh+Fit1t7eXod1mMVKDvwkYo3uUb6Q20HMzomFnpQV
8mVFyMUsmThFpqzpslMpS3MDjD5Za5TNBMGI7VPZDwMj6xVZ1yHrEvkTZ0kx
wcFIZdf5hAi8r5ZN18tqrMm+84h8NAAAAAAAAACAkpimkAaPc3aYeRZXWGpF
OU2k8iT3T6pKTDeJJd9vFgc+lwHPEUk3Two5RxjF5xriVA6ioa/U4Wh82XnE
6DlH3OAeIvt7pxWe9XXYCUjCMyy2ETlhkRhJ5dNh8ZmILIDi85Th9QOyf3Di
EwTldxOPGfYnAgAAAAAAAAD8J0PkkRwOJpcGD712mLgeIjXtxGkr5YhxZXD4
4E9JEQplgtopc9TKBqBMoEmKTJ0sksrsmcMnSk7c2OBuJo4wlz3Pull6X9aA
neNVnRGk7B+UbzqIkRQnLxh2PzDEc2p+fvEJwhBfAwAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP6N
/wPbQfUv
     "], {{0, 488.}, {1018., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144., 144.},
     SmoothingQuality->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{564.21875, Automatic},
   ImageSizeRaw->{1018., 488.},
   PlotRange->{{0, 1018.}, {0, 488.}}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CFPterms", "[", "3", "]"}], "//", "TableForm"}]}], "Input",
 CellChangeTimes->{{3.866542781395371*^9, 3.866542781541441*^9}, 
   3.866543031238656*^9, {3.866543568911593*^9, 3.866543571374585*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"7fdf19a0-eaae-4efb-a216-64b8414bd923"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {"\<\"4S\"\>", GridBox[{
       {"\<\"3F\"\>"},
       {"1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[
          0.2]}}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>"},
    {"\<\"4D\"\>", GridBox[{
       {"\<\"3P\"\>"},
       {
        RowBox[{"-", 
         SqrtBox[
          FractionBox["3", "7"]]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"3F\"\>"},
       {
        RowBox[{"-", 
         FractionBox[
          SqrtBox["2"], "3"]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"3H\"\>"},
       {
        RowBox[{"-", 
         FractionBox[
          SqrtBox[
           FractionBox["22", "7"]], "3"]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"4F\"\>", GridBox[{
       {"\<\"3P\"\>"},
       {
        FractionBox["1", 
         SqrtBox["14"]]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"3F\"\>"},
       {
        RowBox[{"-", 
         SqrtBox[
          FractionBox["2", "3"]]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"3H\"\>"},
       {
        SqrtBox[
         FractionBox["11", "42"]]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"4G\"\>", GridBox[{
       {"\<\"3P\"\>"},
       {
        SqrtBox[
         FractionBox["11", "42"]]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"3F\"\>"},
       {
        RowBox[{"-", 
         FractionBox[
          SqrtBox["2"], "3"]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"3H\"\>"},
       {
        RowBox[{"-", 
         FractionBox[
          SqrtBox[
           FractionBox["65", "14"]], "3"]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"4I\"\>", GridBox[{
       {"\<\"3F\"\>"},
       {
        RowBox[{"-", 
         FractionBox[
          SqrtBox["2"], "3"]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"3H\"\>"},
       {
        FractionBox[
         SqrtBox["7"], "3"]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[
          0.2]}}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"2P\"\>", GridBox[{
       {"\<\"3F\"\>"},
       {
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"1D\"\>"},
       {
        SqrtBox[
         FractionBox["5", "21"]]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"1G\"\>"},
       {
        RowBox[{"-", 
         SqrtBox[
          FractionBox["11", "42"]]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"2D1\"\>", GridBox[{
       {"\<\"3P\"\>"},
       {
        FractionBox[
         SqrtBox["3"], "7"]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"3F\"\>"},
       {
        RowBox[{"-", 
         FractionBox[
          SqrtBox[
           FractionBox["7", "2"]], "3"]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"3H\"\>"},
       {
        FractionBox[
         SqrtBox["22"], "21"]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"1D\"\>"},
       {
        RowBox[{"-", 
         FractionBox[
          RowBox[{"2", " ", 
           SqrtBox["2"]}], "7"]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"1G\"\>"},
       {
        FractionBox[
         SqrtBox[
          FractionBox["33", "2"]], "7"]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "\<\"\"\>", "\<\"\"\>"},
    {"\<\"2D2\"\>", GridBox[{
       {"\<\"3P\"\>"},
       {
        FractionBox[
         SqrtBox["11"], "7"]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"3H\"\>"},
       {
        RowBox[{"-", 
         FractionBox[
          RowBox[{"3", " ", 
           SqrtBox[
            FractionBox["3", "2"]]}], "7"]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"1D\"\>"},
       {
        FractionBox[
         SqrtBox[
          FractionBox["33", "2"]], "7"]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"1G\"\>"},
       {
        FractionBox[
         RowBox[{"2", " ", 
          SqrtBox["2"]}], "7"]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"2F1\"\>", GridBox[{
       {"\<\"3P\"\>"},
       {
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["14"]]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"3F\"\>"},
       {
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["6"]]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"3H\"\>"},
       {
        RowBox[{"-", 
         SqrtBox[
          FractionBox["11", "42"]]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"1S\"\>"},
       {
        SqrtBox[
         FractionBox["2", "7"]]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"1D\"\>"},
       {
        RowBox[{"-", 
         FractionBox[
          SqrtBox[
           FractionBox["5", "14"]], "3"]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"1G\"\>"},
       {
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["14"]]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"1I\"\>"},
       {
        RowBox[{"-", 
         FractionBox[
          SqrtBox[
           FractionBox["13", "14"]], "3"]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"\<\"2F2\"\>", GridBox[{
       {"\<\"3P\"\>"},
       {
        FractionBox[
         SqrtBox[
          FractionBox["11", "7"]], "2"]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"3H\"\>"},
       {
        RowBox[{"-", 
         FractionBox[
          SqrtBox[
           FractionBox["3", "7"]], "2"]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"1D\"\>"},
       {
        RowBox[{"-", 
         FractionBox[
          SqrtBox[
           FractionBox["55", "7"]], "6"]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"1G\"\>"},
       {
        RowBox[{"-", 
         FractionBox["2", 
          SqrtBox["77"]]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"1I\"\>"},
       {
        FractionBox[
         SqrtBox[
          FractionBox["91", "11"]], "6"]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "\<\"\"\>", "\<\"\"\>"},
    {"\<\"2G1\"\>", GridBox[{
       {"\<\"3P\"\>"},
       {
        RowBox[{"-", 
         FractionBox[
          SqrtBox[
           FractionBox["11", "6"]], "7"]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"3F\"\>"},
       {
        RowBox[{"-", 
         FractionBox[
          SqrtBox[
           FractionBox["7", "2"]], "3"]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"3H\"\>"},
       {
        FractionBox[
         SqrtBox[
          FractionBox["65", "2"]], "21"]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"1D\"\>"},
       {
        FractionBox[
         SqrtBox[
          FractionBox["55", "6"]], "7"]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"1G\"\>"},
       {
        RowBox[{"-", 
         FractionBox[
          RowBox[{"5", " ", 
           SqrtBox[
            FractionBox["5", "22"]]}], "7"]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"1I\"\>"},
       {
        SqrtBox[
         FractionBox["13", "66"]]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "\<\"\"\>"},
    {"\<\"2G2\"\>", GridBox[{
       {"\<\"3P\"\>"},
       {
        RowBox[{"-", 
         FractionBox[
          SqrtBox["65"], "14"]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"3H\"\>"},
       {
        RowBox[{"-", 
         FractionBox[
          SqrtBox["33"], "14"]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"1D\"\>"},
       {
        FractionBox[
         SqrtBox["13"], "42"]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"1G\"\>"},
       {
        FractionBox[
         RowBox[{"2", " ", 
          SqrtBox[
           FractionBox["13", "3"]]}], "7"]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"1I\"\>"},
       {
        FractionBox[
         SqrtBox["5"], "6"]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "\<\"\"\>", "\<\"\"\>"},
    {"\<\"2H1\"\>", GridBox[{
       {"\<\"3F\"\>"},
       {
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"1D\"\>"},
       {
        FractionBox[
         SqrtBox[
          FractionBox["10", "21"]], "3"]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"1G\"\>"},
       {
        SqrtBox[
         FractionBox["65", "462"]]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"1I\"\>"},
       {
        RowBox[{"-", 
         FractionBox[
          SqrtBox[
           FractionBox["91", "33"]], "3"]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"2H2\"\>", GridBox[{
       {"\<\"3H\"\>"},
       {
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"1D\"\>"},
       {
        FractionBox[
         SqrtBox[
          FractionBox["13", "6"]], "3"]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"1G\"\>"},
       {
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         SqrtBox[
          FractionBox["2", "33"]]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"1I\"\>"},
       {
        RowBox[{"-", 
         FractionBox[
          SqrtBox[
           FractionBox["5", "33"]], "3"]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"2I\"\>", GridBox[{
       {"\<\"3F\"\>"},
       {
        RowBox[{"-", 
         FractionBox[
          SqrtBox[
           FractionBox["7", "2"]], "3"]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"3H\"\>"},
       {
        RowBox[{"-", 
         FractionBox["1", "3"]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"1G\"\>"},
       {
        SqrtBox[
         FractionBox["3", "22"]]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"1I\"\>"},
       {
        FractionBox["2", 
         SqrtBox["11"]]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"2K\"\>", GridBox[{
       {"\<\"3H\"\>"},
       {
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"1G\"\>"},
       {
        RowBox[{"2", " ", 
         SqrtBox[
          FractionBox["2", "33"]]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"1I\"\>"},
       {
        RowBox[{"-", 
         SqrtBox[
          FractionBox["17", "66"]]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"2L\"\>", GridBox[{
       {"\<\"3H\"\>"},
       {
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"\<\"1I\"\>"},
       {
        FractionBox["1", 
         SqrtBox["2"]]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[
          0.2]}}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  TableForm[{{"4S", {"3F", 1}}, {
    "4D", {"3P", -Rational[3, 7]^Rational[1, 2]}, {
     "3F", Rational[-1, 3] 2^Rational[1, 2]}, {
     "3H", Rational[-1, 3] Rational[22, 7]^Rational[1, 2]}}, {
    "4F", {"3P", 14^Rational[-1, 2]}, {
     "3F", -Rational[2, 3]^Rational[1, 2]}, {
     "3H", Rational[11, 42]^Rational[1, 2]}}, {
    "4G", {"3P", Rational[11, 42]^Rational[1, 2]}, {
     "3F", Rational[-1, 3] 2^Rational[1, 2]}, {
     "3H", Rational[-1, 3] Rational[65, 14]^Rational[1, 2]}}, {
    "4I", {"3F", Rational[-1, 3] 2^Rational[1, 2]}, {
     "3H", Rational[1, 3] 7^Rational[1, 2]}}, {
    "2P", {"3F", -2^Rational[-1, 2]}, {
     "1D", Rational[5, 21]^Rational[1, 2]}, {
     "1G", -Rational[11, 42]^Rational[1, 2]}}, {
    "2D1", {"3P", Rational[1, 7] 3^Rational[1, 2]}, {
     "3F", Rational[-1, 3] Rational[7, 2]^Rational[1, 2]}, {
     "3H", Rational[1, 21] 22^Rational[1, 2]}, {
     "1D", Rational[-2, 7] 2^Rational[1, 2]}, {
     "1G", Rational[1, 7] Rational[33, 2]^Rational[1, 2]}}, {
    "2D2", {"3P", Rational[1, 7] 11^Rational[1, 2]}, {
     "3H", Rational[-3, 7] Rational[3, 2]^Rational[1, 2]}, {
     "1D", Rational[1, 7] Rational[33, 2]^Rational[1, 2]}, {
     "1G", Rational[2, 7] 2^Rational[1, 2]}}, {
    "2F1", {"3P", -14^Rational[-1, 2]}, {"3F", -6^Rational[-1, 2]}, {
     "3H", -Rational[11, 42]^Rational[1, 2]}, {
     "1S", Rational[2, 7]^Rational[1, 2]}, {
     "1D", Rational[-1, 3] Rational[5, 14]^Rational[1, 2]}, {
     "1G", -14^Rational[-1, 2]}, {
     "1I", Rational[-1, 3] Rational[13, 14]^Rational[1, 2]}}, {
    "2F2", {"3P", Rational[1, 2] Rational[11, 7]^Rational[1, 2]}, {
     "3H", Rational[-1, 2] Rational[3, 7]^Rational[1, 2]}, {
     "1D", Rational[-1, 6] Rational[55, 7]^Rational[1, 2]}, {
     "1G", (-2) 77^Rational[-1, 2]}, {
     "1I", Rational[1, 6] Rational[91, 11]^Rational[1, 2]}}, {
    "2G1", {"3P", Rational[-1, 7] Rational[11, 6]^Rational[1, 2]}, {
     "3F", Rational[-1, 3] Rational[7, 2]^Rational[1, 2]}, {
     "3H", Rational[1, 21] Rational[65, 2]^Rational[1, 2]}, {
     "1D", Rational[1, 7] Rational[55, 6]^Rational[1, 2]}, {
     "1G", Rational[-5, 7] Rational[5, 22]^Rational[1, 2]}, {
     "1I", Rational[13, 66]^Rational[1, 2]}}, {
    "2G2", {"3P", Rational[-1, 14] 65^Rational[1, 2]}, {
     "3H", Rational[-1, 14] 33^Rational[1, 2]}, {
     "1D", Rational[1, 42] 13^Rational[1, 2]}, {
     "1G", Rational[2, 7] Rational[13, 3]^Rational[1, 2]}, {
     "1I", Rational[1, 6] 5^Rational[1, 2]}}, {
    "2H1", {"3F", -2^Rational[-1, 2]}, {
     "1D", Rational[1, 3] Rational[10, 21]^Rational[1, 2]}, {
     "1G", Rational[65, 462]^Rational[1, 2]}, {
     "1I", Rational[-1, 3] Rational[91, 33]^Rational[1, 2]}}, {
    "2H2", {"3H", -2^Rational[-1, 2]}, {
     "1D", Rational[1, 3] Rational[13, 6]^Rational[1, 2]}, {
     "1G", (-2) Rational[2, 33]^Rational[1, 2]}, {
     "1I", Rational[-1, 3] Rational[5, 33]^Rational[1, 2]}}, {
    "2I", {"3F", Rational[-1, 3] Rational[7, 2]^Rational[1, 2]}, {"3H", 
      Rational[-1, 3]}, {"1G", Rational[3, 22]^Rational[1, 2]}, {
     "1I", 2 11^Rational[-1, 2]}}, {
    "2K", {"3H", -2^Rational[-1, 2]}, {
     "1G", 2 Rational[2, 33]^Rational[1, 2]}, {
     "1I", -Rational[17, 66]^Rational[1, 2]}}, {
    "2L", {"3H", -2^Rational[-1, 2]}, {"1I", 2^Rational[-1, 2]}}}]]], "Output",\

 CellChangeTimes->{{3.866542799443054*^9, 3.866542800581246*^9}, 
   3.8665430315619993`*^9, 3.866543482892641*^9, {3.866543569152204*^9, 
   3.8665435715695543`*^9}, 3.866623797750422*^9, 3.866625670017239*^9},
 CellLabel->
  "Out[12]//TableForm=",ExpressionUUID->"d5040d0b-7721-4e97-bf88-\
ea89e79b3bdf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsnQV0Fcf3xykQgQBJkECABA9QXEpxKw7BfriU4h7coQQvtEiR4F5cirsU
dwvuhASXBAgkQMn+v/93T+ZMZt97DTHyXu7nnOzZ7Jud3b179853Zmdms7Xr
1bBT4kSJEvWzx6Jh20GV+vZtO+R/TvinsVe/rp29Onao6dW/Y+eOfUu2S4KN
b/Hng5X/X9cYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEY
hmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEY
hmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEY
hmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEY
hmEYhmEYhmEYhmEYhmEYhmEYhmHiGZ8/f6aVsLAwefuXL1/Er7SkLf/++69Y
F4QZULbTFkovMhcp5XzkNMr5YKkcy8owZU/99qjZQbawFvFOiXVNukHyUfT3
SM5BTiNvofTyUt7x06dPYguty2dCt1ucIRD+YPToDMMwDMMkWIRs0MsDo8JG
TiyEjSapC1l2GhWitJciTjRJJmk6RW3FyBUEGfPy8muhfU1ZVb9d3iLWxQ3S
C0uxNHoh8tFlSazkY/QChRgWR5f9hGEYhmGYBIgiBoTYkLUEyQzSq/rWNnlf
sWJKzIjDiZ/E4cQW5ZSUg1oZsvYjlMs3ZZavyl+5EXL9QrR5inMIDQ3VdKJU
JJMxqmM1SS3L7erCi5SKknyGyonpm/QZhmEYhmEIat0y2uamiBAZ2v769esA
A48ePRIrjw2If58/fy6UkpBhb968efbsmZ+f3+Nw6F9/f/+goCA6K/1BrRKj
r93lRksyWnQaHuV96Xb7+vouXbq0V69ejRs3btSoEZZdu3adO3fuxYsX379/
T+nfvn2LLRs3bhT7BgYGPjKA24TlkydPcIuxTjdarNBSgJsLH9AitqYizcOH
DykHyuTp06fkCbQXfqI8sQJv+fjxY5Qvn2EYhmEYK0bo2C8S4le5DU1sbN26
daJEiRInToxl0qRJv/vuO6xgmdhAIgMtW7a8du2acqyRI0emS5eOEicKB7sk
SZKkf//+kDFawmh2U9o/jUrWGLEDdTqFOj1//vykSZOqVKmSI0eO1KlTY1m8
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
kD7GasbgyjezoiAOjU6DYPRjB/+Zs3AwXEJISEioAVwI/oX1sPLhwwecIX+T
i2EYhmGsD6NyRVGhkAF6YWl0F5FAr5fkEUNiiLpepYRJc4Fq0Wh4tCyEKZTJ
AbSI1YQo56zsrleMeoPLaczPESE3hxpNoEdkpZyGuPX/ed9NHYubWxmGYRgm
4WBUD5gSA0rjql7Qij4GshY1I3GNyif5E6tWjFHNply1ma+yRh6jN0LULOSc
w6TvHWjhAlXZouyubDdznop2Ffpc37ZvPh+RQLiK/hyErrZ6L2IYhmGYhIYi
R01NGi8Sm5G4ipYQaZRWRPOyRDmc/ijWh2JSU42xUbaD3A9WbBE9NJSba7R1
1FQXEfkQke+3bMpPIrOvsovRapHc4G/dXVAYhmEYJiFjSrSYeXesKB/9vkoa
OTd5439KYqPbrQ9Zteola9wreb1SNdrfIwpv8BUv0sxO/WpGf4rE1M3VlDcm
kEoQwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAM
wzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAM
wzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAM
E//58uULrYSFhckr//77r7wRyeTtckrKgZbiV5H+8+fP+mMp22Xk/JUDWTSy
lehy9NYT9sEK2UFObyofWid7CquGGdB09tdnGM/RX5HeP+WfPn78SCuKx8p+
JYwAFH+zIMsw1oTyvItHVR9vmchAcUMfLeXtSpHHMIzlon+KZcGgRVSnIo2I
tEZzkJPJuQnppY8tyqGtKbbIAlXTSTJZjhLC4PqfjApRubqhHFrRafoE8Rxx
wmYKdL0fKnuZciflRjDMN0HfRKD8xHwVStVVDqf6+izDMJaLvnCX/5VFrL49
UJM02Pnz58+ePYulr68vVi4YOHfu3KVLl7ARuysqzs/Pj1JiiTRIfN4AtoeE
hOjFs+Wi2MpULUDZQhYTrazPnj0jE128eBEWI1thC/6Fke/fvy9yfvPmzZkz
Z5AGv5JhsY5ktMvNmzfj6LKjjSxHZRsabbvWpGLr8uXLdL3khGQKbBE+iXVy
S/Er/PDatWsvX76M64tkEjyKfNVXUY0GXsYUcgu20tYqfrKCYoVhGBn59asQ
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
MivjnqwDvWQ12gNW6YmhGSuzImMZUwa3ROWm7xKgRXwzKLboVaveUBZtCsZa
UeKqvNH6ulTFDeb1qoVW6hmGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRirJCwsTCzBly9faOXz589i+7///ivWabt+x48fPyp50l6U
ochWrISGhio506+0RUbsYtGIaxQrtC7bJzJXSvanlPItEPeFtggzivsodpFP
IP4j20T2E7ou2UtpSX4oe5Hsh3ImtF3vgVrEe8QwcYDsybITyp6M7eyZkcSU
3ZR4qASH6KPE5xi/X3o/kS9Ek2KXqZIiaqdkNDDi30+fPinnIM7qm/iqXj+I
50gpeeP0tJhYRtZXyrpR6aVFfOqF2+zatWufgT179hw4cGD37t379+/fu3cv
tmDl3bt38iGQw8WLFw8ePIjElOygAfzr6+sbHBwsngKr8TejF6KIqP9EHyKC
goJg+X79+pUuXbpAgQIFCxYsVKhQo0aNpk2bduPGjQ8fPlCyS5cueXt7//PP
P5ZYKTBqJaNBiVLCkfYa2G8A/2IJP6Qt5KVYgZfSFvjqPwaePn0ad1fFMOGI
Sqj+8eTCNwroDSVKE7lYifFgaKrRJmYPIUS4QI6Q8rVTMpKaX1vWyMhHNOWi
+mpX3GNGtGiGc/u2p8fEBvJNV5zz7du3AQEBdwzcu3cPS+gloUXlHN6/f+/q
6urs7JwuXTo7O7tEiRIlSZIEK/jXyckpffr0t2/fFgdCuMZKp06dkidPnjRp
UiT+7rvvEidOnCJFCqTv0qXL5cuXNSsK1/o2QAoIYjus9+jRI5iaQo0p6OkT
hd3z589XrlwJsZopUyZYPm3atMWLFy9XrlyFChWqVauWN2/eokWLjh49+sGD
B69evRo0aFCZMmU2bdoUWxcZC8jeCBM9fvwY13LTwN27d9+8eQN9TtaQ21Sx
zJIlS+rUqWGQZMmSwa/gYFimkYCbiXV7e/tEBrDL2rVrLVHhMxaNIi0oOCDS
wslfv35N/1pZdT5WkVtBESIQ/fz8/FB+3b9/H8UQIi2KMHoPKL+9ij7Kyy/E
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
QgghhBBCCCGEEEIIIYQQQgghhATM/wG6GjJo
     "], {{0, 121.}, {459., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144., 144.},
     SmoothingQuality->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{488.859375, Automatic},
   ImageSizeRaw->{459., 121.},
   PlotRange->{{0, 459.}, {0, 121.}}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"CFPterms", "[", 
  RowBox[{"3", ",", "\"\<2K\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.866542842038205*^9, 3.8665428725374537`*^9}, {
  3.866543014691111*^9, 3.8665430260627117`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"e5f01068-639a-4dd6-994a-1ad5f3579d00"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\<\"2K\"\>", ",", 
    RowBox[{"{", 
     RowBox[{"\<\"3H\"\>", ",", 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\<\"1G\"\>", ",", 
      RowBox[{"2", " ", 
       SqrtBox[
        FractionBox["2", "33"]]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\<\"1I\"\>", ",", 
      RowBox[{"-", 
       SqrtBox[
        FractionBox["17", "66"]]}]}], "}"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.8665428455922213`*^9, 3.86654286572043*^9}, {
   3.86654300472585*^9, 3.866543034982113*^9}, 3.866543485805789*^9, 
   3.86662380077669*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"7b828eb0-7a21-4a8d-ae17-5a061c9f8749"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CFPterms", "[", 
  RowBox[{"3", ",", "7", ",", 
   RowBox[{"1", "/", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8665430420711193`*^9, 3.86654307178307*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"a110e6f9-5e81-4074-be24-54b29c729888"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\<\"2K\"\>", ",", 
    RowBox[{"{", 
     RowBox[{"\<\"3H\"\>", ",", 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\<\"1G\"\>", ",", 
      RowBox[{"2", " ", 
       SqrtBox[
        FractionBox["2", "33"]]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\<\"1I\"\>", ",", 
      RowBox[{"-", 
       SqrtBox[
        FractionBox["17", "66"]]}]}], "}"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.86654305377813*^9, 3.8665430720737543`*^9}, 
   3.866543487037402*^9, 3.86662380188275*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"ae8ac867-bd88-4f2b-9f9d-689452a01063"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["AllowedSLterms and AllowedNKSLterms", "Subsection",
 CellChangeTimes->{
  3.86654230589126*^9, 3.866543282125558*^9, {3.866543861348976*^9, 
   3.866543861700675*^9}, 3.866544047539373*^9, {3.866544159163653*^9, 
   3.866544162891097*^9}, {3.866544320847146*^9, 
   3.866544323604844*^9}},ExpressionUUID->"9d5287ab-891e-459f-9b25-\
b378de501cca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "AllowedSLterms"}]], "Input",
 CellChangeTimes->{{3.866542237579227*^9, 3.866542241066489*^9}, {
   3.866542296294137*^9, 3.866542297629156*^9}, 3.866543282924837*^9, {
   3.866543865708206*^9, 3.866543876060338*^9}, 3.867925761514022*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"d01e3e1f-52ad-4a82-98a1-6c6da77afefb"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"AllowedSLterms[n] returns a list with the allowed \
terms in the f^n configuration, the terms are given as lists in the format \
{S,L}. This list may have redundancies which are compatible with the \
degeneracies that might correspond to the given case.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"AllowedSLterms", "[", "qlanth`Private`n_", "]"}],
                     ":=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"findSL", "[", 
                    RowBox[{"First", "[", "#1", "]"}], "]"}], "&"}], ")"}], 
                    "/@", 
                    RowBox[{"CFPterms", "[", "qlanth`Private`n", "]"}]}]}]}, {
                   " "}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"qlanth`AllowedSLterms\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"AllowedSLterms[n] returns a list with the allowed \
terms in the f^n configuration, the terms are given as lists in the format \
{S,L}. This list may have redundancies which are compatible with the \
degeneracies that might correspond to the given case.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "AllowedSLterms[n] returns a list with the allowed terms in the f^n \
configuration, the terms are given as lists in the format {S,L}. This list \
may have redundancies which are compatible with the degeneracies that might \
correspond to the given case.", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, qlanth`AllowedSLterms, {qlanth`AllowedSLterms[
         Pattern[qlanth`Private`n, 
          Blank[]]] :> Map[qlanth`findSL[
          First[#]]& , 
         qlanth`CFPterms[qlanth`Private`n]]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "qlanth`AllowedSLterms"|>, False]]], "Output",
 CellChangeTimes->{
  3.866542241303317*^9, 3.866542297862979*^9, {3.8665423741768713`*^9, 
   3.866542384244082*^9}, 3.866542554674469*^9, 3.866543283786284*^9, {
   3.8665435980467863`*^9, 3.866543612428871*^9}, 3.866543693044091*^9, 
   3.866543876639662*^9, 3.8666238056869*^9, 3.8679257618065968`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"4db6a4e2-1cd2-4278-bf4b-95fedbf1f57d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AllowedSLterms", "[", "3", "]"}]], "Input",
 CellChangeTimes->{{3.8665433374135857`*^9, 3.8665433378561296`*^9}, {
  3.866543621222323*^9, 3.8665436224487753`*^9}, {3.866543742812789*^9, 
  3.866543742852252*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"7ff3c07e-e5a4-49a0-9079-12de1a25d43b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "2"], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "2"], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "2"], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "2"], ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "2"], ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", "8"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.866543622706091*^9, 3.866543743065474*^9, 
  3.8665438579556007`*^9, 3.866623807453463*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"39db39d7-f3c7-4960-9253-8c92f27efdb5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "AllowedNKSLterms"}]], "Input",
 CellChangeTimes->{{3.866543879872427*^9, 3.8665438800283413`*^9}, 
   3.8679257636609907`*^9},
 CellLabel->"In[5]:=",ExpressionUUID->"94ac4cb0-b532-49e9-9644-fed5a2a73f09"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"AllowedNKSLterms[n] returns a list with the allowed \
terms in the f^n configuration, the terms are given as strings in \
spectroscopic notation. An integer as the last is used to distinguish cases \
with degenaracy.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    
                    RowBox[{
                    "AllowedNKSLterms", "[", "qlanth`Private`n_", "]"}], ":=", 
                    RowBox[{"First", "/@", 
                    RowBox[{"CFPterms", "[", "qlanth`Private`n", "]"}]}]}]}, {
                   " "}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"qlanth`AllowedNKSLterms\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"AllowedNKSLterms[n] returns a list with the allowed \
terms in the f^n configuration, the terms are given as strings in \
spectroscopic notation. An integer as the last is used to distinguish cases \
with degenaracy.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "AllowedNKSLterms[n] returns a list with the allowed terms in the f^n \
configuration, the terms are given as strings in spectroscopic notation. An \
integer as the last is used to distinguish cases with degenaracy.", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, qlanth`AllowedNKSLterms, {qlanth`AllowedNKSLterms[
         Pattern[qlanth`Private`n, 
          Blank[]]] :> Map[First, 
         qlanth`CFPterms[qlanth`Private`n]]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "qlanth`AllowedNKSLterms"|>, False]]], "Output",
 CellChangeTimes->{3.8665438802560587`*^9, 3.8666238095331373`*^9, 
  3.867925763935401*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"5b88b807-37c6-4111-8fe8-e7433a1624fc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AllowedNKSLterms", "[", "3", "]"}]], "Input",
 CellChangeTimes->{{3.866543729497788*^9, 3.8665437314338284`*^9}, {
  3.866543826845727*^9, 3.866543826911854*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"38bb69e5-b221-4782-9b94-29815c66cb10"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"4S\"\>", ",", "\<\"4D\"\>", ",", "\<\"4F\"\>", 
   ",", "\<\"4G\"\>", ",", "\<\"4I\"\>", ",", "\<\"2P\"\>", 
   ",", "\<\"2D1\"\>", ",", "\<\"2D2\"\>", ",", "\<\"2F1\"\>", 
   ",", "\<\"2F2\"\>", ",", "\<\"2G1\"\>", ",", "\<\"2G2\"\>", 
   ",", "\<\"2H1\"\>", ",", "\<\"2H2\"\>", ",", "\<\"2I\"\>", 
   ",", "\<\"2K\"\>", ",", "\<\"2L\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.866543731691605*^9, 3.8665438271282883`*^9, {3.866543858961019*^9, 
   3.866543882824494*^9}, 3.866623811489406*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"ccb214e7-32ee-4564-862a-5d48ca6a3cc7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "prints", " ", "how", " ", "many", " ", "terms", " ", "there",
     " ", "are", " ", "for", " ", "the", " ", "different", " ", 
    SuperscriptBox["f", "n"], " ", "configurations"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Superscript", "[", 
        RowBox[{"\"\<f\>\"", ",", "#"}], "]"}], ",", 
       RowBox[{"Length", "[", 
        RowBox[{"AllowedNKSLterms", "[", "#", "]"}], "]"}]}], "}"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}], 
     "}"}]}], " ", "//", " ", "TableForm"}]}]], "Input",
 CellChangeTimes->{{3.8665438927719927`*^9, 3.866543973371682*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"7e4f13aa-2090-41bc-a98d-9e59c2042a49"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{"\"f\"", "1"},
      "Superscript"], "1"},
    {
     TemplateBox[{"\"f\"", "2"},
      "Superscript"], "7"},
    {
     TemplateBox[{"\"f\"", "3"},
      "Superscript"], "17"},
    {
     TemplateBox[{"\"f\"", "4"},
      "Superscript"], "47"},
    {
     TemplateBox[{"\"f\"", "5"},
      "Superscript"], "73"},
    {
     TemplateBox[{"\"f\"", "6"},
      "Superscript"], "119"},
    {
     TemplateBox[{"\"f\"", "7"},
      "Superscript"], "119"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.866543897820696*^9, 3.866543927963232*^9}, 
   3.8665439736509857`*^9, 3.866623812502839*^9},
 CellLabel->
  "Out[12]//TableForm=",ExpressionUUID->"c2462ad4-fdee-476d-ae0a-\
344a19fbea4e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Superscript", "[", 
        RowBox[{"\"\<f\>\"", ",", "#"}], "]"}], "}"}], ",", 
      RowBox[{"AllowedNKSLterms", "[", "#", "]"}]}], "]"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}],
     "}"}]}], " ", "//", "TableForm"}]], "Input",
 CellChangeTimes->{{3.866543992817954*^9, 3.8665440185025787`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"28ff8f90-c500-42d2-9935-0e315c4b62a2"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     TemplateBox[{"\"f\"", "1"},
      "Superscript"], "\<\"2F\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {
     TemplateBox[{"\"f\"", "2"},
      "Superscript"], "\<\"3P\"\>", "\<\"3F\"\>", "\<\"3H\"\>", "\<\"1S\"\>", \
"\<\"1D\"\>", "\<\"1G\"\>", "\<\"1I\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {
     TemplateBox[{"\"f\"", "3"},
      "Superscript"], "\<\"4S\"\>", "\<\"4D\"\>", "\<\"4F\"\>", "\<\"4G\"\>", \
"\<\"4I\"\>", "\<\"2P\"\>", "\<\"2D1\"\>", "\<\"2D2\"\>", "\<\"2F1\"\>", \
"\<\"2F2\"\>", "\<\"2G1\"\>", "\<\"2G2\"\>", "\<\"2H1\"\>", "\<\"2H2\"\>", \
"\<\"2I\"\>", "\<\"2K\"\>", "\<\"2L\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {
     TemplateBox[{"\"f\"", "4"},
      "Superscript"], "\<\"5S\"\>", "\<\"5D\"\>", "\<\"5F\"\>", "\<\"5G\"\>", \
"\<\"5I\"\>", "\<\"3P1\"\>", "\<\"3P2\"\>", "\<\"3P3\"\>", "\<\"3D1\"\>", "\<\
\"3D2\"\>", "\<\"3F1\"\>", "\<\"3F2\"\>", "\<\"3F3\"\>", "\<\"3F4\"\>", \
"\<\"3G1\"\>", "\<\"3G2\"\>", "\<\"3G3\"\>", "\<\"3H1\"\>", "\<\"3H2\"\>", \
"\<\"3H3\"\>", "\<\"3H4\"\>", "\<\"3I1\"\>", "\<\"3I2\"\>", "\<\"3K1\"\>", \
"\<\"3K2\"\>", "\<\"3L\"\>", "\<\"3M\"\>", "\<\"1S1\"\>", "\<\"1S2\"\>", \
"\<\"1D1\"\>", "\<\"1D2\"\>", "\<\"1D3\"\>", "\<\"1D4\"\>", "\<\"1F\"\>", "\<\
\"1G1\"\>", "\<\"1G2\"\>", "\<\"1G3\"\>", "\<\"1G4\"\>", "\<\"1H1\"\>", \
"\<\"1H2\"\>", "\<\"1I1\"\>", "\<\"1I2\"\>", "\<\"1I3\"\>", "\<\"1K\"\>", "\<\
\"1L1\"\>", "\<\"1L2\"\>", "\<\"1N\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>"},
    {
     TemplateBox[{"\"f\"", "5"},
      "Superscript"], "\<\"6P\"\>", "\<\"6F\"\>", "\<\"6H\"\>", "\<\"4S\"\>", \
"\<\"4P1\"\>", "\<\"4P2\"\>", "\<\"4D1\"\>", "\<\"4D2\"\>", "\<\"4D3\"\>", \
"\<\"4F1\"\>", "\<\"4F2\"\>", "\<\"4F3\"\>", "\<\"4F4\"\>", "\<\"4G1\"\>", \
"\<\"4G2\"\>", "\<\"4G3\"\>", "\<\"4G4\"\>", "\<\"4H1\"\>", "\<\"4H2\"\>", \
"\<\"4H3\"\>", "\<\"4I1\"\>", "\<\"4I2\"\>", "\<\"4I3\"\>", "\<\"4K1\"\>", \
"\<\"4K2\"\>", "\<\"4L\"\>", "\<\"4M\"\>", "\<\"2P1\"\>", "\<\"2P2\"\>", \
"\<\"2P3\"\>", "\<\"2P4\"\>", "\<\"2D1\"\>", "\<\"2D2\"\>", "\<\"2D3\"\>", \
"\<\"2D4\"\>", "\<\"2D5\"\>", "\<\"2F1\"\>", "\<\"2F2\"\>", "\<\"2F3\"\>", \
"\<\"2F4\"\>", "\<\"2F5\"\>", "\<\"2F6\"\>", "\<\"2F7\"\>", "\<\"2G1\"\>", \
"\<\"2G2\"\>", "\<\"2G3\"\>", "\<\"2G4\"\>", "\<\"2G5\"\>", "\<\"2G6\"\>", \
"\<\"2H1\"\>", "\<\"2H2\"\>", "\<\"2H3\"\>", "\<\"2H4\"\>", "\<\"2H5\"\>", \
"\<\"2H6\"\>", "\<\"2H7\"\>", "\<\"2I1\"\>", "\<\"2I2\"\>", "\<\"2I3\"\>", \
"\<\"2I4\"\>", "\<\"2I5\"\>", "\<\"2K1\"\>", "\<\"2K2\"\>", "\<\"2K3\"\>", \
"\<\"2K4\"\>", "\<\"2K5\"\>", "\<\"2L1\"\>", "\<\"2L2\"\>", "\<\"2L3\"\>", \
"\<\"2M1\"\>", "\<\"2M2\"\>", "\<\"2N\"\>", "\<\"2O\"\>", "\<\"\"\>", "\<\"\"\
\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>"},
    {
     TemplateBox[{"\"f\"", "6"},
      "Superscript"], "\<\"7F\"\>", "\<\"5S\"\>", "\<\"5P\"\>", \
"\<\"5D1\"\>", "\<\"5D2\"\>", "\<\"5D3\"\>", "\<\"5F1\"\>", "\<\"5F2\"\>", \
"\<\"5G1\"\>", "\<\"5G2\"\>", "\<\"5G3\"\>", "\<\"5H1\"\>", "\<\"5H2\"\>", \
"\<\"5I1\"\>", "\<\"5I2\"\>", "\<\"5K\"\>", "\<\"5L\"\>", "\<\"3P1\"\>", \
"\<\"3P2\"\>", "\<\"3P3\"\>", "\<\"3P4\"\>", "\<\"3P5\"\>", "\<\"3P6\"\>", \
"\<\"3D1\"\>", "\<\"3D2\"\>", "\<\"3D3\"\>", "\<\"3D4\"\>", "\<\"3D5\"\>", \
"\<\"3F1\"\>", "\<\"3F2\"\>", "\<\"3F3\"\>", "\<\"3F4\"\>", "\<\"3F5\"\>", \
"\<\"3F6\"\>", "\<\"3F7\"\>", "\<\"3F8\"\>", "\<\"3F9\"\>", "\<\"3G1\"\>", \
"\<\"3G2\"\>", "\<\"3G3\"\>", "\<\"3G4\"\>", "\<\"3G5\"\>", "\<\"3G6\"\>", \
"\<\"3G7\"\>", "\<\"3H1\"\>", "\<\"3H2\"\>", "\<\"3H3\"\>", "\<\"3H4\"\>", \
"\<\"3H5\"\>", "\<\"3H6\"\>", "\<\"3H7\"\>", "\<\"3H8\"\>", "\<\"3H9\"\>", \
"\<\"3I1\"\>", "\<\"3I2\"\>", "\<\"3I3\"\>", "\<\"3I4\"\>", "\<\"3I5\"\>", \
"\<\"3I6\"\>", "\<\"3K1\"\>", "\<\"3K2\"\>", "\<\"3K3\"\>", "\<\"3K4\"\>", \
"\<\"3K5\"\>", "\<\"3K6\"\>", "\<\"3L1\"\>", "\<\"3L2\"\>", "\<\"3L3\"\>", \
"\<\"3M1\"\>", "\<\"3M2\"\>", "\<\"3M3\"\>", "\<\"3N\"\>", "\<\"3O\"\>", \
"\<\"1S1\"\>", "\<\"1S2\"\>", "\<\"1S3\"\>", "\<\"1S4\"\>", "\<\"1P\"\>", "\<\
\"1D1\"\>", "\<\"1D2\"\>", "\<\"1D3\"\>", "\<\"1D4\"\>", "\<\"1D5\"\>", \
"\<\"1D6\"\>", "\<\"1F1\"\>", "\<\"1F2\"\>", "\<\"1F3\"\>", "\<\"1F4\"\>", \
"\<\"1G1\"\>", "\<\"1G2\"\>", "\<\"1G3\"\>", "\<\"1G4\"\>", "\<\"1G5\"\>", \
"\<\"1G6\"\>", "\<\"1G7\"\>", "\<\"1G8\"\>", "\<\"1H1\"\>", "\<\"1H2\"\>", \
"\<\"1H3\"\>", "\<\"1H4\"\>", "\<\"1I1\"\>", "\<\"1I2\"\>", "\<\"1I3\"\>", \
"\<\"1I4\"\>", "\<\"1I5\"\>", "\<\"1I6\"\>", "\<\"1I7\"\>", "\<\"1K1\"\>", \
"\<\"1K2\"\>", "\<\"1K3\"\>", "\<\"1L1\"\>", "\<\"1L2\"\>", "\<\"1L3\"\>", \
"\<\"1L4\"\>", "\<\"1M1\"\>", "\<\"1M2\"\>", "\<\"1N1\"\>", "\<\"1N2\"\>", \
"\<\"1Q\"\>"},
    {
     TemplateBox[{"\"f\"", "7"},
      "Superscript"], "\<\"8S\"\>", "\<\"6P\"\>", "\<\"6D\"\>", "\<\"6F\"\>", \
"\<\"6G\"\>", "\<\"6H\"\>", "\<\"6I\"\>", "\<\"4S1\"\>", "\<\"4S2\"\>", \
"\<\"4P1\"\>", "\<\"4P2\"\>", "\<\"4D1\"\>", "\<\"4D2\"\>", "\<\"4D3\"\>", \
"\<\"4D4\"\>", "\<\"4D5\"\>", "\<\"4D6\"\>", "\<\"4F1\"\>", "\<\"4F2\"\>", \
"\<\"4F3\"\>", "\<\"4F4\"\>", "\<\"4F5\"\>", "\<\"4G1\"\>", "\<\"4G2\"\>", \
"\<\"4G3\"\>", "\<\"4G4\"\>", "\<\"4G5\"\>", "\<\"4G6\"\>", "\<\"4G7\"\>", \
"\<\"4H1\"\>", "\<\"4H2\"\>", "\<\"4H3\"\>", "\<\"4H4\"\>", "\<\"4H5\"\>", \
"\<\"4I1\"\>", "\<\"4I2\"\>", "\<\"4I3\"\>", "\<\"4I4\"\>", "\<\"4I5\"\>", \
"\<\"4K1\"\>", "\<\"4K2\"\>", "\<\"4K3\"\>", "\<\"4L1\"\>", "\<\"4L2\"\>", \
"\<\"4L3\"\>", "\<\"4M\"\>", "\<\"4N\"\>", "\<\"2S1\"\>", "\<\"2S2\"\>", \
"\<\"2P1\"\>", "\<\"2P2\"\>", "\<\"2P3\"\>", "\<\"2P4\"\>", "\<\"2P5\"\>", \
"\<\"2D1\"\>", "\<\"2D2\"\>", "\<\"2D3\"\>", "\<\"2D4\"\>", "\<\"2D5\"\>", \
"\<\"2D6\"\>", "\<\"2D7\"\>", "\<\"2F1\"\>", "\<\"2F2\"\>", "\<\"2F3\"\>", \
"\<\"2F4\"\>", "\<\"2F5\"\>", "\<\"2F6\"\>", "\<\"2F7\"\>", "\<\"2F8\"\>", \
"\<\"2F9\"\>", "\<\"2F10\"\>", "\<\"2G1\"\>", "\<\"2G2\"\>", "\<\"2G3\"\>", "\
\<\"2G4\"\>", "\<\"2G5\"\>", "\<\"2G6\"\>", "\<\"2G7\"\>", "\<\"2G8\"\>", "\<\
\"2G9\"\>", "\<\"2G10\"\>", "\<\"2H1\"\>", "\<\"2H2\"\>", "\<\"2H3\"\>", \
"\<\"2H4\"\>", "\<\"2H5\"\>", "\<\"2H6\"\>", "\<\"2H7\"\>", "\<\"2H8\"\>", \
"\<\"2H9\"\>", "\<\"2I1\"\>", "\<\"2I2\"\>", "\<\"2I3\"\>", "\<\"2I4\"\>", \
"\<\"2I5\"\>", "\<\"2I6\"\>", "\<\"2I7\"\>", "\<\"2I8\"\>", "\<\"2I9\"\>", \
"\<\"2K1\"\>", "\<\"2K2\"\>", "\<\"2K3\"\>", "\<\"2K4\"\>", "\<\"2K5\"\>", \
"\<\"2K6\"\>", "\<\"2K7\"\>", "\<\"2L1\"\>", "\<\"2L2\"\>", "\<\"2L3\"\>", \
"\<\"2L4\"\>", "\<\"2L5\"\>", "\<\"2M1\"\>", "\<\"2M2\"\>", "\<\"2M3\"\>", \
"\<\"2M4\"\>", "\<\"2N1\"\>", "\<\"2N2\"\>", "\<\"2O\"\>", "\<\"2Q\"\>"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  TableForm[{{
     Superscript["f", 1], "2F"}, {
     Superscript["f", 2], "3P", "3F", "3H", "1S", "1D", "1G", "1I"}, {
     Superscript["f", 3], "4S", "4D", "4F", "4G", "4I", "2P", "2D1", "2D2", 
     "2F1", "2F2", "2G1", "2G2", "2H1", "2H2", "2I", "2K", "2L"}, {
     Superscript["f", 4], "5S", "5D", "5F", "5G", "5I", "3P1", "3P2", "3P3", 
     "3D1", "3D2", "3F1", "3F2", "3F3", "3F4", "3G1", "3G2", "3G3", "3H1", 
     "3H2", "3H3", "3H4", "3I1", "3I2", "3K1", "3K2", "3L", "3M", "1S1", 
     "1S2", "1D1", "1D2", "1D3", "1D4", "1F", "1G1", "1G2", "1G3", "1G4", 
     "1H1", "1H2", "1I1", "1I2", "1I3", "1K", "1L1", "1L2", "1N"}, {
     Superscript["f", 5], "6P", "6F", "6H", "4S", "4P1", "4P2", "4D1", "4D2", 
     "4D3", "4F1", "4F2", "4F3", "4F4", "4G1", "4G2", "4G3", "4G4", "4H1", 
     "4H2", "4H3", "4I1", "4I2", "4I3", "4K1", "4K2", "4L", "4M", "2P1", 
     "2P2", "2P3", "2P4", "2D1", "2D2", "2D3", "2D4", "2D5", "2F1", "2F2", 
     "2F3", "2F4", "2F5", "2F6", "2F7", "2G1", "2G2", "2G3", "2G4", "2G5", 
     "2G6", "2H1", "2H2", "2H3", "2H4", "2H5", "2H6", "2H7", "2I1", "2I2", 
     "2I3", "2I4", "2I5", "2K1", "2K2", "2K3", "2K4", "2K5", "2L1", "2L2", 
     "2L3", "2M1", "2M2", "2N", "2O"}, {
     Superscript["f", 6], "7F", "5S", "5P", "5D1", "5D2", "5D3", "5F1", "5F2",
      "5G1", "5G2", "5G3", "5H1", "5H2", "5I1", "5I2", "5K", "5L", "3P1", 
     "3P2", "3P3", "3P4", "3P5", "3P6", "3D1", "3D2", "3D3", "3D4", "3D5", 
     "3F1", "3F2", "3F3", "3F4", "3F5", "3F6", "3F7", "3F8", "3F9", "3G1", 
     "3G2", "3G3", "3G4", "3G5", "3G6", "3G7", "3H1", "3H2", "3H3", "3H4", 
     "3H5", "3H6", "3H7", "3H8", "3H9", "3I1", "3I2", "3I3", "3I4", "3I5", 
     "3I6", "3K1", "3K2", "3K3", "3K4", "3K5", "3K6", "3L1", "3L2", "3L3", 
     "3M1", "3M2", "3M3", "3N", "3O", "1S1", "1S2", "1S3", "1S4", "1P", "1D1",
      "1D2", "1D3", "1D4", "1D5", "1D6", "1F1", "1F2", "1F3", "1F4", "1G1", 
     "1G2", "1G3", "1G4", "1G5", "1G6", "1G7", "1G8", "1H1", "1H2", "1H3", 
     "1H4", "1I1", "1I2", "1I3", "1I4", "1I5", "1I6", "1I7", "1K1", "1K2", 
     "1K3", "1L1", "1L2", "1L3", "1L4", "1M1", "1M2", "1N1", "1N2", "1Q"}, {
     Superscript["f", 7], "8S", "6P", "6D", "6F", "6G", "6H", "6I", "4S1", 
     "4S2", "4P1", "4P2", "4D1", "4D2", "4D3", "4D4", "4D5", "4D6", "4F1", 
     "4F2", "4F3", "4F4", "4F5", "4G1", "4G2", "4G3", "4G4", "4G5", "4G6", 
     "4G7", "4H1", "4H2", "4H3", "4H4", "4H5", "4I1", "4I2", "4I3", "4I4", 
     "4I5", "4K1", "4K2", "4K3", "4L1", "4L2", "4L3", "4M", "4N", "2S1", 
     "2S2", "2P1", "2P2", "2P3", "2P4", "2P5", "2D1", "2D2", "2D3", "2D4", 
     "2D5", "2D6", "2D7", "2F1", "2F2", "2F3", "2F4", "2F5", "2F6", "2F7", 
     "2F8", "2F9", "2F10", "2G1", "2G2", "2G3", "2G4", "2G5", "2G6", "2G7", 
     "2G8", "2G9", "2G10", "2H1", "2H2", "2H3", "2H4", "2H5", "2H6", "2H7", 
     "2H8", "2H9", "2I1", "2I2", "2I3", "2I4", "2I5", "2I6", "2I7", "2I8", 
     "2I9", "2K1", "2K2", "2K3", "2K4", "2K5", "2K6", "2K7", "2L1", "2L2", 
     "2L3", "2L4", "2L5", "2M1", "2M2", "2M3", "2M4", "2N1", "2N2", "2O", 
     "2Q"}}]]], "Output",
 CellChangeTimes->{{3.866544004091083*^9, 3.866544021216971*^9}, 
   3.8666238143514957`*^9},
 CellLabel->
  "Out[13]//TableForm=",ExpressionUUID->"424aff4f-5af3-450e-bcb9-\
439564756558"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["maxJ and minJ", "Subsection",
 CellChangeTimes->{
  3.86654230589126*^9, 3.866543282125558*^9, {3.866543861348976*^9, 
   3.866543861700675*^9}, 3.866544047539373*^9, {3.866544159163653*^9, 
   3.866544162891097*^9}, {3.866544320847146*^9, 
   3.8665443356257753`*^9}},ExpressionUUID->"78615389-47e4-47ce-8153-\
38f4b2a94086"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "maxJ"}]], "Input",
 CellChangeTimes->{{3.866544338515376*^9, 3.8665443443826427`*^9}, 
   3.8679257680444517`*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"e03596e7-5401-4359-bbfc-a1e9007ad4a1"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"maxJ[n] gives the maximum J=S+L that corresponds to \
the configuration f^n.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"maxJ", "[", "qlanth`Private`n_", "]"}], ":=", 
                    RowBox[{"Max", "[", 
                    RowBox[{"Total", "/@", 
                    
                    RowBox[{
                    "AllowedSLterms", "[", "qlanth`Private`n", "]"}]}], 
                    "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"qlanth`maxJ\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"maxJ[n] gives the maximum J=S+L that corresponds to \
the configuration f^n.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "maxJ[n] gives the maximum J=S+L that corresponds to the configuration \
f^n.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[DownValues, qlanth`maxJ, {qlanth`maxJ[
         Pattern[qlanth`Private`n, 
          Blank[]]] :> Max[
         Map[Total, 
          qlanth`AllowedSLterms[qlanth`Private`n]]]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> "qlanth`maxJ"|>, 
   False]]], "Output",
 CellChangeTimes->{3.86654434496032*^9, 3.866623818328712*^9, 
  3.867925768319434*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"92e575bb-fbbd-49e1-a59e-618f6c25b353"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "minJ"}]], "Input",
 CellChangeTimes->{3.867925790554009*^9},
 CellLabel->"In[8]:=",ExpressionUUID->"05aa8938-b099-4d75-b224-c9277703c42a"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"minJ[n] gives the minimum J=S+L that corresponds to \
the configuration f^n.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"minJ", "[", "qlanth`Private`n_", "]"}], ":=", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "-", 
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], "&"}], ")"}], "/@", 
                    
                    RowBox[{
                    "AllowedSLterms", "[", "qlanth`Private`n", "]"}]}], 
                    "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"qlanth`minJ\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"minJ[n] gives the minimum J=S+L that corresponds to \
the configuration f^n.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "minJ[n] gives the minimum J=S+L that corresponds to the configuration \
f^n.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[DownValues, qlanth`minJ, {qlanth`minJ[
         Pattern[qlanth`Private`n, 
          Blank[]]] :> Min[
         Map[Abs[Part[#, 1] - Part[#, 2]]& , 
          qlanth`AllowedSLterms[qlanth`Private`n]]]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> "qlanth`minJ"|>, 
   False]]], "Output",
 CellChangeTimes->{3.866544346691722*^9, 3.866623820996183*^9, 
  3.867925790816515*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"3421e8df-195d-495b-929c-bc7fe42ae56d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", " ", 
       RowBox[{"maxJ", "[", "#", "]"}], ",", 
       RowBox[{"minJ", "[", "#", "]"}]}], "}"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}], 
     "}"}]}], ",", 
   RowBox[{"TableHeadings", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SuperscriptBox[\(f\), \(n\)]\)\>\"", ",", 
        "\"\<max(L+S)\>\"", ",", "\"\<min(L+S)\>\""}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8665441661196823`*^9, 3.86654429594195*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"9472be04-e23c-4fbe-8690-26dd9c2077d8"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"\\!\\(\\*SuperscriptBox[\\(f\\), \\(n\\)]\\)\"\>",
       HoldForm], 
      TagBox["\<\"max(L+S)\"\>",
       HoldForm], 
      TagBox["\<\"min(L+S)\"\>",
       HoldForm]},
     {
      TagBox[
       StyleBox["\<\"\[Null]\"\>",
        ShowStringCharacters->False],
       StyleForm[#, ShowStringCharacters -> False]& ], "1", 
      FractionBox["7", "2"], 
      FractionBox["5", "2"]},
     {
      TagBox[
       StyleBox["\<\"\[Null]\"\>",
        ShowStringCharacters->False],
       StyleForm[#, ShowStringCharacters -> False]& ], "2", "6", "0"},
     {
      TagBox[
       StyleBox["\<\"\[Null]\"\>",
        ShowStringCharacters->False],
       StyleForm[#, ShowStringCharacters -> False]& ], "3", 
      FractionBox["17", "2"], 
      FractionBox["1", "2"]},
     {
      TagBox[
       StyleBox["\<\"\[Null]\"\>",
        ShowStringCharacters->False],
       StyleForm[#, ShowStringCharacters -> False]& ], "4", "10", "0"},
     {
      TagBox[
       StyleBox["\<\"\[Null]\"\>",
        ShowStringCharacters->False],
       StyleForm[#, ShowStringCharacters -> False]& ], "5", 
      FractionBox["23", "2"], 
      FractionBox["1", "2"]},
     {
      TagBox[
       StyleBox["\<\"\[Null]\"\>",
        ShowStringCharacters->False],
       StyleForm[#, ShowStringCharacters -> False]& ], "6", "12", "0"},
     {
      TagBox[
       StyleBox["\<\"\[Null]\"\>",
        ShowStringCharacters->False],
       StyleForm[#, ShowStringCharacters -> False]& ], "7", 
      FractionBox["25", "2"], 
      FractionBox["1", "2"]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, 
      "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{}, {
      "\!\(\*SuperscriptBox[\(f\), \(n\)]\)", "max(L+S)", 
       "min(L+S)"}}]]]], "Output",
 CellChangeTimes->{{3.866544168939806*^9, 3.866544171393314*^9}, {
   3.866544202766814*^9, 3.866544265851342*^9}, 3.866544296177018*^9, 
   3.866544349344483*^9, 3.866623824514708*^9},
 CellLabel->
  "Out[16]//TableForm=",ExpressionUUID->"ef681d5d-a580-4a0d-a32a-\
955765367125"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Terms and states in the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["f", "n"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "1be4bf89-571c-4cd8-8e3a-61fa087f00d4"],
 "configurations"
}], "Section",
 CellChangeTimes->{{3.866544695790481*^9, 3.866544708812324*^9}, {
  3.8665612662323513`*^9, 
  3.866561285645352*^9}},ExpressionUUID->"31f91f9b-7c98-451a-84d3-\
d977d58a2cf5"],

Cell[CellGroupData[{

Cell["AllowedSLJterms", "Subsection",
 CellChangeTimes->{{3.8665607376633587`*^9, 
  3.8665607393338223`*^9}},ExpressionUUID->"1b584a63-3ca4-4b11-9729-\
9bcbc6a4d684"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "AllowedSLJterms"}]], "Input",
 CellChangeTimes->{{3.866544392073324*^9, 3.866544392796618*^9}, {
   3.866544538508068*^9, 3.8665445396958027`*^9}, 3.8679257953279676`*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"6331c936-3adc-4ca8-b85c-be8ddec2739d"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"AllowedSLJterms[n] returns a list with the allowed \
{S,L,J} terms in the f^n configuration, the terms are given as lists in the \
format {S,L,J}. This list may have redundancies which are compatible with the \
degeneracies that might correspond to the given case.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    
                    RowBox[{
                    "AllowedSLJterms", "[", "qlanth`Private`n_", "]"}], ":=", 
                    
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"qlanth`Private`allowedSL", ",", 
                    "qlanth`Private`allowedSLJ"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"qlanth`Private`allowedSL", "=", 
                    
                    RowBox[{"AllowedSLterms", "[", "qlanth`Private`n", 
                    "]"}]}], ";", 
                    RowBox[{"qlanth`Private`allowedSLJ", "=", 
                    RowBox[{"{", "}"}]}], ";", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"qlanth`Private`nn", "=", "1"}], ",", 
                    RowBox[{"qlanth`Private`nn", "\[LessEqual]", 
                    
                    RowBox[{"Length", "[", "qlanth`Private`allowedSL", 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"qlanth`Private`termSL", "=", 
                    
                    RowBox[{"qlanth`Private`allowedSL", 
                    "\[LeftDoubleBracket]", "qlanth`Private`nn", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"qlanth`Private`termsSLJ", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"qlanth`Private`termSL", "\[LeftDoubleBracket]", 
                    "1", "\[RightDoubleBracket]"}], ",", 
                    
                    RowBox[{"qlanth`Private`termSL", "\[LeftDoubleBracket]", 
                    "2", "\[RightDoubleBracket]"}], ",", "qlanth`Private`J"}],
                     "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"qlanth`Private`J", ",", 
                    RowBox[{"Abs", "[", 
                    RowBox[{
                    
                    RowBox[{"qlanth`Private`termSL", "\[LeftDoubleBracket]", 
                    "1", "\[RightDoubleBracket]"}], "-", 
                    
                    RowBox[{"qlanth`Private`termSL", "\[LeftDoubleBracket]", 
                    "2", "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Total", "[", "qlanth`Private`termSL", "]"}]}], 
                    "}"}]}], "]"}]}], ";", 
                    RowBox[{"qlanth`Private`allowedSLJ", "=", 
                    RowBox[{"Join", "[", 
                    
                    RowBox[{"qlanth`Private`allowedSLJ", ",", 
                    "qlanth`Private`termsSLJ"}], "]"}]}], ";", 
                    RowBox[{"qlanth`Private`nn", "++"}]}]}], "]"}], ";", 
                    RowBox[{"SortBy", "[", 
                    RowBox[{"qlanth`Private`allowedSLJ", ",", "Last"}], 
                    "]"}]}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"qlanth`AllowedSLJterms\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"AllowedSLJterms[n] returns a list with the allowed \
{S,L,J} terms in the f^n configuration, the terms are given as lists in the \
format {S,L,J}. This list may have redundancies which are compatible with the \
degeneracies that might correspond to the given case.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "AllowedSLJterms[n] returns a list with the allowed {S,L,J} terms in the \
f^n configuration, the terms are given as lists in the format {S,L,J}. This \
list may have redundancies which are compatible with the degeneracies that \
might correspond to the given case.", "Documentation" -> None, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, qlanth`AllowedSLJterms, {qlanth`AllowedSLJterms[
         Pattern[qlanth`Private`n, 
          Blank[]]] :> 
       Module[{qlanth`Private`allowedSL, qlanth`Private`allowedSLJ}, 
         qlanth`Private`allowedSL = qlanth`AllowedSLterms[qlanth`Private`n]; 
         qlanth`Private`allowedSLJ = {}; 
         For[qlanth`Private`nn = 1, qlanth`Private`nn <= 
           Length[qlanth`Private`allowedSL], 
           qlanth`Private`termSL = 
            Part[qlanth`Private`allowedSL, qlanth`Private`nn]; 
           qlanth`Private`termsSLJ = Table[{
               Part[qlanth`Private`termSL, 1], 
               Part[qlanth`Private`termSL, 2], qlanth`Private`J}, {
              qlanth`Private`J, 
               Abs[
               Part[qlanth`Private`termSL, 1] - Part[
                qlanth`Private`termSL, 2]], 
               Total[qlanth`Private`termSL]}]; 
           qlanth`Private`allowedSLJ = 
            Join[qlanth`Private`allowedSLJ, qlanth`Private`termsSLJ]; 
           Increment[qlanth`Private`nn]]; 
         SortBy[qlanth`Private`allowedSLJ, Last]]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "qlanth`AllowedSLJterms"|>, False]]], "Output",
 CellChangeTimes->{3.866544393044498*^9, 3.866544539958069*^9, 
  3.867925795589807*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"8c31d20a-ec77-4a7f-9963-7cf1bf72cd05"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AllowedSLJterms", "[", "2", "]"}]], "Input",
 CellLabel->
  "In[295]:=",ExpressionUUID->"153fe5cd-ee78-4c91-a805-bd033e0642da"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "4", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "6", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.866544688859006*^9},
 CellLabel->
  "Out[295]=",ExpressionUUID->"0476a590-f5d8-4658-b649-6a853cbac262"]
}, Open  ]],

Cell[TextData[{
 "For ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["f", "2"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "c9302ba5-34c1-473b-a3e7-596935cf610c"],
 " the term with the lowest orbital angular momentum is 3P, for it, where one \
to add S and L, one would be adding a spin 1 to an orbital angular momentum \
of 1, in which case J can take values ranging from 0 to 2."
}], "Text",
 CellChangeTimes->{{3.866544555149909*^9, 
  3.866544641030917*^9}},ExpressionUUID->"eecd7b14-ed4b-48bc-951e-\
07fcde844b2f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{"AllowedSLJterms", "[", "2", "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "==", "1"}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "==", "1"}]}], "&"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.866544479105874*^9, 3.8665444853925447`*^9}, {
  3.866544654838526*^9, 3.866544673213263*^9}},
 CellLabel->
  "In[296]:=",ExpressionUUID->"f3bbe617-3564-48bf-8c2c-6f3ae9d2cad9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.866544485720352*^9, {3.866544533606073*^9, 3.8665445478242083`*^9}, {
   3.866544644163797*^9, 3.86654467349535*^9}, 3.866544726634962*^9},
 CellLabel->
  "Out[296]=",ExpressionUUID->"6a34e094-3490-454a-9f07-c20950ea2ed3"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["AllowedNKSLJterms", "Subsection",
 CellChangeTimes->{
  3.8665607508868504`*^9},ExpressionUUID->"9100b6f3-9350-4cd2-90aa-\
1a3b468f0e29"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "AllowedNKSLJterms"}]], "Input",
 CellChangeTimes->{{3.866544736558694*^9, 3.866544737278566*^9}, {
   3.866544775337332*^9, 3.866544805742907*^9}, 3.8679258000461407`*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"b9f3fd8f-2a94-4234-96de-2613dbf8342f"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"AllowedNKSLJterms[n] returns a list with the \
allowed {SL,J} terms in the f^n configuration, the terms are given as lists \
in the format {SL,J} where SL is a string in spectroscopic notation.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    
                    RowBox[{
                    "AllowedNKSLJterms", "[", "qlanth`Private`n_", "]"}], 
                    ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"qlanth`Private`allowedSL", ",", 
                    "qlanth`Private`allowedNKSL", ",", 
                    "qlanth`Private`allowedSLJ"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"qlanth`Private`allowedNKSL", "=", 
                    
                    RowBox[{"AllowedNKSLterms", "[", "qlanth`Private`n", 
                    "]"}]}], ";", 
                    RowBox[{"qlanth`Private`allowedSL", "=", 
                    
                    RowBox[{"AllowedSLterms", "[", "qlanth`Private`n", 
                    "]"}]}], ";", 
                    RowBox[{"qlanth`Private`allowedSLJ", "=", 
                    RowBox[{"{", "}"}]}], ";", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"qlanth`Private`nn", "=", "1"}], ",", 
                    RowBox[{"qlanth`Private`nn", "\[LessEqual]", 
                    
                    RowBox[{"Length", "[", "qlanth`Private`allowedSL", 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"qlanth`Private`termSL", "=", 
                    
                    RowBox[{"qlanth`Private`allowedSL", 
                    "\[LeftDoubleBracket]", "qlanth`Private`nn", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"qlanth`Private`termNKSL", "=", 
                    
                    RowBox[{"qlanth`Private`allowedNKSL", 
                    "\[LeftDoubleBracket]", "qlanth`Private`nn", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"qlanth`Private`termsSLJ", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"qlanth`Private`termNKSL", ",", 
                    "qlanth`Private`J"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"qlanth`Private`J", ",", 
                    RowBox[{"Abs", "[", 
                    RowBox[{
                    
                    RowBox[{"qlanth`Private`termSL", "\[LeftDoubleBracket]", 
                    "1", "\[RightDoubleBracket]"}], "-", 
                    
                    RowBox[{"qlanth`Private`termSL", "\[LeftDoubleBracket]", 
                    "2", "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Total", "[", "qlanth`Private`termSL", "]"}]}], 
                    "}"}]}], "]"}]}], ";", 
                    RowBox[{"qlanth`Private`allowedSLJ", "=", 
                    RowBox[{"Join", "[", 
                    
                    RowBox[{"qlanth`Private`allowedSLJ", ",", 
                    "qlanth`Private`termsSLJ"}], "]"}]}], ";", 
                    RowBox[{"qlanth`Private`nn", "++"}]}]}], "]"}], ";", 
                    RowBox[{"SortBy", "[", 
                    RowBox[{"qlanth`Private`allowedSLJ", ",", "Last"}], 
                    "]"}]}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"qlanth`AllowedNKSLJterms\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"AllowedNKSLJterms[n] returns a list with the \
allowed {SL,J} terms in the f^n configuration, the terms are given as lists \
in the format {SL,J} where SL is a string in spectroscopic notation.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "AllowedNKSLJterms[n] returns a list with the allowed {SL,J} terms in the \
f^n configuration, the terms are given as lists in the format {SL,J} where SL \
is a string in spectroscopic notation.", "Documentation" -> None, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, qlanth`AllowedNKSLJterms, {qlanth`AllowedNKSLJterms[
         Pattern[qlanth`Private`n, 
          Blank[]]] :> 
       Module[{qlanth`Private`allowedSL, qlanth`Private`allowedNKSL, 
          qlanth`Private`allowedSLJ}, 
         qlanth`Private`allowedNKSL = 
          qlanth`AllowedNKSLterms[qlanth`Private`n]; 
         qlanth`Private`allowedSL = qlanth`AllowedSLterms[qlanth`Private`n]; 
         qlanth`Private`allowedSLJ = {}; 
         For[qlanth`Private`nn = 1, qlanth`Private`nn <= 
           Length[qlanth`Private`allowedSL], 
           qlanth`Private`termSL = 
            Part[qlanth`Private`allowedSL, qlanth`Private`nn]; 
           qlanth`Private`termNKSL = 
            Part[qlanth`Private`allowedNKSL, qlanth`Private`nn]; 
           qlanth`Private`termsSLJ = 
            Table[{qlanth`Private`termNKSL, qlanth`Private`J}, {
              qlanth`Private`J, 
               Abs[
               Part[qlanth`Private`termSL, 1] - Part[
                qlanth`Private`termSL, 2]], 
               Total[qlanth`Private`termSL]}]; 
           qlanth`Private`allowedSLJ = 
            Join[qlanth`Private`allowedSLJ, qlanth`Private`termsSLJ]; 
           Increment[qlanth`Private`nn]]; 
         SortBy[qlanth`Private`allowedSLJ, Last]]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "qlanth`AllowedNKSLJterms"|>, False]]], "Output",
 CellChangeTimes->{
  3.8665447375109377`*^9, {3.8665447756583023`*^9, 3.866544811025633*^9}, 
   3.867925800632975*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"ec5e419c-1092-4eea-9914-da5fd618ad0d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AllowedNKSLJterms", "[", "3", "]"}]], "Input",
 CellChangeTimes->{{3.866544808963489*^9, 3.8665448095351067`*^9}},
 CellLabel->
  "In[303]:=",ExpressionUUID->"a33106bc-a96e-42d2-9aa2-d12b828f8173"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"2P\"\>", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"4D\"\>", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2D1\"\>", ",", 
     FractionBox["3", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2D2\"\>", ",", 
     FractionBox["3", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2P\"\>", ",", 
     FractionBox["3", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"4D\"\>", ",", 
     FractionBox["3", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"4F\"\>", ",", 
     FractionBox["3", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"4S\"\>", ",", 
     FractionBox["3", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2D1\"\>", ",", 
     FractionBox["5", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2D2\"\>", ",", 
     FractionBox["5", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2F1\"\>", ",", 
     FractionBox["5", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2F2\"\>", ",", 
     FractionBox["5", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"4D\"\>", ",", 
     FractionBox["5", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"4F\"\>", ",", 
     FractionBox["5", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"4G\"\>", ",", 
     FractionBox["5", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2F1\"\>", ",", 
     FractionBox["7", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2F2\"\>", ",", 
     FractionBox["7", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2G1\"\>", ",", 
     FractionBox["7", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2G2\"\>", ",", 
     FractionBox["7", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"4D\"\>", ",", 
     FractionBox["7", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"4F\"\>", ",", 
     FractionBox["7", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"4G\"\>", ",", 
     FractionBox["7", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2G1\"\>", ",", 
     FractionBox["9", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2G2\"\>", ",", 
     FractionBox["9", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2H1\"\>", ",", 
     FractionBox["9", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2H2\"\>", ",", 
     FractionBox["9", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"4F\"\>", ",", 
     FractionBox["9", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"4G\"\>", ",", 
     FractionBox["9", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"4I\"\>", ",", 
     FractionBox["9", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2H1\"\>", ",", 
     FractionBox["11", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2H2\"\>", ",", 
     FractionBox["11", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2I\"\>", ",", 
     FractionBox["11", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"4G\"\>", ",", 
     FractionBox["11", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"4I\"\>", ",", 
     FractionBox["11", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2I\"\>", ",", 
     FractionBox["13", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2K\"\>", ",", 
     FractionBox["13", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"4I\"\>", ",", 
     FractionBox["13", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2K\"\>", ",", 
     FractionBox["15", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2L\"\>", ",", 
     FractionBox["15", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"4I\"\>", ",", 
     FractionBox["15", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2L\"\>", ",", 
     FractionBox["17", "2"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.86654480972746*^9, 3.8665448216328707`*^9}},
 CellLabel->
  "Out[303]=",ExpressionUUID->"4b9209ba-6258-4c60-8fb5-7973826483b7"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["AllowedNKSLJMforJMterms", "Subsection",
 CellChangeTimes->{
  3.866560758045535*^9},ExpressionUUID->"28f9f584-b1ea-44d2-8371-\
b311689b44e8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "AllowedNKSLJMforJMterms"}]], "Input",
 CellChangeTimes->{{3.866559744534462*^9, 3.8665597448485737`*^9}, 
   3.867925805535986*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"60a0c9db-8635-429e-9baf-6d9756eb65e5"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"AllowedNKSLJMforJMterms[n, J, MJ] returns a list \
with all the terms that contain states of the f^n configuration that have a \
total angular momentum J, and a projection along the z-axis MJ. The returned \
list has elements of the form {SL (string in spectroscopic notation), J, MJ}.\
\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"AllowedNKSLJMforJMterms", "[", 
                    
                    RowBox[{
                    "qlanth`Private`n_", ",", "qlanth`Private`J_", ",", 
                    "qlanth`Private`MJ_"}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"qlanth`Private`allowedSL", ",", 
                    "qlanth`Private`allowedNKSL", ",", 
                    "qlanth`Private`allowedSLJM"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"qlanth`Private`allowedNKSL", "=", 
                    
                    RowBox[{"AllowedNKSLterms", "[", "qlanth`Private`n", 
                    "]"}]}], ";", 
                    RowBox[{"qlanth`Private`allowedSL", "=", 
                    
                    RowBox[{"AllowedSLterms", "[", "qlanth`Private`n", 
                    "]"}]}], ";", 
                    RowBox[{"qlanth`Private`allowedSLJM", "=", 
                    RowBox[{"{", "}"}]}], ";", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"qlanth`Private`nn", "=", "1"}], ",", 
                    RowBox[{"qlanth`Private`nn", "\[LessEqual]", 
                    
                    RowBox[{"Length", "[", "qlanth`Private`allowedSL", 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"qlanth`Private`termSL", "=", 
                    
                    RowBox[{"qlanth`Private`allowedSL", 
                    "\[LeftDoubleBracket]", "qlanth`Private`nn", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"qlanth`Private`termNKSL", "=", 
                    
                    RowBox[{"qlanth`Private`allowedNKSL", 
                    "\[LeftDoubleBracket]", "qlanth`Private`nn", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"qlanth`Private`termsSLJ", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{
                    
                    RowBox[{"qlanth`Private`termSL", "\[LeftDoubleBracket]", 
                    "1", "\[RightDoubleBracket]"}], "-", 
                    
                    RowBox[{"qlanth`Private`termSL", "\[LeftDoubleBracket]", 
                    "2", "\[RightDoubleBracket]"}]}], "]"}], "\[LessEqual]", 
                    "qlanth`Private`J", "\[LessEqual]", 
                    RowBox[{"Total", "[", "qlanth`Private`termSL", "]"}]}], 
                    "&&", 
                    RowBox[{
                    RowBox[{"Abs", "[", "qlanth`Private`MJ", "]"}], 
                    "\[LessEqual]", "qlanth`Private`J"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    
                    RowBox[{"qlanth`Private`termNKSL", ",", 
                    "qlanth`Private`J", ",", "qlanth`Private`MJ"}], "}"}], 
                    "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}]}], ";", 
                    RowBox[{"qlanth`Private`allowedSLJM", "=", 
                    RowBox[{"Join", "[", 
                    
                    RowBox[{"qlanth`Private`allowedSLJM", ",", 
                    "qlanth`Private`termsSLJ"}], "]"}]}], ";", 
                    RowBox[{"qlanth`Private`nn", "++"}]}]}], "]"}], ";", 
                    "qlanth`Private`allowedSLJM"}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"qlanth`AllowedNKSLJMforJMterms\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"AllowedNKSLJMforJMterms[n, J, MJ] returns a list \
with all the terms that contain states of the f^n configuration that have a \
total angular momentum J, and a projection along the z-axis MJ. The returned \
list has elements of the form {SL (string in spectroscopic notation), J, MJ}.\
\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "AllowedNKSLJMforJMterms[n, J, MJ] returns a list with all the terms that \
contain states of the f^n configuration that have a total angular momentum J, \
and a projection along the z-axis MJ. The returned list has elements of the \
form {SL (string in spectroscopic notation), J, MJ}.", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, qlanth`AllowedNKSLJMforJMterms, {
      qlanth`AllowedNKSLJMforJMterms[
         Pattern[qlanth`Private`n, 
          Blank[]], 
         Pattern[qlanth`Private`J, 
          Blank[]], 
         Pattern[qlanth`Private`MJ, 
          Blank[]]] :> 
       Module[{qlanth`Private`allowedSL, qlanth`Private`allowedNKSL, 
          qlanth`Private`allowedSLJM}, 
         qlanth`Private`allowedNKSL = 
          qlanth`AllowedNKSLterms[qlanth`Private`n]; 
         qlanth`Private`allowedSL = qlanth`AllowedSLterms[qlanth`Private`n]; 
         qlanth`Private`allowedSLJM = {}; 
         For[qlanth`Private`nn = 1, qlanth`Private`nn <= 
           Length[qlanth`Private`allowedSL], 
           qlanth`Private`termSL = 
            Part[qlanth`Private`allowedSL, qlanth`Private`nn]; 
           qlanth`Private`termNKSL = 
            Part[qlanth`Private`allowedNKSL, qlanth`Private`nn]; 
           qlanth`Private`termsSLJ = If[
              And[
              Abs[Part[qlanth`Private`termSL, 1] - Part[
                 qlanth`Private`termSL, 2]] <= qlanth`Private`J <= 
               Total[qlanth`Private`termSL], Abs[qlanth`Private`MJ] <= 
               qlanth`Private`J], {{
               qlanth`Private`termNKSL, qlanth`Private`J, 
                qlanth`Private`MJ}}, {}]; 
           qlanth`Private`allowedSLJM = 
            Join[qlanth`Private`allowedSLJM, qlanth`Private`termsSLJ]; 
           Increment[qlanth`Private`nn]]; qlanth`Private`allowedSLJM]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "qlanth`AllowedNKSLJMforJMterms"|>, False]]], "Output",
 CellChangeTimes->{3.866559745206863*^9, 3.8679258057839603`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"065e6179-3dbc-4136-a068-122f2bfc40a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AllowedNKSLJMforJMterms", "[", 
  RowBox[{"2", ",", " ", "6", ",", " ", 
   RowBox[{"-", "6"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.866559468219103*^9, 3.866559476998126*^9}},
 CellLabel->
  "In[312]:=",ExpressionUUID->"e7dc8470-c381-4dec-9588-c19cf587ea0a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"3H\"\>", ",", "6", ",", 
     RowBox[{"-", "6"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"1I\"\>", ",", "6", ",", 
     RowBox[{"-", "6"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.866559477462985*^9, 3.866559522733282*^9, 
  3.866559740992483*^9},
 CellLabel->
  "Out[312]=",ExpressionUUID->"2259801e-c52d-4f39-9e36-d5aa9cb5d76a"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["AllowedNKSLJMforJterms", "Subsection",
 CellChangeTimes->{
  3.866560771906384*^9},ExpressionUUID->"12016904-2d32-46ba-8359-\
327c8cbe3414"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "AllowedNKSLJMforJterms"}]], "Input",
 CellChangeTimes->{{3.866560768334538*^9, 3.866560768475582*^9}, 
   3.867925809144484*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"f02dfdbd-8977-447a-8ebe-66d4467a7ec4"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"AllowedNKSLJMforJterms[n, J] returns a list with \
all the states that have a total angular momentum J. The returned list has \
elements of the form {{SL (string in spectroscopic notation), J}, MJ}.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"AllowedNKSLJMforJterms", "[", 
                    RowBox[{"qlanth`Private`n_", ",", "qlanth`Private`J_"}], 
                    "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"qlanth`Private`allowedSL", ",", 
                    "qlanth`Private`allowedNKSL", ",", 
                    "qlanth`Private`allowedSLJM", ",", 
                    "qlanth`Private`Mvals"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"qlanth`Private`allowedNKSL", "=", 
                    
                    RowBox[{"AllowedNKSLterms", "[", "qlanth`Private`n", 
                    "]"}]}], ";", 
                    RowBox[{"qlanth`Private`allowedSL", "=", 
                    
                    RowBox[{"AllowedSLterms", "[", "qlanth`Private`n", 
                    "]"}]}], ";", 
                    RowBox[{"qlanth`Private`allowedSLJM", "=", 
                    RowBox[{"{", "}"}]}], ";", 
                    RowBox[{"qlanth`Private`Mvals", "=", 
                    RowBox[{"Range", "[", 
                    RowBox[{
                    RowBox[{"-", "qlanth`Private`J"}], ",", 
                    "qlanth`Private`J"}], "]"}]}], ";", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"qlanth`Private`nn", "=", "1"}], ",", 
                    RowBox[{"qlanth`Private`nn", "\[LessEqual]", 
                    
                    RowBox[{"Length", "[", "qlanth`Private`allowedSL", 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"qlanth`Private`termSL", "=", 
                    
                    RowBox[{"qlanth`Private`allowedSL", 
                    "\[LeftDoubleBracket]", "qlanth`Private`nn", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"qlanth`Private`termNKSL", "=", 
                    
                    RowBox[{"qlanth`Private`allowedNKSL", 
                    "\[LeftDoubleBracket]", "qlanth`Private`nn", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"qlanth`Private`termsSLJ", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{
                    
                    RowBox[{"qlanth`Private`termSL", "\[LeftDoubleBracket]", 
                    "1", "\[RightDoubleBracket]"}], "-", 
                    
                    RowBox[{"qlanth`Private`termSL", "\[LeftDoubleBracket]", 
                    "2", "\[RightDoubleBracket]"}]}], "]"}], "\[LessEqual]", 
                    "qlanth`Private`J", "\[LessEqual]", 
                    RowBox[{"Total", "[", "qlanth`Private`termSL", "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    
                    RowBox[{"qlanth`Private`termNKSL", ",", 
                    "qlanth`Private`J"}], "}"}], "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}]}], ";", 
                    RowBox[{"qlanth`Private`allowedSLJM", "=", 
                    RowBox[{"Join", "[", 
                    
                    RowBox[{"qlanth`Private`allowedSLJM", ",", 
                    "qlanth`Private`termsSLJ"}], "]"}]}], ";", 
                    RowBox[{"qlanth`Private`nn", "++"}]}]}], "]"}], ";", 
                    RowBox[{"Tuples", "[", 
                    RowBox[{"{", 
                    
                    RowBox[{"qlanth`Private`allowedSLJM", ",", 
                    "qlanth`Private`Mvals"}], "}"}], "]"}]}]}], "]"}]}]}, {
                   " "}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"qlanth`AllowedNKSLJMforJterms\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"AllowedNKSLJMforJterms[n, J] returns a list with \
all the states that have a total angular momentum J. The returned list has \
elements of the form {{SL (string in spectroscopic notation), J}, MJ}.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "AllowedNKSLJMforJterms[n, J] returns a list with all the states that \
have a total angular momentum J. The returned list has elements of the form \
{{SL (string in spectroscopic notation), J}, MJ}.", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, qlanth`AllowedNKSLJMforJterms, {qlanth`AllowedNKSLJMforJterms[
         Pattern[qlanth`Private`n, 
          Blank[]], 
         Pattern[qlanth`Private`J, 
          Blank[]]] :> 
       Module[{qlanth`Private`allowedSL, qlanth`Private`allowedNKSL, 
          qlanth`Private`allowedSLJM, qlanth`Private`Mvals}, 
         qlanth`Private`allowedNKSL = 
          qlanth`AllowedNKSLterms[qlanth`Private`n]; 
         qlanth`Private`allowedSL = qlanth`AllowedSLterms[qlanth`Private`n]; 
         qlanth`Private`allowedSLJM = {}; 
         qlanth`Private`Mvals = Range[-qlanth`Private`J, qlanth`Private`J]; 
         For[qlanth`Private`nn = 1, qlanth`Private`nn <= 
           Length[qlanth`Private`allowedSL], 
           qlanth`Private`termSL = 
            Part[qlanth`Private`allowedSL, qlanth`Private`nn]; 
           qlanth`Private`termNKSL = 
            Part[qlanth`Private`allowedNKSL, qlanth`Private`nn]; 
           qlanth`Private`termsSLJ = 
            If[Abs[Part[qlanth`Private`termSL, 1] - Part[
                qlanth`Private`termSL, 2]] <= qlanth`Private`J <= 
              Total[qlanth`Private`termSL], {{
               qlanth`Private`termNKSL, qlanth`Private`J}}, {}]; 
           qlanth`Private`allowedSLJM = 
            Join[qlanth`Private`allowedSLJM, qlanth`Private`termsSLJ]; 
           Increment[qlanth`Private`nn]]; 
         Tuples[{qlanth`Private`allowedSLJM, qlanth`Private`Mvals}]]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "qlanth`AllowedNKSLJMforJterms"|>, False]]], "Output",
 CellChangeTimes->{3.866560768743113*^9, 3.8679258093569098`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"c5e6c3c7-e4b0-461d-8f1b-9f580605058f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AllowedNKSLJMforJterms", "[", 
  RowBox[{"2", ",", "6"}], "]"}]], "Input",
 CellChangeTimes->{{3.8665598230912867`*^9, 3.86655982677287*^9}, 
   3.866559908250855*^9, {3.866559951458578*^9, 3.866559955443729*^9}},
 CellLabel->
  "In[317]:=",ExpressionUUID->"02f35f98-c147-47d3-ba6a-c4672d2f287a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"3H\"\>", ",", "6"}], "}"}], ",", 
     RowBox[{"-", "6"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"3H\"\>", ",", "6"}], "}"}], ",", 
     RowBox[{"-", "5"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"3H\"\>", ",", "6"}], "}"}], ",", 
     RowBox[{"-", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"3H\"\>", ",", "6"}], "}"}], ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"3H\"\>", ",", "6"}], "}"}], ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"3H\"\>", ",", "6"}], "}"}], ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"3H\"\>", ",", "6"}], "}"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"3H\"\>", ",", "6"}], "}"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"3H\"\>", ",", "6"}], "}"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"3H\"\>", ",", "6"}], "}"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"3H\"\>", ",", "6"}], "}"}], ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"3H\"\>", ",", "6"}], "}"}], ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"3H\"\>", ",", "6"}], "}"}], ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"1I\"\>", ",", "6"}], "}"}], ",", 
     RowBox[{"-", "6"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"1I\"\>", ",", "6"}], "}"}], ",", 
     RowBox[{"-", "5"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"1I\"\>", ",", "6"}], "}"}], ",", 
     RowBox[{"-", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"1I\"\>", ",", "6"}], "}"}], ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"1I\"\>", ",", "6"}], "}"}], ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"1I\"\>", ",", "6"}], "}"}], ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"1I\"\>", ",", "6"}], "}"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"1I\"\>", ",", "6"}], "}"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"1I\"\>", ",", "6"}], "}"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"1I\"\>", ",", "6"}], "}"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"1I\"\>", ",", "6"}], "}"}], ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"1I\"\>", ",", "6"}], "}"}], ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"1I\"\>", ",", "6"}], "}"}], ",", "6"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.866559827102069*^9, 3.866559908756283*^9, {3.866559953490386*^9, 
   3.866559955681672*^9}},
 CellLabel->
  "Out[317]=",ExpressionUUID->"62f3a109-32d8-4061-8ad4-a68c4eab9924"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["AllowedNKSLJMIMforJIterms", "Subsection",
 CellChangeTimes->{3.866560782188888*^9, 
  3.8665608131251717`*^9},ExpressionUUID->"d749deaa-6cc6-40a9-8443-\
77f1b8d1c837"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "AllowedNKSLJMIMforJIterms"}]], "Input",
 CellChangeTimes->{{3.866560815414649*^9, 3.866560815721273*^9}, 
   3.867925814256916*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"05fdc824-41a1-469f-9599-98c5b6aacb5e"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"AllowedNKSLJMIMforJIterms[n, J, I] returns the \
states that belong to the f^n configuration with a total angular momentun L+S \
equal to J and with a nuclear angular momentum I. The returned list has \
elements of the form {{{SL (string in spectroscopic notation), J}, MJ}, \
MI}.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"AllowedNKSLJMIMforJIterms", "[", 
                    
                    RowBox[{
                    "qlanth`Private`n_", ",", "qlanth`Private`J_", ",", 
                    "\[ImaginaryI]_"}], "]"}], ":=", 
                    RowBox[{"Tuples", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"AllowedNKSLJMforJterms", "[", 
                    RowBox[{"qlanth`Private`n", ",", "qlanth`Private`J"}], 
                    "]"}], ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{"qlanth`Private`MI", ",", 
                    RowBox[{"{", 
                    RowBox[{"qlanth`Private`MI", ",", 
                    RowBox[{"-", "\[ImaginaryI]"}], ",", "\[ImaginaryI]"}], 
                    "}"}]}], "]"}]}], "}"}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], \
"\<\"qlanth`AllowedNKSLJMIMforJIterms\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"AllowedNKSLJMIMforJIterms[n, J, I] returns the \
states that belong to the f^n configuration with a total angular momentun L+S \
equal to J and with a nuclear angular momentum I. The returned list has \
elements of the form {{{SL (string in spectroscopic notation), J}, MJ}, \
MI}.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "AllowedNKSLJMIMforJIterms[n, J, I] returns the states that belong to the \
f^n configuration with a total angular momentun L+S equal to J and with a \
nuclear angular momentum I. The returned list has elements of the form {{{SL \
(string in spectroscopic notation), J}, MJ}, MI}.", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, qlanth`AllowedNKSLJMIMforJIterms, {
      qlanth`AllowedNKSLJMIMforJIterms[
         Pattern[qlanth`Private`n, 
          Blank[]], 
         Pattern[qlanth`Private`J, 
          Blank[]], 
         Pattern[I, 
          Blank[]]] :> Tuples[{
          qlanth`AllowedNKSLJMforJterms[qlanth`Private`n, qlanth`Private`J], 
          Table[qlanth`Private`MI, {qlanth`Private`MI, -I, I}]}]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "qlanth`AllowedNKSLJMIMforJIterms"|>, False]]], "Output",
 CellChangeTimes->{3.866560816089162*^9, 3.867925814812956*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"c1bc74a2-033c-46e8-85aa-69e003568943"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AllowedNKSLJMIMforJIterms", "[", 
  RowBox[{"2", ",", "2", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.866560145479117*^9, 3.866560152596209*^9}},
 CellLabel->
  "In[321]:=",ExpressionUUID->"7215f170-a7bf-4bbf-a945-4537b28a1c98"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"3P\"\>", ",", "2"}], "}"}], ",", 
       RowBox[{"-", "2"}]}], "}"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"3P\"\>", ",", "2"}], "}"}], ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"3P\"\>", ",", "2"}], "}"}], ",", "0"}], "}"}], ",", 
     "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"3P\"\>", ",", "2"}], "}"}], ",", "1"}], "}"}], ",", 
     "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"3P\"\>", ",", "2"}], "}"}], ",", "2"}], "}"}], ",", 
     "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"3F\"\>", ",", "2"}], "}"}], ",", 
       RowBox[{"-", "2"}]}], "}"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"3F\"\>", ",", "2"}], "}"}], ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"3F\"\>", ",", "2"}], "}"}], ",", "0"}], "}"}], ",", 
     "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"3F\"\>", ",", "2"}], "}"}], ",", "1"}], "}"}], ",", 
     "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"3F\"\>", ",", "2"}], "}"}], ",", "2"}], "}"}], ",", 
     "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"1D\"\>", ",", "2"}], "}"}], ",", 
       RowBox[{"-", "2"}]}], "}"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"1D\"\>", ",", "2"}], "}"}], ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"1D\"\>", ",", "2"}], "}"}], ",", "0"}], "}"}], ",", 
     "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"1D\"\>", ",", "2"}], "}"}], ",", "1"}], "}"}], ",", 
     "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"1D\"\>", ",", "2"}], "}"}], ",", "2"}], "}"}], ",", 
     "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.866560152881804*^9},
 CellLabel->
  "Out[321]=",ExpressionUUID->"2decfc02-a3bc-4e2c-9c23-d41a8ca19598"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["AllowedJ", "Subsection",
 CellChangeTimes->{
  3.866560826097906*^9},ExpressionUUID->"57c3d1cb-9a91-490b-957e-\
3cfb158dca30"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "AllowedJ"}]], "Input",
 CellChangeTimes->{{3.866560902393416*^9, 3.8665609042746058`*^9}, 
   3.8679258175654078`*^9},
 CellLabel->
  "In[196]:=",ExpressionUUID->"b0a90998-7600-411d-94ed-435a9b8d3374"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"AllowedJ[n] returns the total angular momenta J \
that appear in the f^n configuration.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"AllowedJ", "[", "qlanth`Private`n_", "]"}], ":=", 
                    RowBox[{"Table", "[", 
                    RowBox[{"qlanth`Private`J", ",", 
                    RowBox[{"{", 
                    RowBox[{"qlanth`Private`J", ",", 
                    RowBox[{"minJ", "[", "qlanth`Private`n", "]"}], ",", 
                    RowBox[{"maxJ", "[", "qlanth`Private`n", "]"}]}], "}"}]}],
                     "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"qlanth`AllowedJ\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"AllowedJ[n] returns the total angular momenta J \
that appear in the f^n configuration.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "AllowedJ[n] returns the total angular momenta J that appear in the f^n \
configuration.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
    None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, qlanth`AllowedJ, {qlanth`AllowedJ[
         Pattern[qlanth`Private`n, 
          Blank[]]] :> Table[qlanth`Private`J, {qlanth`Private`J, 
          qlanth`minJ[qlanth`Private`n], 
          qlanth`maxJ[qlanth`Private`n]}]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> "qlanth`AllowedJ"|>, 
   False]]], "Output",
 CellChangeTimes->{3.866560904507762*^9, 3.86792581784223*^9, 
  3.868020811093383*^9},
 CellLabel->
  "Out[196]=",ExpressionUUID->"c8337507-409c-4ef3-9c12-681fc3387a6c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AllowedJ", "[", "3", "]"}]], "Input",
 CellChangeTimes->{{3.8679258337981033`*^9, 3.867925841976095*^9}},
 CellLabel->
  "In[200]:=",ExpressionUUID->"4b8a2625-3168-40ef-a584-1c3f61a88050"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", "2"], ",", 
   FractionBox["3", "2"], ",", 
   FractionBox["5", "2"], ",", 
   FractionBox["7", "2"], ",", 
   FractionBox["9", "2"], ",", 
   FractionBox["11", "2"], ",", 
   FractionBox["13", "2"], ",", 
   FractionBox["15", "2"], ",", 
   FractionBox["17", "2"]}], "}"}]], "Output",
 CellChangeTimes->{{3.867925835844553*^9, 3.867925842183877*^9}, 
   3.8680208096504*^9, 3.868022697846346*^9},
 CellLabel->
  "Out[200]=",ExpressionUUID->"6762a68a-6d28-4fa4-80f2-e28ae92b3cf2"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Loading Parameters and an Example Run with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["Yb", 
     RowBox[{"3", "+"}]], ":", 
    RowBox[{
     SubscriptBox["Y", "2"], 
     SubscriptBox["SiO", "4"]}]}], TraditionalForm]],ExpressionUUID->
  "caf27d35-2de6-4add-8ce1-edd8cb2cdc2d"],
 "."
}], "Section",
 CellChangeTimes->{{3.868022594564293*^9, 3.868022602291854*^9}, {
  3.868022653998711*^9, 3.868022671667303*^9}, {3.86802287821996*^9, 
  3.868022888115885*^9}, {3.868027835051178*^9, 3.868027835313101*^9}, {
  3.8680278730534267`*^9, 3.8680278772577887`*^9}, {3.868285208354372*^9, 
  3.868285209672017*^9}},ExpressionUUID->"b969dfbf-4279-4371-8e7d-\
a989bebf0460"],

Cell[TextData[{
 "In order to work ",
 StyleBox["qlanth",
  FontWeight->"Bold"],
 " needs to load experimental parameters that describe the ion of interest in \
a given crystal host. "
}], "Text",
 CellChangeTimes->{{3.8680226055958633`*^9, 3.868022651983697*^9}, {
  3.86802790001466*^9, 
  3.8680279027508783`*^9}},ExpressionUUID->"5ae251a2-1886-4b32-9a7c-\
6438f9b8c207"],

Cell[BoxData[
 RowBox[{"Get", "[", "\"\<qlanth.m\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.868279928432969*^9, 3.868279931631598*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"701435d9-d5b4-47a5-adba-c112a15b2592"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "LoadGuillotParameters"}]], "Input",
 CellChangeTimes->{{3.8680293352381268`*^9, 3.8680293577616873`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"11f4d3f0-db74-48c7-8546-eb024f2a37d5"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"LoadGuillotParameters[Ln] loads into the current \
session the parameters for \\!\\(\\*SuperscriptBox[\\(Ln\\), \
\\(\\(3\\)\\(+\\)\\)]\\). The function returns the following list of \
quantities : {nf, E0, E1 , E2, E3 , \[Zeta], \[Alpha], \[Beta], \[Gamma], T2, \
T3, T4, T6, T7, T8, M0, M2, M4, P0, P2, P4, P6, B02, B06}\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"LoadGuillotParameters", "[", "Ln_", "]"}], ":=", 
                    
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Ln", "\[Equal]", "\"Ce\""}], "||", 
                    RowBox[{"Ln", "\[Equal]", "1"}]}], ",", 
                    RowBox[{
                    RowBox[{"nf", "=", "1"}], ";", 
                    RowBox[{"Fsup2", "=", "0"}], ";", 
                    RowBox[{"Fsup4", "=", "0"}], ";", 
                    RowBox[{"Fsup6", "=", "0"}], ";", 
                    RowBox[{"\[Zeta]", "=", "647.3`"}], ";", 
                    RowBox[{"\[Alpha]", "=", "0"}], ";", 
                    RowBox[{"\[Beta]", "=", "0"}], ";", 
                    RowBox[{"\[Gamma]", "=", "0"}], ";", 
                    RowBox[{"T2", "=", "0"}], ";", 
                    RowBox[{"T3", "=", "0"}], ";", 
                    RowBox[{"T4", "=", "0"}], ";", 
                    RowBox[{"T6", "=", "0"}], ";", 
                    RowBox[{"T7", "=", "0"}], ";", 
                    RowBox[{"T8", "=", "0"}], ";", 
                    RowBox[{"M0", "=", "0"}], ";", 
                    RowBox[{"P2", "=", "0"}], ";", 
                    RowBox[{"eOrbitalRad", "=", 
                    FractionBox["bohrRadius", "4.8`"]}], ";", 
                    RowBox[{"Get", "[", 
                    RowBox[{"FileNameJoin", "[", 
                    RowBox[{"{", 
                    
                    RowBox[{"moduleDir", ",", "\"params\"", ",", "Ln", ",", 
                    "\"CeLaF3_CFParameters.txt\""}], "}"}], "]"}], "]"}], 
                    ";"}], ",", 
                    RowBox[{
                    RowBox[{"Ln", "\[Equal]", "\"Pr\""}], "||", 
                    RowBox[{"Ln", "\[Equal]", "2"}]}], ",", 
                    RowBox[{
                    RowBox[{"nf", "=", "2"}], ";", 
                    RowBox[{"Fsup2", "=", "68878"}], ";", 
                    RowBox[{"Fsup4", "=", "50347"}], ";", 
                    RowBox[{"Fsup6", "=", "32901"}], ";", 
                    RowBox[{"\[Zeta]", "=", "751.7`"}], ";", 
                    RowBox[{"\[Alpha]", "=", "16.23`"}], ";", 
                    RowBox[{"\[Beta]", "=", 
                    RowBox[{"-", "566.6`"}]}], ";", 
                    RowBox[{"\[Gamma]", "=", "1371"}], ";", 
                    RowBox[{"T2", "=", "0"}], ";", 
                    RowBox[{"T3", "=", "0"}], ";", 
                    RowBox[{"T4", "=", "0"}], ";", 
                    RowBox[{"T6", "=", "0"}], ";", 
                    RowBox[{"T7", "=", "0"}], ";", 
                    RowBox[{"T8", "=", "0"}], ";", 
                    RowBox[{"M0", "=", "2.08`"}], ";", 
                    RowBox[{"P2", "=", 
                    RowBox[{"-", "88.6`"}]}], ";", 
                    RowBox[{"eOrbitalRad", "=", 
                    FractionBox["bohrRadius", "5.5`"]}], ";"}], ",", 
                    RowBox[{
                    RowBox[{"Ln", "\[Equal]", "\"Nd\""}], "||", 
                    RowBox[{"Ln", "\[Equal]", "3"}]}], ",", 
                    RowBox[{
                    RowBox[{"nf", "=", "3"}], ";", 
                    RowBox[{"Fsup2", "=", "73018"}], ";", 
                    RowBox[{"Fsup4", "=", "52789"}], ";", 
                    RowBox[{"Fsup6", "=", "35757"}], ";", 
                    RowBox[{"\[Zeta]", "=", "885.3`"}], ";", 
                    RowBox[{"\[Alpha]", "=", "21.34`"}], ";", 
                    RowBox[{"\[Beta]", "=", 
                    RowBox[{"-", "593.`"}]}], ";", 
                    RowBox[{"\[Gamma]", "=", "1445"}], ";", 
                    RowBox[{"T2", "=", "298"}], ";", 
                    RowBox[{"T3", "=", "35"}], ";", 
                    RowBox[{"T4", "=", "59"}], ";", 
                    RowBox[{"T6", "=", 
                    RowBox[{"-", "285"}]}], ";", 
                    RowBox[{"T7", "=", "332"}], ";", 
                    RowBox[{"T8", "=", "305"}], ";", 
                    RowBox[{"M0", "=", "2.11`"}], ";", 
                    RowBox[{"P2", "=", "192"}], ";", 
                    RowBox[{"eOrbitalRad", "=", 
                    FractionBox["bohrRadius", "6.2`"]}], ";"}], ",", 
                    RowBox[{
                    RowBox[{"Ln", "\[Equal]", "\"Pm\""}], "||", 
                    RowBox[{"Ln", "\[Equal]", "4"}]}], ",", 
                    RowBox[{
                    RowBox[{"nf", "=", "4"}], ";", 
                    RowBox[{"Fsup2", "=", "76400"}], ";", 
                    RowBox[{"Fsup4", "=", "54900"}], ";", 
                    RowBox[{"Fsup6", "=", "37700"}], ";", 
                    RowBox[{"\[Zeta]", "=", "1025"}], ";", 
                    RowBox[{"\[Alpha]", "=", "20.5`"}], ";", 
                    RowBox[{"\[Beta]", "=", 
                    RowBox[{"-", "560"}]}], ";", 
                    RowBox[{"\[Gamma]", "=", "1475"}], ";", 
                    RowBox[{"T2", "=", "300"}], ";", 
                    RowBox[{"T3", "=", "35"}], ";", 
                    RowBox[{"T4", "=", "58"}], ";", 
                    RowBox[{"T6", "=", 
                    RowBox[{"-", "310"}]}], ";", 
                    RowBox[{"T7", "=", "350"}], ";", 
                    RowBox[{"T8", "=", "320"}], ";", 
                    RowBox[{"M0", "=", "2.4`"}], ";", 
                    RowBox[{"P2", "=", "275"}], ";", 
                    RowBox[{"eOrbitalRad", "=", 
                    FractionBox["bohrRadius", "6.9`"]}], ";"}], ",", 
                    RowBox[{
                    RowBox[{"Ln", "\[Equal]", "\"Sm\""}], "||", 
                    RowBox[{"Ln", "\[Equal]", "5"}]}], ",", 
                    RowBox[{
                    RowBox[{"nf", "=", "5"}], ";", 
                    RowBox[{"Fsup2", "=", "79805"}], ";", 
                    RowBox[{"Fsup4", "=", "57175"}], ";", 
                    RowBox[{"Fsup6", "=", "40250"}], ";", 
                    RowBox[{"\[Zeta]", "=", "1176"}], ";", 
                    RowBox[{"\[Alpha]", "=", "20.16`"}], ";", 
                    RowBox[{"\[Beta]", "=", 
                    RowBox[{"-", "566.9`"}]}], ";", 
                    RowBox[{"\[Gamma]", "=", "1500"}], ";", 
                    RowBox[{"T2", "=", "300"}], ";", 
                    RowBox[{"T3", "=", "36"}], ";", 
                    RowBox[{"T4", "=", "56"}], ";", 
                    RowBox[{"T6", "=", 
                    RowBox[{"-", "347"}]}], ";", 
                    RowBox[{"T7", "=", "373"}], ";", 
                    RowBox[{"T8", "=", "348"}], ";", 
                    RowBox[{"M0", "=", "2.6`"}], ";", 
                    RowBox[{"P2", "=", "357"}], ";", 
                    RowBox[{"eOrbitalRad", "=", 
                    FractionBox["bohrRadius", "7.5`"]}], ";"}], ",", 
                    RowBox[{
                    RowBox[{"Ln", "\[Equal]", "\"Eu\""}], "||", 
                    RowBox[{"Ln", "\[Equal]", "6"}]}], ",", 
                    RowBox[{
                    RowBox[{"nf", "=", "6"}], ";", 
                    RowBox[{"Fsup2", "=", "83125"}], ";", 
                    RowBox[{"Fsup4", "=", "59268"}], ";", 
                    RowBox[{"Fsup6", "=", "42560"}], ";", 
                    RowBox[{"\[Zeta]", "=", "1338"}], ";", 
                    RowBox[{"\[Alpha]", "=", "20.16`"}], ";", 
                    RowBox[{"\[Beta]", "=", 
                    RowBox[{"-", "566.9`"}]}], ";", 
                    RowBox[{"\[Gamma]", "=", "1500"}], ";", 
                    RowBox[{"T2", "=", "300"}], ";", 
                    RowBox[{"T3", "=", "40"}], ";", 
                    RowBox[{"T4", "=", "60"}], ";", 
                    RowBox[{"T6", "=", 
                    RowBox[{"-", "300"}]}], ";", 
                    RowBox[{"T7", "=", "370"}], ";", 
                    RowBox[{"T8", "=", "320"}], ";", 
                    RowBox[{"M0", "=", "2.1`"}], ";", 
                    RowBox[{"P2", "=", "360"}], ";", 
                    RowBox[{"eOrbitalRad", "=", 
                    FractionBox["bohrRadius", "8.4`"]}], ";"}], ",", 
                    RowBox[{
                    RowBox[{"Ln", "\[Equal]", "\"Gd\""}], "||", 
                    RowBox[{"Ln", "\[Equal]", "7"}]}], ",", 
                    RowBox[{
                    RowBox[{"nf", "=", "7"}], ";", 
                    RowBox[{"Fsup2", "=", "85669"}], ";", 
                    RowBox[{"Fsup4", "=", "60825"}], ";", 
                    RowBox[{"Fsup6", "=", "44776"}], ";", 
                    RowBox[{"\[Zeta]", "=", "1508"}], ";", 
                    RowBox[{"\[Alpha]", "=", "18.92`"}], ";", 
                    RowBox[{"\[Beta]", "=", 
                    RowBox[{"-", "600"}]}], ";", 
                    RowBox[{"\[Gamma]", "=", "1575"}], ";", 
                    RowBox[{"T2", "=", "300"}], ";", 
                    RowBox[{"T3", "=", "42"}], ";", 
                    RowBox[{"T4", "=", "62"}], ";", 
                    RowBox[{"T6", "=", 
                    RowBox[{"-", "295"}]}], ";", 
                    RowBox[{"T7", "=", "350"}], ";", 
                    RowBox[{"T8", "=", "310"}], ";", 
                    RowBox[{"M0", "=", "3.22`"}], ";", 
                    RowBox[{"P2", "=", "676"}], ";", 
                    RowBox[{"eOrbitalRad", "=", 
                    FractionBox["bohrRadius", "9.2`"]}], ";"}], ",", 
                    RowBox[{
                    RowBox[{"Ln", "\[Equal]", "\"Tb\""}], "||", 
                    RowBox[{"Ln", "\[Equal]", "8"}]}], ",", 
                    RowBox[{
                    RowBox[{"nf", "=", "8"}], ";", 
                    RowBox[{"Fsup2", "=", "88995"}], ";", 
                    RowBox[{"Fsup4", "=", "62919"}], ";", 
                    RowBox[{"Fsup6", "=", "47252"}], ";", 
                    RowBox[{"\[Zeta]", "=", "1707"}], ";", 
                    RowBox[{"\[Alpha]", "=", "18.4`"}], ";", 
                    RowBox[{"\[Beta]", "=", 
                    RowBox[{"-", "590.9`"}]}], ";", 
                    RowBox[{"\[Gamma]", "=", "1650"}], ";", 
                    RowBox[{"T2", "=", "320"}], ";", 
                    RowBox[{"T3", "=", "40"}], ";", 
                    RowBox[{"T4", "=", "50"}], ";", 
                    RowBox[{"T6", "=", 
                    RowBox[{"-", "395"}]}], ";", 
                    RowBox[{"T7", "=", "303"}], ";", 
                    RowBox[{"T8", "=", "317"}], ";", 
                    RowBox[{"M0", "=", "2.39`"}], ";", 
                    RowBox[{"P2", "=", "373"}], ";", 
                    RowBox[{"eOrbitalRad", "=", 
                    FractionBox["bohrRadius", "10.`"]}], ";"}], ",", 
                    RowBox[{
                    RowBox[{"Ln", "\[Equal]", "\"Dy\""}], "||", 
                    RowBox[{"Ln", "\[Equal]", "9"}]}], ",", 
                    RowBox[{
                    RowBox[{"nf", "=", "9"}], ";", 
                    RowBox[{"Fsup2", "=", "91903"}], ";", 
                    RowBox[{"Fsup4", "=", "64372"}], ";", 
                    RowBox[{"Fsup6", "=", "49386"}], ";", 
                    RowBox[{"\[Zeta]", "=", "1913"}], ";", 
                    RowBox[{"\[Alpha]", "=", "18.02`"}], ";", 
                    RowBox[{"\[Beta]", "=", 
                    RowBox[{"-", "633.4`"}]}], ";", 
                    RowBox[{"\[Gamma]", "=", "1790"}], ";", 
                    RowBox[{"T2", "=", "329"}], ";", 
                    RowBox[{"T3", "=", "36"}], ";", 
                    RowBox[{"T4", "=", "127"}], ";", 
                    RowBox[{"T6", "=", 
                    RowBox[{"-", "314"}]}], ";", 
                    RowBox[{"T7", "=", "404"}], ";", 
                    RowBox[{"T8", "=", "315"}], ";", 
                    RowBox[{"M0", "=", "3.39`"}], ";", 
                    RowBox[{"P2", "=", "719"}], ";", 
                    RowBox[{"eOrbitalRad", "=", 
                    FractionBox["bohrRadius", "10.9`"]}], ";", 
                    RowBox[{"Get", "[", 
                    RowBox[{"FileNameJoin", "[", 
                    RowBox[{"{", 
                    
                    RowBox[{"moduleDir", ",", "\"params\"", ",", 
                    "\"FreeIon_CFParameters.txt\""}], "}"}], "]"}], "]"}], 
                    ";"}], ",", 
                    RowBox[{
                    RowBox[{"Ln", "\[Equal]", "\"Ho\""}], "||", 
                    RowBox[{"Ln", "\[Equal]", "10"}]}], ",", 
                    RowBox[{
                    RowBox[{"nf", "=", "10"}], ";", 
                    RowBox[{"Fsup2", "=", "94564"}], ";", 
                    RowBox[{"Fsup4", "=", "66397"}], ";", 
                    RowBox[{"Fsup6", "=", "52022"}], ";", 
                    RowBox[{"\[Zeta]", "=", "2145"}], ";", 
                    RowBox[{"\[Alpha]", "=", "17.15`"}], ";", 
                    RowBox[{"\[Beta]", "=", 
                    RowBox[{"-", "607.9`"}]}], ";", 
                    RowBox[{"\[Gamma]", "=", "1800"}], ";", 
                    RowBox[{"T2", "=", "400"}], ";", 
                    RowBox[{"T3", "=", "37"}], ";", 
                    RowBox[{"T4", "=", "107"}], ";", 
                    RowBox[{"T6", "=", 
                    RowBox[{"-", "264"}]}], ";", 
                    RowBox[{"T7", "=", "316"}], ";", 
                    RowBox[{"T8", "=", "336"}], ";", 
                    RowBox[{"M0", "=", "2.54`"}], ";", 
                    RowBox[{"P2", "=", "605"}], ";", 
                    RowBox[{"eOrbitalRad", "=", 
                    FractionBox["bohrRadius", "11.8`"]}], ";", 
                    RowBox[{"Get", "[", 
                    RowBox[{"FileNameJoin", "[", 
                    RowBox[{"{", 
                    
                    RowBox[{"moduleDir", ",", "\"params\"", ",", 
                    "\"FreeIon_CFParameters.txt\""}], "}"}], "]"}], "]"}], 
                    ";"}], ",", 
                    RowBox[{
                    RowBox[{"Ln", "\[Equal]", "\"Er\""}], "||", 
                    RowBox[{"Ln", "\[Equal]", "11"}]}], ",", 
                    RowBox[{
                    RowBox[{"nf", "=", "11"}], ";", 
                    RowBox[{"Fsup2", "=", "97483"}], ";", 
                    RowBox[{"Fsup4", "=", "67904"}], ";", 
                    RowBox[{"Fsup6", "=", "54010"}], ";", 
                    RowBox[{"\[Zeta]", "=", "2376"}], ";", 
                    RowBox[{"\[Alpha]", "=", "17.79`"}], ";", 
                    RowBox[{"\[Beta]", "=", 
                    RowBox[{"-", "582.1`"}]}], ";", 
                    RowBox[{"\[Gamma]", "=", "1800"}], ";", 
                    RowBox[{"T2", "=", "400"}], ";", 
                    RowBox[{"T3", "=", "43"}], ";", 
                    RowBox[{"T4", "=", "73"}], ";", 
                    RowBox[{"T6", "=", 
                    RowBox[{"-", "271"}]}], ";", 
                    RowBox[{"T7", "=", "308"}], ";", 
                    RowBox[{"T8", "=", "299"}], ";", 
                    RowBox[{"M0", "=", "3.86`"}], ";", 
                    RowBox[{"P2", "=", "594"}], ";", 
                    RowBox[{"eOrbitalRad", "=", 
                    FractionBox["bohrRadius", "12.7`"]}], ";", 
                    RowBox[{"Get", "[", 
                    RowBox[{"FileNameJoin", "[", 
                    RowBox[{"{", 
                    
                    RowBox[{"moduleDir", ",", "\"params\"", ",", "Ln", ",", 
                    "\"ErYVO4_Parameters.txt\""}], "}"}], "]"}], "]"}], ";"}],
                     ",", 
                    RowBox[{
                    RowBox[{"Ln", "\[Equal]", "\"Tm\""}], "||", 
                    RowBox[{"Ln", "\[Equal]", "12"}]}], ",", 
                    RowBox[{
                    RowBox[{"nf", "=", "12"}], ";", 
                    RowBox[{"E0", "=", "17443"}], ";", 
                    RowBox[{"E1", "=", "7018"}], ";", 
                    RowBox[{"E2", "=", "33.38`"}], ";", 
                    RowBox[{"E3", "=", "671.5`"}], ";", 
                    RowBox[{"\[Zeta]", "=", "2619.7`"}], ";", 
                    RowBox[{"\[Alpha]", "=", "17.06`"}], ";", 
                    RowBox[{"\[Beta]", "=", 
                    RowBox[{"-", "658"}]}], ";", 
                    RowBox[{"\[Gamma]", "=", "0"}], ";", 
                    RowBox[{"T2", "=", "0"}], ";", 
                    RowBox[{"T3", "=", "0"}], ";", 
                    RowBox[{"T4", "=", "0"}], ";", 
                    RowBox[{"T6", "=", "0"}], ";", 
                    RowBox[{"T7", "=", "0"}], ";", 
                    RowBox[{"T8", "=", "0"}], ";", 
                    RowBox[{"M0", "=", "0"}], ";", 
                    RowBox[{"P2", "=", "0"}], ";", 
                    RowBox[{"eOrbitalRad", "=", 
                    FractionBox["bohrRadius", "13.6`"]}], ";", 
                    RowBox[{"Get", "[", 
                    RowBox[{"FileNameJoin", "[", 
                    RowBox[{"{", 
                    
                    RowBox[{"moduleDir", ",", "\"params\"", ",", "Ln", ",", 
                    "\"TmYAG_GuillotNoelParameters.txt\""}], "}"}], "]"}], 
                    "]"}], ";"}], ",", 
                    RowBox[{
                    RowBox[{"Ln", "\[Equal]", "\"Yb\""}], "||", 
                    RowBox[{"Ln", "\[Equal]", "13"}]}], ",", 
                    RowBox[{
                    RowBox[{"nf", "=", "13"}], ";", 
                    RowBox[{"Fsup2", "=", "0"}], ";", 
                    RowBox[{"Fsup4", "=", "0"}], ";", 
                    RowBox[{"Fsup6", "=", "0"}], ";", 
                    RowBox[{"luFnames", "=", 
                    RowBox[{"FileNames", "[", 
                    RowBox[{"All", ",", 
                    RowBox[{"FileNameJoin", "[", 
                    RowBox[{"{", 
                    RowBox[{"moduleDir", ",", "\"params\"", ",", "\"Yb\""}], 
                    "}"}], "]"}]}], "]"}]}], ";", 
                    RowBox[{"shortNames", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"FileNameSplit", "[", "#1", "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "&"}], 
                    ")"}], "/@", "luFnames"}]}], ";", 
                    RowBox[{"luFname", "=", 
                    RowBox[{"DialogInput", "[", 
                    RowBox[{"Prepend", "[", 
                    RowBox[{
                    RowBox[{"MapThread", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Button", "[", 
                    RowBox[{"#1", ",", 
                    RowBox[{"DialogReturn", "[", "#2", "]"}]}], "]"}], "&"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"shortNames", ",", "luFnames"}], "}"}]}], "]"}], 
                    ",", 
                    RowBox[{"TextCell", "[", 
                    RowBox[{"Style", "[", 
                    
                    RowBox[{
                    "\"These are the files available for Yb, choose one:\"", 
                    ",", "12"}], "]"}], "]"}]}], "]"}], "]"}]}], ";", 
                    RowBox[{"Get", "[", "luFname", "]"}], ";"}], ",", "True", 
                    ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"LoadGuillotParameters", "::", "argerr"}], 
                    "MessageName"], "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}], ";"}]}], "]"}], ";", 
                    RowBox[{"Fsup0", "=", "0"}], ";", 
                    RowBox[{"T11", "=", "0"}], ";", 
                    RowBox[{"T12", "=", "0"}], ";", 
                    RowBox[{"T14", "=", "0"}], ";", 
                    RowBox[{"T15", "=", "0"}], ";", 
                    RowBox[{"T16", "=", "0"}], ";", 
                    RowBox[{"T17", "=", "0"}], ";", 
                    RowBox[{"T18", "=", "0"}], ";", 
                    RowBox[{"T19", "=", "0"}], ";", 
                    RowBox[{"M2", "=", 
                    RowBox[{"0.56`", " ", "M0"}]}], ";", 
                    RowBox[{"M4", "=", 
                    RowBox[{"0.31`", " ", "M0"}]}], ";", 
                    RowBox[{"P0", "=", "0"}], ";", 
                    RowBox[{"P4", "=", 
                    RowBox[{"0.5`", " ", "P2"}]}], ";", 
                    RowBox[{"P6", "=", 
                    RowBox[{"0.1`", " ", "P2"}]}], ";", 
                    RowBox[{"gs", "=", "2.002319304386`"}], ";", 
                    RowBox[{"gI", "=", "0.987`"}], ";", 
                    RowBox[{"eV2Icm", "=", 
                    FractionBox["1", "8065.5439`"]}], ";", 
                    RowBox[{"\[Beta]BohrMag", "=", 
                    FractionBox["5.7883818012`", 
                    RowBox[{
                    SuperscriptBox["10", "5"], " ", "eV2Icm"}]]}], ";", 
                    RowBox[{"\[Beta]n", "=", 
                    FractionBox["3.152451255`", 
                    RowBox[{
                    SuperscriptBox["10", "8"], " ", "eV2Icm"}]]}], ";", 
                    RowBox[{"{", 
                    
                    RowBox[{"nf", ",", "E0", ",", "E1", ",", "E2", ",", "E3", 
                    ",", "\[Zeta]", ",", "\[Alpha]", ",", "\[Beta]", ",", 
                    "\[Gamma]", ",", "T2", ",", "T3", ",", "T4", ",", "T6", 
                    ",", "T7", ",", "T8", ",", "M0", ",", "M2", ",", "M4", 
                    ",", "P0", ",", "P2", ",", "P4", ",", "P6", ",", "B02", 
                    ",", "B06"}], "}"}]}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"qlanth`LoadGuillotParameters\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"LoadGuillotParameters[Ln] loads into the current \
session the parameters for \\!\\(\\*SuperscriptBox[\\(Ln\\), \
\\(\\(3\\)\\(+\\)\\)]\\). The function returns the following list of \
quantities : {nf, E0, E1 , E2, E3 , \[Zeta], \[Alpha], \[Beta], \[Gamma], T2, \
T3, T4, T6, T7, T8, M0, M2, M4, P0, P2, P4, P6, B02, B06}\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "LoadGuillotParameters[Ln] loads into the current session the parameters \
for \!\(\*SuperscriptBox[\(Ln\), \(\(3\)\(+\)\)]\). The function returns the \
following list of quantities : {nf, E0, E1 , E2, E3 , \[Zeta], \[Alpha], \
\[Beta], \[Gamma], T2, T3, T4, T6, T7, T8, M0, M2, M4, P0, P2, P4, P6, B02, \
B06}", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, qlanth`LoadGuillotParameters, {qlanth`LoadGuillotParameters[
         Pattern[qlanth`Ln, 
          Blank[]]] :> Module[{}, Which[
           Or[qlanth`Ln == "Ce", qlanth`Ln == 1], qlanth`nf = 1; 
           qlanth`Fsup2 = 0; qlanth`Fsup4 = 0; qlanth`Fsup6 = 0; 
           qlanth`\[Zeta] = 647.3; qlanth`\[Alpha] = 0; qlanth`\[Beta] = 0; 
           qlanth`\[Gamma] = 0; qlanth`T2 = 0; qlanth`T3 = 0; qlanth`T4 = 0; 
           qlanth`T6 = 0; qlanth`T7 = 0; qlanth`T8 = 0; qlanth`M0 = 0; 
           qlanth`P2 = 0; qlanth`eOrbitalRad = (1/4.8) qlanth`bohrRadius; 
           Get[
             
             FileNameJoin[{
              qlanth`moduleDir, "params", qlanth`Ln, 
               "CeLaF3_CFParameters.txt"}]]; Null, 
           Or[qlanth`Ln == "Pr", qlanth`Ln == 2], qlanth`nf = 2; 
           qlanth`Fsup2 = 68878; qlanth`Fsup4 = 50347; qlanth`Fsup6 = 32901; 
           qlanth`\[Zeta] = 751.7; qlanth`\[Alpha] = 16.23; 
           qlanth`\[Beta] = -566.6; qlanth`\[Gamma] = 1371; qlanth`T2 = 0; 
           qlanth`T3 = 0; qlanth`T4 = 0; qlanth`T6 = 0; qlanth`T7 = 0; 
           qlanth`T8 = 0; qlanth`M0 = 2.08; qlanth`P2 = -88.6; 
           qlanth`eOrbitalRad = (1/5.5) qlanth`bohrRadius; Null, 
           Or[qlanth`Ln == "Nd", qlanth`Ln == 3], qlanth`nf = 3; 
           qlanth`Fsup2 = 73018; qlanth`Fsup4 = 52789; qlanth`Fsup6 = 35757; 
           qlanth`\[Zeta] = 885.3; qlanth`\[Alpha] = 21.34; 
           qlanth`\[Beta] = -593.; qlanth`\[Gamma] = 1445; qlanth`T2 = 298; 
           qlanth`T3 = 35; qlanth`T4 = 59; qlanth`T6 = -285; qlanth`T7 = 332; 
           qlanth`T8 = 305; qlanth`M0 = 2.11; qlanth`P2 = 192; 
           qlanth`eOrbitalRad = (1/6.2) qlanth`bohrRadius; Null, 
           Or[qlanth`Ln == "Pm", qlanth`Ln == 4], qlanth`nf = 4; 
           qlanth`Fsup2 = 76400; qlanth`Fsup4 = 54900; qlanth`Fsup6 = 37700; 
           qlanth`\[Zeta] = 1025; qlanth`\[Alpha] = 20.5; 
           qlanth`\[Beta] = -560; qlanth`\[Gamma] = 1475; qlanth`T2 = 300; 
           qlanth`T3 = 35; qlanth`T4 = 58; qlanth`T6 = -310; qlanth`T7 = 350; 
           qlanth`T8 = 320; qlanth`M0 = 2.4; qlanth`P2 = 275; 
           qlanth`eOrbitalRad = (1/6.9) qlanth`bohrRadius; Null, 
           Or[qlanth`Ln == "Sm", qlanth`Ln == 5], qlanth`nf = 5; 
           qlanth`Fsup2 = 79805; qlanth`Fsup4 = 57175; qlanth`Fsup6 = 40250; 
           qlanth`\[Zeta] = 1176; qlanth`\[Alpha] = 20.16; 
           qlanth`\[Beta] = -566.9; qlanth`\[Gamma] = 1500; qlanth`T2 = 300; 
           qlanth`T3 = 36; qlanth`T4 = 56; qlanth`T6 = -347; qlanth`T7 = 373; 
           qlanth`T8 = 348; qlanth`M0 = 2.6; qlanth`P2 = 357; 
           qlanth`eOrbitalRad = (1/7.5) qlanth`bohrRadius; Null, 
           Or[qlanth`Ln == "Eu", qlanth`Ln == 6], qlanth`nf = 6; 
           qlanth`Fsup2 = 83125; qlanth`Fsup4 = 59268; qlanth`Fsup6 = 42560; 
           qlanth`\[Zeta] = 1338; qlanth`\[Alpha] = 20.16; 
           qlanth`\[Beta] = -566.9; qlanth`\[Gamma] = 1500; qlanth`T2 = 300; 
           qlanth`T3 = 40; qlanth`T4 = 60; qlanth`T6 = -300; qlanth`T7 = 370; 
           qlanth`T8 = 320; qlanth`M0 = 2.1; qlanth`P2 = 360; 
           qlanth`eOrbitalRad = (1/8.4) qlanth`bohrRadius; Null, 
           Or[qlanth`Ln == "Gd", qlanth`Ln == 7], qlanth`nf = 7; 
           qlanth`Fsup2 = 85669; qlanth`Fsup4 = 60825; qlanth`Fsup6 = 44776; 
           qlanth`\[Zeta] = 1508; qlanth`\[Alpha] = 18.92; 
           qlanth`\[Beta] = -600; qlanth`\[Gamma] = 1575; qlanth`T2 = 300; 
           qlanth`T3 = 42; qlanth`T4 = 62; qlanth`T6 = -295; qlanth`T7 = 350; 
           qlanth`T8 = 310; qlanth`M0 = 3.22; qlanth`P2 = 676; 
           qlanth`eOrbitalRad = (1/9.2) qlanth`bohrRadius; Null, 
           Or[qlanth`Ln == "Tb", qlanth`Ln == 8], qlanth`nf = 8; 
           qlanth`Fsup2 = 88995; qlanth`Fsup4 = 62919; qlanth`Fsup6 = 47252; 
           qlanth`\[Zeta] = 1707; qlanth`\[Alpha] = 18.4; 
           qlanth`\[Beta] = -590.9; qlanth`\[Gamma] = 1650; qlanth`T2 = 320; 
           qlanth`T3 = 40; qlanth`T4 = 50; qlanth`T6 = -395; qlanth`T7 = 303; 
           qlanth`T8 = 317; qlanth`M0 = 2.39; qlanth`P2 = 373; 
           qlanth`eOrbitalRad = (1/10.) qlanth`bohrRadius; Null, 
           Or[qlanth`Ln == "Dy", qlanth`Ln == 9], qlanth`nf = 9; 
           qlanth`Fsup2 = 91903; qlanth`Fsup4 = 64372; qlanth`Fsup6 = 49386; 
           qlanth`\[Zeta] = 1913; qlanth`\[Alpha] = 18.02; 
           qlanth`\[Beta] = -633.4; qlanth`\[Gamma] = 1790; qlanth`T2 = 329; 
           qlanth`T3 = 36; qlanth`T4 = 127; qlanth`T6 = -314; qlanth`T7 = 404; 
           qlanth`T8 = 315; qlanth`M0 = 3.39; qlanth`P2 = 719; 
           qlanth`eOrbitalRad = (1/10.9) qlanth`bohrRadius; Get[
             
             FileNameJoin[{
              qlanth`moduleDir, "params", "FreeIon_CFParameters.txt"}]]; Null, 
           Or[qlanth`Ln == "Ho", qlanth`Ln == 10], qlanth`nf = 10; 
           qlanth`Fsup2 = 94564; qlanth`Fsup4 = 66397; qlanth`Fsup6 = 52022; 
           qlanth`\[Zeta] = 2145; qlanth`\[Alpha] = 17.15; 
           qlanth`\[Beta] = -607.9; qlanth`\[Gamma] = 1800; qlanth`T2 = 400; 
           qlanth`T3 = 37; qlanth`T4 = 107; qlanth`T6 = -264; qlanth`T7 = 316; 
           qlanth`T8 = 336; qlanth`M0 = 2.54; qlanth`P2 = 605; 
           qlanth`eOrbitalRad = (1/11.8) qlanth`bohrRadius; Get[
             
             FileNameJoin[{
              qlanth`moduleDir, "params", "FreeIon_CFParameters.txt"}]]; Null, 
           Or[qlanth`Ln == "Er", qlanth`Ln == 11], qlanth`nf = 11; 
           qlanth`Fsup2 = 97483; qlanth`Fsup4 = 67904; qlanth`Fsup6 = 54010; 
           qlanth`\[Zeta] = 2376; qlanth`\[Alpha] = 17.79; 
           qlanth`\[Beta] = -582.1; qlanth`\[Gamma] = 1800; qlanth`T2 = 400; 
           qlanth`T3 = 43; qlanth`T4 = 73; qlanth`T6 = -271; qlanth`T7 = 308; 
           qlanth`T8 = 299; qlanth`M0 = 3.86; qlanth`P2 = 594; 
           qlanth`eOrbitalRad = (1/12.7) qlanth`bohrRadius; Get[
             
             FileNameJoin[{
              qlanth`moduleDir, "params", qlanth`Ln, 
               "ErYVO4_Parameters.txt"}]]; Null, 
           Or[qlanth`Ln == "Tm", qlanth`Ln == 12], qlanth`nf = 12; 
           qlanth`E0 = 17443; qlanth`E1 = 7018; qlanth`E2 = 33.38; 
           qlanth`E3 = 671.5; qlanth`\[Zeta] = 2619.7; 
           qlanth`\[Alpha] = 17.06; qlanth`\[Beta] = -658; 
           qlanth`\[Gamma] = 0; qlanth`T2 = 0; qlanth`T3 = 0; qlanth`T4 = 0; 
           qlanth`T6 = 0; qlanth`T7 = 0; qlanth`T8 = 0; qlanth`M0 = 0; 
           qlanth`P2 = 0; qlanth`eOrbitalRad = (1/13.6) qlanth`bohrRadius; Get[
             
             FileNameJoin[{
              qlanth`moduleDir, "params", qlanth`Ln, 
               "TmYAG_GuillotNoelParameters.txt"}]]; Null, 
           Or[qlanth`Ln == "Yb", qlanth`Ln == 13], qlanth`nf = 13; 
           qlanth`Fsup2 = 0; qlanth`Fsup4 = 0; qlanth`Fsup6 = 0; 
           qlanth`luFnames = FileNames[All, 
              FileNameJoin[{qlanth`moduleDir, "params", "Yb"}]]; 
           qlanth`shortNames = Map[Part[
               FileNameSplit[#], -1]& , qlanth`luFnames]; 
           qlanth`luFname = DialogInput[
              Prepend[
               MapThread[Button[#, 
                 DialogReturn[#2]]& , {qlanth`shortNames, qlanth`luFnames}], 
               TextCell[
                Style[
                "These are the files available for Yb, choose one:", 12]]]]; 
           Get[qlanth`luFname]; Null, True, Message[
             MessageName[qlanth`LoadGuillotParameters, "argerr"]]; Abort[]; 
           Null]; qlanth`Fsup0 = 0; qlanth`T11 = 0; qlanth`T12 = 0; 
         qlanth`T14 = 0; qlanth`T15 = 0; qlanth`T16 = 0; qlanth`T17 = 0; 
         qlanth`T18 = 0; qlanth`T19 = 0; qlanth`M2 = 0.56 qlanth`M0; 
         qlanth`M4 = 0.31 qlanth`M0; qlanth`P0 = 0; qlanth`P4 = 0.5 qlanth`P2; 
         qlanth`P6 = 0.1 qlanth`P2; qlanth`gs = 2.002319304386; 
         qlanth`gI = 0.987; qlanth`eV2Icm = 1/8065.5439; 
         qlanth`\[Beta]BohrMag = 5.7883818012 (10^(-5)/qlanth`eV2Icm); 
         qlanth`\[Beta]n = 3.152451255 (10^(-8)/qlanth`eV2Icm); {
          qlanth`nf, qlanth`E0, qlanth`E1, qlanth`E2, qlanth`E3, 
           qlanth`\[Zeta], qlanth`\[Alpha], qlanth`\[Beta], qlanth`\[Gamma], 
           qlanth`T2, qlanth`T3, qlanth`T4, qlanth`T6, qlanth`T7, qlanth`T8, 
           qlanth`M0, qlanth`M2, qlanth`M4, qlanth`P0, qlanth`P2, qlanth`P4, 
           qlanth`P6, qlanth`B02, qlanth`B06}]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "qlanth`LoadGuillotParameters"|>, False]]], "Output",
 CellChangeTimes->{3.868029358202338*^9, 3.8682804173256207`*^9, 
  3.868283618593696*^9, 3.8682836516156*^9, 3.868286331161772*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"ecdd1ceb-01db-4784-b391-03ed9e494964"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"The", " ", "free"}], "-", 
  RowBox[{"ion", " ", 
   SuperscriptBox["Yb", 
    RowBox[{"3", "+"}]], " ", "has", " ", "a", " ", "ground", " ", "term", 
   " ", 
   SubscriptBox[
    RowBox[{"(", 
     RowBox[{"2", 
      SuperscriptBox["F", "o"]}], ")"}], 
    RowBox[{"J", "=", 
     RowBox[{"7", "/", "2"}]}]], "and", " ", "a", " ", "first", " ", 
   "excited", " ", "term", " ", 
   RowBox[{
    SubscriptBox[
     RowBox[{"(", 
      RowBox[{"2", 
       SuperscriptBox["F", "o"]}], ")"}], 
     RowBox[{"J", "=", 
      RowBox[{"5", "/", "2"}]}]], ".", " ", "These"}], " ", "are", " ", 
   "split", " ", "by", " "}]}]], "Text",
 CellChangeTimes->{{3.868285215128974*^9, 
  3.868285335879683*^9}},ExpressionUUID->"f2c4a3e1-1580-4408-b825-\
e0fe1e204d28"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LoadGuillotParameters", "[", "\"\<Yb\>\"", "]"}]], "Input",
 CellLabel->"In[84]:=",ExpressionUUID->"63c9b9c9-01fe-4553-9751-7414e56c36b2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "13", ",", "0", ",", "0", ",", "0", ",", "0", ",", "2896.6`", ",", "0", ",",
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
    ",", "0", ",", "0.`", ",", "0.`", ",", "0", ",", "0", ",", "0.`", ",", 
   "0.`", ",", "133.7`", ",", "269.7`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.868030137283866*^9, 3.868032250406563*^9, 3.868279630132785*^9, 
   3.868280482908164*^9, 3.86828051305488*^9, 3.868280563058873*^9, 
   3.868280638940126*^9, 3.868280782494565*^9, {3.868283556701469*^9, 
   3.868283559767058*^9}, 3.868283656292611*^9, 3.86828633843886*^9, 
   3.868286480339163*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"962c4492-e040-491a-911f-f812c05404ee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "SolveStates"}]], "Input",
 CellChangeTimes->{{3.8680301394068108`*^9, 3.868030141262137*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"8ff81005-feb9-4bf0-8578-d90386ee4824"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"SolveStates[nf, IiN] solves the energy values and \
states for an atom with n f-electrons with a nucleus of spin IiN. This \
function assumes that all the parameters that determine the Hamiltonian for a \
specific ion in a specific host have already been loaded into the session; \
these can be loaded by using the function LoadGuillotParameters.\\nThis \
function also requires files for pre-computed energy matrix tables that \
provide the symbols EnergyMatrixTable[_, _, _, _, _].\\nTo account for \
configurations f^n with n > 7, particle-hole dualities are enforced for \
\[Zeta] and T_i.\\nThe unit for the returned energies is \
cm^-1.\\n-----------------------\\nReferences:\\n1. Sign inversion for \
\[Zeta]: Wybourne, Spectroscopic Properties of Rare Earths. \\n2. Sign \
inversion for {T2, T3, T4, T6, T7, T8}: Hansen and Judd, Matrix Elements of \
Scalar Three Electron Operators for the Atomic f Shell.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"SolveStates", "[", 
                    RowBox[{"nf_", ",", "IiN_"}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"n", ",", "ii", ",", "jj", ",", "JMvals"}], "}"}],
                     ",", 
                    RowBox[{
                    RowBox[{"n", "=", "nf"}], ";", 
                    RowBox[{"allLoaded", "=", 
                    RowBox[{"And", "@@", 
                    RowBox[{"NumberQ", "/@", 
                    RowBox[{"{", 
                    
                    RowBox[{"\[Zeta]", ",", "T2", ",", "T3", ",", "T4", ",", 
                    "T6", ",", "T7", ",", "T8"}], "}"}]}]}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", "allLoaded"}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"SolveStates", "::", "notNum"}], "MessageName"], 
                    "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}], ";"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"nf", ">", "7"}], ",", 
                    RowBox[{
                    RowBox[{"n", "=", 
                    RowBox[{"14", "-", "nf"}]}], ";", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"\[Zeta]", ",", "T2", ",", "T3", ",", "T4", ",", 
                    "T6", ",", "T7", ",", "T8"}], "}"}], "=", 
                    RowBox[{"-", 
                    RowBox[{"{", 
                    
                    RowBox[{"\[Zeta]", ",", "T2", ",", "T3", ",", "T4", ",", 
                    "T6", ",", "T7", ",", "T8"}], "}"}]}]}], ";"}]}], "]"}], 
                    ";", 
                    RowBox[{"Get", "[", 
                    RowBox[{"EnergyMatrixFileName", "[", 
                    RowBox[{"n", ",", "IiN"}], "]"}], "]"}], ";", 
                    RowBox[{"EnergyMatrix", "=", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Length", "[", 
                    RowBox[{"AllowedJ", "[", "n", "]"}], "]"}], ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"AllowedJ", "[", "n", "]"}], "]"}]}], "}"}]}], 
                    "]"}]}], ";", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"EnergyMatrix", "\[LeftDoubleBracket]", 
                    RowBox[{"jj", ",", "ii"}], "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"EnergyMatrixTable", "[", 
                    RowBox[{"n", ",", 
                    RowBox[{
                    RowBox[{"AllowedJ", "[", "n", "]"}], 
                    "\[LeftDoubleBracket]", "ii", "\[RightDoubleBracket]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"AllowedJ", "[", "n", "]"}], 
                    "\[LeftDoubleBracket]", "jj", "\[RightDoubleBracket]"}], 
                    ",", "IiN", ",", "IiN"}], "]"}]}], ";"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"ii", ",", "1", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"AllowedJ", "[", "n", "]"}], "]"}]}], "}"}], ",", 
                    
                    RowBox[{"{", 
                    RowBox[{"jj", ",", "1", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"AllowedJ", "[", "n", "]"}], "]"}]}], "}"}]}], 
                    "]"}], ";", 
                    RowBox[{"EnergyMatrix", "=", 
                    RowBox[{"ArrayFlatten", "[", "EnergyMatrix", "]"}]}], ";", 
                    RowBox[{"EnergyLevels", "=", 
                    RowBox[{"{", "}"}]}], ";", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"EigenvalueJM", ",", "EigenvectorJM"}], "}"}], 
                    "=", 
                    RowBox[{"Eigensystem", "[", "EnergyMatrix", "]"}]}], ";", 
                    
                    RowBox[{"EigenvalueJM", "=", 
                    RowBox[{"Re", "[", "EigenvalueJM", "]"}]}], ";", 
                    RowBox[{"EnergyStates", "=", 
                    RowBox[{"{", "}"}]}], ";", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"EnergyStates", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{"EnergyStates", ",", 
                    RowBox[{"EnergyStatesTable", "[", 
                    RowBox[{"n", ",", 
                    RowBox[{
                    RowBox[{"AllowedJ", "[", "n", "]"}], 
                    "\[LeftDoubleBracket]", "nn", "\[RightDoubleBracket]"}], 
                    ",", "IiN"}], "]"}]}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"nn", ",", "1", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"AllowedJ", "[", "n", "]"}], "]"}]}], "}"}]}], 
                    "]"}], ";", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"EnergyLevels", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{"EnergyLevels", ",", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"EigenvalueJM", "\[LeftDoubleBracket]", "nn", 
                    "\[RightDoubleBracket]"}], ",", 
                    
                    RowBox[{"EigenvectorJM", "\[LeftDoubleBracket]", "nn", 
                    "\[RightDoubleBracket]"}], ",", "EnergyStates"}], "}"}], 
                    "}"}]}], "]"}]}], ";"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"nn", ",", "1", ",", 
                    RowBox[{"Length", "[", "EigenvalueJM", "]"}]}], "}"}]}], 
                    "]"}], ";", "EnergyLevels"}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"qlanth`SolveStates\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"SolveStates[nf, IiN] solves the energy values and \
states for an atom with n f-electrons with a nucleus of spin IiN. This \
function assumes that all the parameters that determine the Hamiltonian for a \
specific ion in a specific host have already been loaded into the session; \
these can be loaded by using the function LoadGuillotParameters.\\nThis \
function also requires files for pre-computed energy matrix tables that \
provide the symbols EnergyMatrixTable[_, _, _, _, _].\\nTo account for \
configurations f^n with n > 7, particle-hole dualities are enforced for \
\[Zeta] and T_i.\\nThe unit for the returned energies is \
cm^-1.\\n-----------------------\\nReferences:\\n1. Sign inversion for \
\[Zeta]: Wybourne, Spectroscopic Properties of Rare Earths. \\n2. Sign \
inversion for {T2, T3, T4, T6, T7, T8}: Hansen and Judd, Matrix Elements of \
Scalar Three Electron Operators for the Atomic f Shell.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "SolveStates[nf, IiN] solves the energy values and states for an atom \
with n f-electrons with a nucleus of spin IiN. This function assumes that all \
the parameters that determine the Hamiltonian for a specific ion in a \
specific host have already been loaded into the session; these can be loaded \
by using the function LoadGuillotParameters.\nThis function also requires \
files for pre-computed energy matrix tables that provide the symbols \
EnergyMatrixTable[_, _, _, _, _].\nTo account for configurations f^n with n > \
7, particle-hole dualities are enforced for \[Zeta] and T_i.\nThe unit for \
the returned energies is cm^-1.\n-----------------------\nReferences:\n1. \
Sign inversion for \[Zeta]: Wybourne, Spectroscopic Properties of Rare \
Earths. \n2. Sign inversion for {T2, T3, T4, T6, T7, T8}: Hansen and Judd, \
Matrix Elements of Scalar Three Electron Operators for the Atomic f Shell.", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, qlanth`SolveStates, {qlanth`SolveStates[
         Pattern[qlanth`nf, 
          Blank[]], 
         Pattern[qlanth`IiN, 
          Blank[]]] :> 
       Module[{qlanth`n, qlanth`ii, qlanth`jj, qlanth`JMvals}, 
         qlanth`n = qlanth`nf; qlanth`allLoaded = Apply[And, 
            Map[
            NumberQ, {
             qlanth`\[Zeta], qlanth`T2, qlanth`T3, qlanth`T4, qlanth`T6, 
              qlanth`T7, qlanth`T8}]]; If[
           Not[qlanth`allLoaded], Message[
             MessageName[qlanth`SolveStates, "notNum"]]; Abort[]; Null]; 
         If[qlanth`nf > 7, 
           qlanth`n = 
            14 - qlanth`nf; {
             qlanth`\[Zeta], qlanth`T2, qlanth`T3, qlanth`T4, qlanth`T6, 
              qlanth`T7, qlanth`T8} = -{
              qlanth`\[Zeta], qlanth`T2, qlanth`T3, qlanth`T4, qlanth`T6, 
               qlanth`T7, qlanth`T8}; Null]; Get[
           qlanth`EnergyMatrixFileName[qlanth`n, qlanth`IiN]]; 
         qlanth`EnergyMatrix = ConstantArray[0, {
             Length[
              qlanth`AllowedJ[qlanth`n]], 
             Length[
              qlanth`AllowedJ[qlanth`n]]}]; 
         Do[Part[qlanth`EnergyMatrix, qlanth`jj, qlanth`ii] = 
            qlanth`EnergyMatrixTable[qlanth`n, 
              Part[
               qlanth`AllowedJ[qlanth`n], qlanth`ii], 
              Part[
               qlanth`AllowedJ[qlanth`n], qlanth`jj], qlanth`IiN, qlanth`IiN]; 
           Null, {qlanth`ii, 1, 
            Length[
             qlanth`AllowedJ[qlanth`n]]}, {qlanth`jj, 1, 
            Length[
             qlanth`AllowedJ[qlanth`n]]}]; 
         qlanth`EnergyMatrix = ArrayFlatten[qlanth`EnergyMatrix]; 
         qlanth`EnergyLevels = {}; {
           qlanth`EigenvalueJM, qlanth`EigenvectorJM} = 
          Eigensystem[qlanth`EnergyMatrix]; 
         qlanth`EigenvalueJM = Re[qlanth`EigenvalueJM]; 
         qlanth`EnergyStates = {}; 
         Do[qlanth`EnergyStates = Join[qlanth`EnergyStates, 
             qlanth`EnergyStatesTable[qlanth`n, 
              Part[
               qlanth`AllowedJ[qlanth`n], qlanth`nn], qlanth`IiN]], {
           qlanth`nn, 1, 
            Length[
             qlanth`AllowedJ[qlanth`n]]}]; 
         Do[qlanth`EnergyLevels = Join[qlanth`EnergyLevels, {{
                Part[qlanth`EigenvalueJM, qlanth`nn], 
                Part[qlanth`EigenvectorJM, qlanth`nn], qlanth`EnergyStates}}]; 
           Null, {qlanth`nn, 1, 
            Length[qlanth`EigenvalueJM]}]; qlanth`EnergyLevels]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "qlanth`SolveStates"|>, False]]], "Output",
 CellChangeTimes->{
  3.868030141604206*^9, 3.868030321074489*^9, {3.8682796235403214`*^9, 
   3.868279631110853*^9}, 3.86828366017943*^9, 3.868286340938405*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"2a29a697-42f7-4fd0-a78d-4ce3b9dc5fb4"]
}, Open  ]],

Cell[TextData[{
 "The Hamiltonian includes the effect that an applied magnetic field has on \
the ion . As such, a final thing that is needed to fully inform the matrix \
representation is a value for the magnetic field . Once this is given, the \
eigenstates and energy levels can be evaluated. The resulting diagram shows \
the resulting splitting of the free-ion ground term ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"2", 
     SuperscriptBox["F", "o"], " ", "J"}], "=", 
    RowBox[{"7", "/", "2"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "11ba1a7f-e4d7-41c6-826c-6d7b331aa8b1"],
 " and the first excited term ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"2", 
     SuperscriptBox["F", "o"], " ", "J"}], "=", 
    RowBox[{"5", "/", "2"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "88bc51f1-4aac-4d10-bf69-de441fe90751"],
 ". Here assuming that the nuclear spin is equal to 1/2."
}], "Text",
 CellChangeTimes->{{3.868283740855101*^9, 3.8682837466342783`*^9}, {
  3.868284527478084*^9, 3.868284597796453*^9}, {3.8682850187827797`*^9, 
  3.868285072320323*^9}, {3.868285661397656*^9, 
  3.868285674398538*^9}},ExpressionUUID->"46b007b3-84c3-4f57-92f2-\
5d985f4c3fd0"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvfd7Fce2Nnhn5pf5cf6DmXnmft+937333BN8jo+zMZgoIQkFBBJJ5Jxz
EDnnnHPGGTDYGBvbYGxyzhkkgQARheLeW/N2r96l2h2r095bsPW8Tz+1u6tW
rUqr3i5Vrf5/O/ZL7/q//8u//Mug/xOX9LxhnwwcmDci4//Cj6y+g3p069ul
c9O+g7t06zLwnY7/B24+/t/+5V/2IyCFg6FyXQSCZXyY/2krPoUZVEkCwQoe
wVCl6o4DQIipnDJzqEphFMFSjgEU9TgNdWqGIVRTYVLPfFWL6+BOfzcQqv+Y
66+Vb97zo4AYqlFdIyGiTwbLa0IVuKrgQLi2e3OotAV+ZBkhVFPFYFe+OMzl
h4JCqAlVEYwiuJRvIsfv+vEbbvQXr2db0lg7xrxyoo1gtQpWHbJaBfGWcgb3
PcRb+UbQtW8iRs9lXQUDFXxZTOynYHl5I+wARjJtCTeJqX3E50I22WSatjVl
240fjinOdb2i1kKUKegXKxPlzEYVGHDNmWMHbzhzFMobjDPObNIf/IYuZ9aF
A+EecmbRKU/M9loKca6A8GyV4Mx+1L/d1vFEWoIzJzizS8QJZw4a2wcRe+KS
MEeBMxvlSGFzzuxyyhaOX8kT5iBHhlU/Vfe18b3izAEfaHNQ7+0g3OddVWAg
KuvGruXbq/94099XUupiQFEvirYmRpzZGXMGbdaCK12UYLZ+olltsLThPs1f
UeDMjsvlU4uYtJQfevrEmT1nUHUd4szZqYTXjTP7Wdv2ymKLM+syTzds2dlT
B5xZWwS7nNk3iLa7EWdWPRVYo9ahT0Y3ecbikm4Zk38ddiRO1QJWnNk7/R1G
CERyZvH69wTuW1CwIWI3dmwk8aQ4DjizyXqyhiqrSqc2v/qTgpuFXysOZs6Z
7TK3OOHMtXs/7KznCFaj47Ywmcu8qn+7rRM/0l4nJDhzPNW27bI448xuqLJW
oAMa7CxTvzmz/UlZtN1NlpqD9jiz/tq1+YK243VsVkarBfOIChSsRitWbLZc
L1gWXcXskFJn7ywW8T3lzEJ9RttSMUJth7Srj7ZX2IfMcj3lzG5sgjcTik3O
rGucbWTn0fxlNCPHnDN72xyWs5i3nFlbh17JiR8GFT9wwzljxZnrIqLJmY1M
jcrs2LU/jqmvKhdBgUZZx4ozR8ZR780IinFak8jecmYHPFPLykzkh6FD7YRZ
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
9J0+WnT96ccfOua1b5Eq0eaMFuktM7O6dsu7fec6KG5FRRkt4SLm1199kZqS
3LpVy927viH3dOSVLiR/62TevDlS+tTmIMxNmjTKzs4qKyslRsSc1CkLxfK+
CAnafbkyiYVuoPQXL5ybP2/OpAkTgdGjR/fr1693755z5sy6eesqoj1+dH/P
t9/MnTNr9qwZs2ZOnzpl0rixYwYPGjB+3Ojdu76iZWoU8/qNyzNnTh8+fOjA
Af3GjB45ZfLEb77+suTxQ8knXtib9OuwNyPWnNmyftxw5jBztiTMsefMMiKG
nrcTrh+SXcrXNTjRRzzoEFv9RZLHYf9JyBdMqEpuYn5tyRHP2hwxJ8NxBbs1
Zh3Zi50eRjm6KYUnsNvZ7Ap3Jj/APn4d3vlAmx+INi9cMK91disQZiA7q2Wr
Vi0nTBj36FExMV7EKX5Q1KVzR1DrDevXVlWWS6lk1k3KIMr8ufMy0tOSmjVp
2qQRkJnRorKirEp240wEm9YJFX/OvG4cxwuEV8IfFBesXLGsX9/eee075LRq
nZyc3KBBg3r1PhowoN+p08cQ5/mLku/3fTt69MhevXogWudOecgR+UJDvAJQ
16qsKj177mT//n1TUpLxCGwfnHnf93tfPH9KPj3oRKTdpvS1fT3jzDrnBLXc
UoQtm3FdXQQCumcPzdJGDlUnWvHlit13AJ1wZpHIWgvg04TuWL5/ukVH/9jC
E/0tk8dz/0nIt5vWZM6yjGY3X12o+FvMaWpcQWTWFo/v1e5oS86sOrzpJi9b
EOlvjiULjhdtnQfkvQrs1BtbZ6bP+V25fHHwwEFZGZktM7My0zOys7Pat2+7
b993RJhBMtesXtkqO2v9ujUg2LTsTGvCyrnCqup5c+a2SEtp1rRxSvOkxo0+
TUtt/vTJ49KXz0+dPH7i+NEzp0+ePXNKWuClz6Dw6nEskX1GEOGCe3emTpmU
2zoHWjVr1uydd95p0SJ1165vKEdEePb88fff7x0+fCgIc/t2bZBjk8YN+/Tu
iUxZK9x/cHfz5o1ZWRkN6tfr26fXjetXK8pfUaEC3EuErab0r31VtWE71RvP
mfmdz3HFmbV3VENVfPLydUJ3LN8/9aKjv6X8+NdfsCPFrf4J+ZbJTcSKR7NM
HrbYhtA7YJKABcxr2KwhrFx8iPBbI33Cp42sdRbsNs7gk2TB8aJbS0QO2a5m
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
KipAz4p99qRN65Zdu3XELK+wMJ8WchD65uXl5OfnysKJdmwB7tWrx6+/Vm/R
otmECePoZAxem4Eobt++2bTpb9WrV+vSpRPpF/qDifqga+KsXN6N58SEuBrV
q/34zx/69+sja47OCwQzW2CzU13PzBRdXJR3+851jJxgZio3STD1lEVhFFSQ
+mCQ+ruPLOrDi2b9MUjM7Jmv78xcmcyMWi4pzp81c2qXzu379ulx6eK50i/F
LqUvbPTDM7C53e+tGjaqM3vONFldsOfRf5V+xzwjqztlyAP9yiSp0Y8amTtv
JiLq0LEt7acDTwJaQlcvp7/PYp+7rj2V5M++2pnd5GyHqcrHzJLnggp6gGK9
e+9mxvs3VERO4dK0tHepGL5WhS6L2LaZJiAWwRpGZFaS5RE90xp6qArMTGsz
Apt91M6Nm1dAwmh7w4YPWrFy8dNnD6FooKYbNa4HGT1m2JmzJ2bNntqpczt8
hbdlyxfSnV+urQEKObueK5uZDVWJ9a82Bcy8ZGnI+g1rfArHp3irDjOz6Rg1
m/nhHSYLPXt16d2ne7/+PTFerQlbmZuXRWszRLouv1qXq7yduWKYmXcN4BmD
ZFz803HjR6LfYQ47ZeoENEVMZAqLcvMLsgHA2dlZ0dH3Bwzo16pVC0hxcSFo
9lXqy0ED+3fp2n7suBE3b14HJOfmZhcU5L16lXL9+tWHD6MpfI/Nhl8+nThx
rE6dWm3atNqyZVNJSZFoIiYPffv2rl27ZqdOHZKSEmg5Fv3BVFiQl/IyiRZm
FBcVLFww/9cav/zPD3//vV2b5OREWmpik5kN/3c27h1GdmYSkZmLCnOv37iM
Rnvh4ln6Z0Tc01oWhY6W/8TM7NNbZqn9MzGzrFvJ/J2ZWe7cvt67V7d2bVsO
GzrwU0mBshGgjGTIForhCKqB2LXkU76kLjaQVCOqxkDK/dqhHLXBWtKpHiVB
y5v1SAaAHDiob5OmDdu2a0HMHJ8Qu3FTWNbHdOrapLZcCVP2ANoxL5efgX1i
LSY6SZksUOktWjwP6hWUJQ56XIzwgALBsO9UD80QS4aLVzZZ3yKWZEDEkGnN
/Fgw7bfLzGhjUCut2zSDXL5ynva9vs9Ma9S4ToOGtdA+L146SzUbvnVj+w5t
mjZpuHzZIpdtWdkGQkrKpa0qlZnNVInYCP0TSdkD6Cszi7k2+zWoOtSrprZQ
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
//OPHt27Aon5GsH8/NwaNX754Ye/Z2Vl0sUohOs7d26vW7f2pEkTmJANF2MY
/2QEzHRuHu2vUTC+9N7dm7+3a9WzRxf6g0a8SVa838TX8dM+M1+/dmnD+jWo
WT4WxuYGQLEXeB2FAtsfNX2/ckWTEk3y/E5qVWJmEi/AHIwdfxq9o2mBvvGn
cJ6tL71Jj/p/HmY2iMWEhO37DHaav4soAWFmw9DshOyLnyAwsxca11KNfWY2
FfE0OYrR3ouaMoFyX7c+1CszG75uR2Oa/bNpppuCoaPLQK4czGysaiuPljU5
NWVXxfwIZuY9gF/VixGDK8IyZt6+XVRUADb+7bdGEyeOxzMjKz5DQ1c2btyw
UaMGDx9G0w5BWTm0uQDPKjO/z3g3bOjgn3/6Z6eO7ZOTE5m6nzx5BDauVu3n
27dvkgvk48cPPXp0g/uECePoGiyvZ2VomNno73U+U/oznVi4IGROxw5thw0d
qM4U3JxMp7JYnD9jPYLZZ+Yb1y9vi9hcVJjrq0L3rxcY9jWvbKzvSmbdqoow
s36YChgze0QdeE7Wc6yaBcGeXLHM7FWn+8TS35lZkx4Px+/MXIVFP+x/Z2Zr
ZtaDin0NxWVeJjpm1nrwFhoJMfPqNSveZ6ZJwihXHn0qalU7zBwo8crMfpS8
/Rj9k/KfTec1JdAyUft2b9+2Je1tKjeYYDMzmYj5Wmo+I/TixfMdOvw+fvzY
d+/e0oINWp6Rnp7Wr1+fFi2a4XP//n0pKclv376G56tXLgGbwRtfPpds3LCu
caMGv9b4BbJ7906yRefl5UydOrlevToNGtQbMWIYMJI6Y1zc82bNmtSsWaNX
rx4xMQ/c55daXgIoiiEwi2tTQcVZH9JHjhgCYN6zezutiyBOdirbAOlfM699
sKzH+cXM169d2rE9vKQ4/6twa3awz5qzaG/eXzSh0yrCzGbD1J+GmYNgZ7aC
BDnQzOyVLjw9f2fm78xcVUQOKDPHPLwXQGbW+zRv2PaZucy/N2a2CsFAv5Ca
tlQ0YrG7RQjK4FdvIhbO2nWhoauXi8wccJ4MYLB+xxjY9ASKLTWLRrz6NMuF
KcMoZ4ZE7t0JKcjPLgcte8VIT3usVCqem8EnzmVlZa5bFzZkyKBTp07Q6Rn0
65cvn+7cubVo0YI2bVp17dp5zpxZy5YtmTRpwsEDUXm52YCNkuLCSRPHd+/W
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
AbA9xrY+5cbs/qZKZGYzrWQm9nW69VvWalGyx8xBXZthVj7Sd2b+EzGzpiqD
vWfQDjNrG4xfxIu3KnkPoN6DbWa2GHzse64U4VStW++60yTj/ZtgpNBMT5kx
c/ljsWDmQOWoYphZB6L+M/PePTsOHdzHzGxfAs7MJF9Ki5yeFlqDUqqS4lRv
xKbElw3ClcfMO7aH+3F39ndmNuvXFiHbORlS//q3wsy+am0/NW85mNkOhdpk
Zov1zIFam/EN8/OfQoLBzP4Ns5ohV2wP/vUjWWXmKmRnFsVyD6BXxWHo0+a7
wRMxCxs2rlkTtjLg9wCKukbvrlc3so+AbeHBb/b2Ip7sZNOnqViHbwCi4vFu
dumUJHLvziOH99u3MBtYzwLHzM6v7nPhiD/pNONKh2GbwiuZOSPuDvWNM7PF
4Ox/3/fxvwwPFq1wZjYLwX5ePOaYNlIVbGa21rka8UNr+6l5dcysPyBR1dHf
mfm7eNSLT2fNfdPMbNG/qMNWifXMZmL5P4XXQdjQp/3XAyVmCZAUZg5buyqo
zKzXVr5SltdYfPLvU/rLvpaDmSX9IcDW4QeOmRHFvshdR48cqArMjMTw7XjU
/MhgW+kwbFO42yLZX0qLuMv8uzGznbHCmpArl5nNQLqczOz0XKFhnaoKsDOL
9aWvU01d04E21CV53VFA/svWs4qdxvnlc8FXpKS0qPRLITV7+qR0ai7Z5PCZ
SRjFXUcll0kxxCG5BCFwNmV1RzyED/YhF+rpdM6PrO7I0PjR54tjNCBnxb08
7Kf5SfxVTJKd8M38+BQptx9qOTTIu6+Xkj9/+lxALlye9BPtZ2FvnOzPXwol
5RRc8kmOeCD/XGX8k1l6eJs2x85pMHzFbP2z26d+ZqerX7GleR11NeSp75Vm
VfDJ1S8c9+7fXL1mBTVLp/qnp2FoZuFQqzaLV19EpV+K6QwBPnucOgLSI3ZD
fiD96FSX+0rqwEJ9R1b/q+XjZykjJOqZWg72gFbBBisKhzMuxsv+xUZCL5K7
U/13m9sGpUf85HITC5OHdPjZtHntmrCV6RmveVuTpI6f3OrE9JMHTjm5G9a+
bG5R12tJryo4IGKYSFnY1eXVv7XByu1fR8jiHi6RmT3CN2JmgTEcwiYvoQ8K
9atPD7WlfVG7Dh/Zz43E5a5eteyqPuX0OVk5T4Pc3T8pjuRCg4BTWd1B7jxl
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
XLWEtpuhMScankMtJzT2oPu51moyN7ec+e2bpPCwnZcunuNFHQaWzU0G6sVz
9Uun9lX0k9Ko0twczCwJLh1NRZ/ZlZytYebY+3ePHjlUVVnexMxsvt2av8t5
r2laZu8RYlDmZHfMLCXn5mJmraarNF9YNec2JTN7Iv9M9zYfMyvCM02P2vG1
E7SWmZ1BrmQii8OiucFOy27KwaL3Ym8/httnbl7m2nUrgZnxr3zXicn0PZp/
luey5IeeEbTj200wszxBOBOwyW/1mmWfczO4b8yM4Q/EzAADSYnxu0NDgJkp
g8BMmtIeL2dDKTsJh8GOrkttuqamLWeQdyi3OXTpZU3IzA9i7x07evjPycwG
8FjxXp3AXP9HYmaWycKyObGFMHPTvKP8XtVxSUewUaFOIr/1QmZ2Wz4GmNmy
qmTrI+YfofcuGLKAmdetX7U9ZAt5ZUWfJt6Zf12FzzjXqGVDrcexj4HyW+B4
c+AGWLMQZnbuo2lCZraKrPTmTfWWPxAzw7j0JiUxbPeOC+fP0BuvPFEjnqtZ
klQjGxtiZud59YFaklv2XuzSvzSZWSRns8zMCX4AHz2MPR5xFH2aEI1lbZXm
xpR1jlFW9UEzbb4xsiGRsuR2vbTMPj6oM3MjOTc7MzfxnPiNmbXzb0WxuDAz
L9quMZm+h5iZpXz0MrOVVcncTUw+Qu9d8Jr5BTnAzCE7tqJ7RLV0vDP/LHcZ
m1MU0rGOmem7grZsXO+3GlYu3DdmZp4TWwozAx6np33Yvy/Mwcyi2WS+xcqZ
zTOz+zlCpTdp59ClczUhMz9+9ODE8WPfmLlpdJjZx4c/MzOr3dJSmFk1/ypY
YuwdPVM+Dlq287WEma0pahVmNompLI/Wxczs9WusYZhsPxa2z7z8LL8Na4Dc
eNFZp+LrW9v+LUzf7V2G5xRJ/j3EzFu2BmzwXwu1wInMzPGqTGVmvmuJzNzi
9wDav7x/l7xv726UM5OTnqgXz9Ws5I00mJl+NZfaFNNhZ2a1wUSePWlMlT2A
ljNzVVXFk8cPT56IqKmuNMPMnut6ijVops27xG9CHWb5yPCNmXXNd1yLYmbl
/DMwM9MI43lmFrDZq5mZ0a6FtcysPXSz9wtj7cfC9llYlLty1ZJtwYENomMX
tcZpYfu3Nn3t57Kko2tOsZaZt27b7L/xGzNTwZWZrcFmi/JsICQmxIWH7US7
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
lRUlZEYjH21R6ASDeXlFcVl5UWlZId3TCau7zT/9CrpoQTEpa9NnyoM6M5NH
68q/rie6lTZLmNmtS24zzNyIzWqPYH5f9vbvJe0HmHmD/1rCzBpVr9F/9eaf
VsYgIwCAU/zLZ8+ePwSUffL0weMnsYlJ8YBe2PerqssuRUUeOLhnY8C63+fO
nDxl/MRJY2bMnLJi5ZKdu4L37guFSzt2btscuGHZ8kWrVi+F33nzZ0NMOFlU
nIuPgJc9e+5k0JaNITu2Bgb5L122EK5WVpWiCjFhZhqG3c8vMl8M2oMhPbvB
s3btDL4efbkR1wUVEb3zmktJNiEzc8KgjeMnsDFU3P3YOw8eOn/vxFyPfRAD
4dHje3RFk+OKyhKoi0WL5374mIKi5gbX7YF/GGaOPHeKZ9a6kdMIS114mpkZ
oUjtiY1/GZiZ6FEA6yIha4MuLyozEzVmOVqTvYES3jbDzC+ePz0fefZPwsx2
SqeCRl/Jyk67Ybh7dNMxs9o+Pvb9fUQlA4LLeUPMbIABYNgEiCVsTH+IITY0
4G9eflbE8UOLF82dPm3SnN9mnDp5LD3tQ6MaswC9wMP5BTmpae+jr0clvX4p
6bmQGjwr5u7NK1cvXLx0Dn7ff0iG0dsuajLr0mg19r7ek37TPJeFltVImIWZ
3RK4NKikrPgIO6+jHPSWW7O3H2RmYEiamRmTNdPfeVFNApexsHQFxBo/YdT0
GZP9NqxZsnQBUDFAL5AzL6ppZWalAn2dPHV0wsTR7Tu07t6j85ChPqG7Q6Cb
A60BpN2+E30tOgpgGLh62vRJY8YO9xnYd/iIwckpCbgAP30mImCTHwA2dP+b
t65t2RoAaA03VlWW2ikZL90YWICZkZnlEA6PCN21PebODZyAUJHMwLxGl2oT
MzMRa0Ahjxw1ZPAQn0GDB0Cx+w7qD7/9B/Tq17/n7N+mceJCif6+8O59MlyC
hc/bd0nke5/H9Zk9wB5qKUC1AjOHbN9imJlZGFjyRO9lZlEvQsPNNPIk6lpk
Zqanp6fm5GRlZ2dWVVVosC5CNTIzwnNtbU1BQR7cCIlkZWUUFRVg7RsRMqsw
c011ZdyLZxfOnyPM3KjV3EzMbKz1KrZnxZq1ix6XJMzM1GaYHm09LTcBM8uv
qjGzRqW7nWol52HwhGkOJjICrqTA6b0/Wdlpx08chplu/76wgI3rp06ZsHTJ
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
JJRXFJPiffjoLpyHyfHps4caXZiesvEXZ2SO+paHEVAKzVMSEokyBq01ZwmT
qDX7P3z6LjEbFIRyasBsb25m1njBJi5/xfPWVqtHmVm7iIh4mfRWDKTPErki
p8TMsNCePm0SGVGRNpEf9OZH/+jNYN2C+gKiFv/K5QuHDu6l9ZmRHlnyYN27
uE9f7TxHeY3hqdUNESzTgy1Wn//GtYBA5yJPEWclvKidiz6Uk1+/Wr5s0Yrl
i48eOVBVWer0ySisjOxG10QajVDxpJmykpSYVcyshs0stuaU5YrNx8zkKZwo
v8r5nN6rdzdYTPGiwA0XU6+TX40eM2zxknnvPySTzMS/fHbrdvT1G5cfP4kF
eIb4qakfV6xYtnjxwuTkJKImASj7+nXismVLRo0aceVKlM1WjXYtaO7Vuw2Q
3AtnIEFIH5kZtxwiVDse8Y2Z2WXaOgIrM0sU0Q3ImeX87Glmls+k+Nb1dY4Z
EH/tot9MGFXQ0eqFi2d5cSsQL2i+bfBfC11pxswpnCgxtjetb2uNccMTD2px
+WdMXxcw25W+UzcNM/9Ry18en9xVWJQbsMkvZMdWoiXIK7G6Yjrms609bpCA
5AwDgq22AmbP5SsWwSq7Z6+u06ZOgLquq61C3AJywC2B7E8xOoa7Z2ax3Wox
89UrF48c3o9yZr1B7e2MzkdaT2F/uqSE6TPwW1ZetHbdysFDfG7cvGoXNeLs
X52eyrOz0l48f/zb7OljRg8P2b6ltKSgpDg/I/1jetqH6qoyu+jzxUJmNlyG
DN8XnNGSEuOBmS+cP8Pr9CzJkge3cSTf5V3e0QPMTAfJaKz4XCKhKi0r3B6y
ZfKU8R8/va2sKoWeDuMSsPGy5Ytg9n/46C5HfbBeumxhp87tIAwZ6vP8xSM4
U1CQFxl5NjBw0+PHD4uLC4Fmy8tLExNfbdkSOHr0yJCQYGKbzpgaMxqvoyXY
nODTJCkpISbmdnV1JRrxIPai2ZlZMluZbJ9qTUJvC1drJ6r5cStYNsrMSv3L
GjmzNzAzXSwKs6Tw7kRogBPcl/qa8rKiSxfPDR8xGLB5W3BgfkEOcWBdV181
bLhv7z7doTdxovTJkj16budxw0xi8unenH8z6bOzrmRKUpukvJCZvbn8NdIx
wMza86nePLCk5vCuW1325OmDu/duLlo8F4aFgb79+vXvOXPGlAexMc+fPfrw
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
7DEtXLr+CqTdKpbj70vXnjp5NC01kY1N/q/ZISY27mxhS9vTt8jMdkzSYvz8
xePYjZE8M9uiZiWe0ZZk4UYmBMvmjY2SHGZWEBfxVZnZqIvV5pg5OSmBMbN+
ktxO8qm0B+3OzHK+FMOGDsPm756ZJVnagDxN5y0dxsxixGsHZraLbrTIzDbe
xfYSjJ7XfIFWMbNM+pKZ07rUMeXzcd1ykr3qj6IqyovBzB8/5PPK52u1j1KR
E7vEuvorEHWFNsj0Aena06eOpaclGY0dRUNSPjMrbWf5DfIVmVniccSutU7S
ZPavUcloiu+Amc0MHHFmbg/DsG2OV6X+erQsm5lTkhN5ZqbNClQq2yyyw/rR
EUkCxqwg587PzDLXAHYqZpawKZ2Kme3OotLSZffy7Vig9l+HMbNKctLSXiDn
6PIdx8zS9bedme3bPkolTewS6+qvQMIdwMxWj2hbmFniweU3yNdiZmnJMXut
1ZIms39VJsz84uWTjXFRdHwe+9Je97UXM1scg8ajRoSZ+fRNM7PGcMZYJc7M
hQV53ygzO5RP1FbNNncqZjaCZJ5XZZKzw5I9dZd4UlqTzvkU32qSiGc2futn
Dwr95hK/Z4VGZP0L/73td6QbtX5pqqosjdywprioUHu6gaCCvlo7mEiOg8q3
4u6G8mzeThllY9cCmaDh9S2v+0AdevLEkR0ZqXTMB10ifcid6HSBVXbT9Lkk
2sF2JWCxEDMMwAu/wieS6UcoegQrMOPlq6dxm6JpnlnO5TL9JtP2ke832dKD
+mQnZla1fpZgZjuwt0n55mKn2yMrDFYpisgJY+a83OzUlCT81Z8zyC9ytEre
bPd9rO5Zhyb58Cyflu3QYlYxs8XIjR/M3Mme4ltN4ltAmB/1X4vZvlb6WswM
Qq6uKtsYG1n0sUDDHV781drBRHKkM4tdLl2+dXc3lGdZdsr0ctL2+JcOaDt7
5gSYmRE1ZaBT2MyPI7EpHTsxs0OTxXvZzgMqA7axP0t0NmZW2lYSci6zefWp
Q+aZ7REXbWYC2QiYeWY2SKJyZZ6ZDZDbOun62zOzzMwdw8zWRTt/VVq2L5d+
H+T/raYfzCwziT2+HdvECM5LSz7EbYz68D6PHVtMZ1p9xcfnk8xscq6y2Ixy
JJlyKmVmtXAAMbS99rhhXQmNDTUH9u8GM6uF6WWVgM3Kx5dcu2kqZh2mBCze
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
6FvYq306kpn5+9qd2RxUfsczM0s8M5NVlegRpfLguJaXLl+sMtLXyn8oW0YW
Y+b8vKyY6PXpaUk8M0vXxGI7WMyvtB+/IWZmz+VQZhZreaOGJf0JZk5NS0xK
3koHppstwbr6OJqZLcjPN87Mptis5k8At7T8QW3CzCoRF8PqnhLLI0dZyZRn
u/ODTDw2/VKszkqZWfZsMzGzrVvGWbcGUPxXu7U5l7j7SsqhmMyYuj/W1VD+
U9hXJs0Km72KNXsXG8tp/94SLVOyO1bZl9kcV76o3Mp4c6qg8iYHmjBm/vA+
j2dmmY9vMTmu5ZWWb/FaRQ9lpf7Rre3imTkqcm1aaiLt8qe2bQ2gzPzW9aMC
DSCDgeUzqtInVczACvNL3NqoVZn+vP/gVnJKPGVra2uV3sfAFrISy2+dPrEg
P98+MxsEaZisEDSK0DCj+SWZmf5aoR8s9qa0ylIkz3bhB1O+ksPMYskIerX/
KmRmuRvN2czM8jfQkH0jhS0vy6HgbipbGqkZjfSYxTtarKdV9bcD6zqofDFm
tqJ9REaW5RlmPr99yco0dbby5cszJeuqbUaXOpiZlSal97Wl46x+Liv6i7W/
ETNHbliTmpLQ+qVJ4zBmlvmlvZKEjTbKY9GmWyE5ipjBbE3sVR+mKl+9fpqY
tIXimVXC+Y+210eOvJnmlMnMluXHwWsAle41JxpxIQOSHcTMirSE/N6X1lqK
5Nku/GBQf5v5xwh6rWNmG880sS0m2ZZk3Iy2ayGz88wyW8l21WeP+n+18m0v
xOy/MkvWaQ9uxZ+S+VK+EEekTlK+zIU5TJ7FbiTzLrwNBTPHRK+n2AxVa7Np
TKOsku3RhraUYIVUyylE7CfLRtConbmr8D2Rc17uuw3rVycnbaNvxFpAus7W
tY8dSdVsa8hsJUVtqJRAZGk28VubmhiDzd8MR6VEy4OZkxK30vGa7EK+R+TY
evk1l9Ok8t9biTadJWBWmVCoBBt/xXlmySno9kZjRw4RHmtT6+e83Gwwc2FB
Hg0E2kiQN4s2yr8iebbXiDBTsgnr2l6+HIQ2Kl+CvcUo2kLD2js24wcz273+
ZoWkY8q3vWSz/8ovuTMwM1+fzla+TGZmplzs7vLvwvrCiJnpS8X1t1Mb2qXx
ZSZbCpEJJ0b6h/0kn5kdIZxq+zGzWGvIbCUHJTv2o3QXs88SzU7MTK8SyE4Z
zTNb90RW19l8Ujoc7MfMXzc2QzK1K0ne0unHqTDPTMyMxJjZLtKlVJ7tUILs
eWal5VukXIt3Mb2EXSg282y5YW0DZovhGVYzs9qeWOjo8i30uC3XSgiJo8u3
Jb/Fu8vNKTLKFJl7CTWuFKXEyrcXqiktX9H8j2lRih6Bx2aemfmwAfmF8/0r
HRvJF2Jdaysz65aSFQWybNZZPdZKFplZlmwbMo+ykWuDbZUuoTMk259CaWyk
WO/gp9evnrUzsy6eWew9ssSkur3aX4KZjYanhWQnZv7q8czSzNzeI7rpZbZW
Vy0w846MdMbMWrUgzEIr7SnT/PYdiaLXyg6icFD5YlOI2mRYvsyi9CDNr/UT
SzZPEduPlo2Zlm8NpbrdMDm6fEnJtKp8+Yzq6PI7Jonhh9gosxcdKb1KLKe9
mE1p+fZ6ZyqrzoazzRaZWaz+ZvtXjLet6Dul7S/zdjLvK32JYlbhWsmUmVWt
zWLMLFErOTZLLCm1ffJL6AzJ9qdQtphInJmRGDNTv/Pldzwz295i+vQ3Y2Y2
Esm24kPrl5YfzCxHfswzrQz0NRiASoBZrYSZbYmmcFA8s1HTKR6bZtK3xMyd
p3yHJvlMZTrKFNGRLXz1PZUv0RFySzBkZu0awDbRkFrT+htLrw1W2JbnNS3H
XvdV+rwK+MSQmQFUpsws/fj25SVZttVhd+zIp/gqz2WWmRUls2sG7dUCVqa/
GTNruKAClW7CmWdmNkI1MrbgNtuD1uV3xIgwW7IV8fbSSV+afGY2rYksZjYg
Z+MCbcbdvyczy7/k78nMMqskzYTan0ymUExL6Ejm/FbKl2pSef0iVo59mdli
/yqtsNLnVdoy0n1hsVhbIIpn5vXrVv1g5g57ChufyzriffP6eXLSNj6e2S5P
ZK8WsDL9zZjZSCfo2r+1ID93Z2bGD2a2onyrmbk9SU84y2Bm2ynXfqv/fjDz
1y/f7Pf2Kt/UjksDHk9oYqOsg5nzGyrf7FUyu89iORodM0dFr33/QRkzG9fB
TswsKoeWyuSfSObdJfpRZn2s5B/lzGzU/mIrQ21Pjnjejk9K5cqBNeFiMzTc
GkDb62+vFrAy/T3WALKRRftmqDg2bv3S8u7t6107d7wvzFdZxcwdKaWiJctY
f2dj+WI8bCMzG5VvfC9zzGxSgt2Y2e5rAPmns4cIfWPMLPb6wKHlizGz9BsN
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
XymzrS3WNWpzzAwlAw3DD3mL7axUPOyeDOyOEJ8MRZqSHD9iuK+H+8CpU0L2
7slEU6PB+/bp3qd3NzQdmwWlCWc0Y4D/MJeBTq9fPWNOkNESufb83CSq2MSR
dfW3LzOb5mHMTIrXRiIyTSw4nE3Fo7nAzCETg0HprLVZNzU31W/ZHAtPDfUh
OwVURpfB09m6ZWNlRYnRm5fC97nTwydjJIJtSLqyc96ETp5Ar4Npgzg+zJit
1Csp/ujt5enp4TbE1yd00sSamirGwPhw4cI5EPKgQR4eHm7Hjh158uRRQMBI
Hx8vpNjYaFoVyP5COXTv3rVH966TQiaAVNlGdmwbDXzemZkRGDAShBC5Yd2L
50+J3ml7ujevX06ZPAkAP9jHa8P6tVWV5boLO5CZZZOzfFmVUDiWx6wDdAJT
lURQUPKQk9S0RGDJ0WMHr9+4XF5RnJv3bu++nVDsCYmbX71+SrWtqi7bt38n
nDL/AL+gMQGjg/zHBAeETQ9dvGRe/LYtuTlZ+v1S7MDMxnlsZ2a14V5zDmJm
NqujHZgYWSVFcXGxERGzAvxHdOv6V7++vdFKrBeoI2CwGhpr1qxdDrEfN3bM
xw+F2oFpeMqexiSqHBjgOcgFMIxRr+KmjNCbgNv6Bi0wQ29cv3ZJG2vh75eW
nsRb/GtXL1Ks3dMnD/TvE7k960hNNTbUZGxPGeLrhZxAdOZn0RiEtoT/DgsO
k3Hq5FF2PqxamJule4FYvLzdwMyQFtYy/CQYbyjVhpypFlgC3zx7/giSNmVq
CKSxjduqDv4abY6hEZaKaNdK696NUpuw7S/YvSDGJaXvASEPH90t+lhAkLBq
5dLevXp4uLsWFuRp1K18VVmt6MtW7hgpfhQzJFYJIM0up8+skDbxvb9+JDFV
KZFBukC7MDOL1eH7saa2YteuTBhHiCWGsFpwCVW6eebMzAwnp769e/ecMWO6
dhpKAGC14BWSZLJAHXZymUqIACGapWKhkBcumAMvtXevbrt3ZbDZPIqtheTv
2b0DYLB82SJ21oPG8EAT1nos9kMtLFFE+RgLvjDynq6PHt5ldkdOd/D9YvBZ
mGfekZGKW7At+Gx/z+IIm2igwzlLRG1LjQxsPnRwL3phyeL5sTEbVixf7D/S
z6lfL6hB4DGbw6T2v3jhjLeXO77PzXlLukjD9vbkzqRjid1RbJLZuvo7mpnr
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
fmpoqDt16gRw2qlfH3c3l8ePHnDnknyh0/0IWUHm9FObgFulJUX79u4GNvTt
02va1Ml3bt9kVyllZtPYAJ6Z9fXpBMxsViFo2r4olS4JfjObeJ2JBGYOmx4K
EUpM2gIaoTVWhBmvX7+cOzcCBAWjD70HxUuHRhEAQNhAVtrjzgXJoaB0RePX
aJ+Nb52ZCSnhuh44uCcpKeHJk0fkUyxbuviXf/3zXz//pFviJ0S16W6NBp8U
Ms5rkNuE8WPJb6U1gKxA1l9sPpPin11c+3fr/gfsYJsQ34ufXr56evDAnuAx
gXCr4XTDaMLLhurev2/X1WvaI1zRZeEzpvzX//Kfhg7xBhC2cjuhQRKAlCP9
/QJHDWdLC+/euUF7zeEnWkVI6gXaEj573z7de/bo4ubuDGrdf2D38ROHT50+
evLUkRMnj+Dfo8cOzo4IHzbc13lgP5/BnvwcMoszAWxfunw2PmFTxJxwEAU+
w91gQch8zqbmOjzvX11+O3R4H6HFhYtnZs2ejmuBx81N9dCfMGRHDu8fExTg
O3hQQuJmoDibEEYN8RRD/XwA/2pN+yYtyUnbhvh6/fH7z4N9PNk7U9yOTofJ
2JE6YWLw5CkTZ8yciie6/+AWMFgjbGmifffXXIdxgZrQLDpKRmXw4AcP7UUj
IB07fuje/Zv1DdXUiSz6RUwndHKmdXT5ZnUjz2ZmfxKrnr2YWW0Yh6/1Getq
Vq9e2adPr9mzZ8Iv1uj2WtEI+w1eunRhyJDBwGlYycGDvSdNmpiZmXH48EEM
kMNH9gOb4UhujItCrfiQCf6FBVxIjAhkw2B8cP/2xw/5BfnZG9avht13d3OG
U6zmjs8ALXh6uKxdswJczQIzPrzPQ/7x44LwKzBg3Pgg7bbtZ4/DReUX5Wna
9Ht5AeT+/OMXAHncxiixphb7V4yZt27ZePPGFb4oaWX71YFZbWKzGAfOnTMD
jQ/PGl7A6VPH0tOSgkb7h0+fcuvmVT5+A38fPrjj6tIfWkjbHXSAne6Y8rNn
TtCJS2HTtO8WoaPmRIS/fPGE3UUtfo6e1fXvGGam13N2Z+Y2thkXF2ukn9MT
XrJQAAasHpp0y+ZY/YtCLuilTXeY47GjB9F3UPK+Q7w8B7kMGeo9Jjhg1epl
GBGVVSXMDu7ZuyMlNQEoSwv0VDqqATeOHxfc36mvy8ABOzMzCGUpCoLinJET
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
X1tbUwWfTY318Nnc1FBfV/MlMX6e35w9kbs6ggnyTic4wfEa4OvBg/utra2G
DBmMvuZQFw2gO2/eXJsRw1xdnEDgd8EiGhGd3Dg/ffrYyclh9eqVUBIXFyc3
N5dJkyYcOnSwurqSY9y7BQRsgV8hrVmzirYl1tZWUzg/+ArlvHjh3Ngx7kDp
UQf3t7e1sM70Xr18PtrO1sHebuGCeZ8+xqkkw3DLZObiogKGmfm3w6xfekKS
30q1INk0Ztb8kSRYJqMdMie4XFbzMdzz83JW+C8bMXzoPD/f8rIi8ieJGT59
fAcdHJLGr44QjJvvOOb6mvtRzMz2VnNyClXdg5hZbBKURpoem5RiNtPk9xxm
7pn1Y/H618mp27Mo6TKzbs4+ZtZb/7rvQiI/ZwwzmzPUWO5dsEE0OCHwHJ4k
xxr0vGgyQQyMeciCkYw0Fi32Gz7CamvARrwcMQ8zk+YqMyP17p0bvrOmB+0I
KC7K65ig+cxaws15oVovy/wWjqmuttKizMz6M8G6unzpnPWQgcDMjx7fxcph
3xfpmW1tbaKjD8PXixfPe3i4ubu5XLt6GdLVK5euX7sC6d7d2/fv3Xn86MHG
DesWzPd7+eLZd94VhprxUFdRUQbQO2LEMCDwhw/vs1bQsbHRAMyjbG2eP3uC
hEN+J1CHXF5eeuTIoZkzfYqKCu7cuQW0PHHieF/fmU1NDYjK+An87O09CYAZ
Cnn4cBRqqktKiq5evfzp0wdSXEPBsrMylixeOGni+L17diMz42Y9IP8njx96
uLu6uTpv3bIpJzvzu+D0w4TgJlrMHH3kkF5mNr8Xm59Ma7Gm2WlQ2yYMbmqs
zc/LKinOb6ivFqydVSnJX6AtDR9mvWXzeugaaobP4Ss03fGe7pMmjtu/bzed
FzqOccws6832Bntmlqb4CpGiZXoXeplK2RlcN0m0+R7FQvLvazLFmSxfEU7+
geX/meSL9S8Y34CZb9+6Rn3tu7qV9My6vUwMnsU6o8ndU2bXlmMrInptN05t
Kh1mbm9ritwdFhqyQ4uZOUlyFvtJ7ClkVbV5z2VU7RHldmiG1e1trY3Tp3kP
GzoI46FgHjS3QBKGCTcvN9N/+WLIBvBZWVHS2tLQ2FDT2FTDhvMgt3VKvS+l
5hF4ufCWkZmNaPwi5dE9j5suVYzPvdqaihk+U0baDlvuv7iisljFW5tT/ubm
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
QS9fPVEJOzQJpwGhV6xcsmnzWoTk0NBgH59pb9+9BKgmOfzfBFxBQV6/fn/8
8cdvzs6OwLRoeNzc3Hj27OlZs2bs3h3R0tJEZhvbtgUADI8bN2bZsiWAjsDV
06dPBWC2t7eDg8mTvYBgp0zxhgTHgMru7q4TJ44/c+YUbjyEYkydOhmw+enT
x/X1taiNRHdzCxfM+/OP3wCbN25Y19baTH6bWWYGCXV1Nbdv3wQJvr4z7exs
ocyTJk3YtSsclwAs0CrIzLgH0HxmNvoqkV8NjmPGui6UkKlGFbEgh7wFsneB
Vtfa1tDa2lxZWQ7LLmgw8DrgjaM+WYPK/D6IpsZa6CbZWWm5ORlwzIN0O+M7
RT8DG7vW0NRGHzObfRfz7yvnWjl5usyDMv5K1lUyG5Cpc6Yv/T0TtgQJZpYv
xKheJr+Hdn+vV7YMunWlMpKZ9Va1RL+2dEKHujgzqoQdbUE7A4ZaDxo0sF9y
UjwpmjA/5mxsqpnrN8vBcZSbu6MYM4NYwDZ3D+fxE8YkJH7Eh+qlsbM5pgUC
M0cfOYixs3V/Nb+lkcc29mRhUc7GjeuBaSkPVDsbkHHJ0vlTp3mVlRfBhTNn
+nh5TVy/YVVySjxGGEGBwJkZGWmDBw/89ddf+vfvd+fOLaTNL18SvL0nzZ49
6/z5s7jlDfXMV65cAuiF80ePxkC2kpIiW1sbNzeXmJgjRUUF8LWsrAQPCgvz
4XPt2tWLFi3Iy8tBxa+f3xxHR/tp06Zs2LAOThISAy+9e/v6t3//a9DA/vP8
5lRVlqMbOnSjgVFavgve5IDngfOvXbsCcoCZPT3HhoeHcoyps5keM/qYWa9k
Wq+phQieKn6lBhQNbQy686dPHx48uAeroaSkRNz4ibOMxo6rtbGwIOfB/duR
u8M2bVwbGrIjIf5Dc1Ndx58awlvWd+s+ZlZ+zpI/5ij7LObkYedB+XUiPXXq
/vrDga0v/fCELQGZ+d79WyquCzOLXSIhSmaP1m3DPZmZzSmJ3trr+KkXMjPe
BbkLd5CRJUBI6PYhVgP++P2XxISPmuoS2o9aCFcxc9Y0qyH9nZztJJj5xcsn
kAFwrvd6ZmYTMfPhQ/tzcjPY5+WUY2ZOABX8FwAp6N37l8CuYWEhKsHOmUxl
ON5FxuIl86ZMnVhRWQy/AqxOmOA53cd72/bNBYU5aHWDV8HXAQP+6tfvD2Bm
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
5iRDAkwtrfW+s31c3RziEz6ohT1Eat6iA36Fmvnw8W1o2A5nl9HAzF+SPtfV
VyV++fQ5Pg6OUS+t7tl65hgLMzNtuaK31txSt3jJPGen0RvWry4vK2LVd3DQ
0FhTUJgTHLJtwcI5sEiBJfMkL08Hx1FAmNbWVlZWg4CQIf3115+//fYrpN9/
//eAAX8NHTrk7dvXaEcByHr69ElA3IMH9+fmZjc2/v/svfdTVMvX6P0/vPXU
rbpVz1tv3fvDvc9z7/me5yTzMR1zQBGzYs45h2OOmMggGTELCGLGnLMiqJjI
IBnJWWbGd82s2U3PTtM7DAweqlZNzezpvbp3x0+vvbq7pra2OjMzff9+D2Dm
BQvmPXnyiGAhMeq+fv0KIBwEOPbDh1Q0WaPvB6LmixfPdu7cDjpBldnUXFPV
2FD3+dOHE8ePTgWYnzgeGCz/Sy7cBarMx4JblgTu2bMLnUPgs7GxvqqqoqLi
KyR1yZJFwOcgkE5IJKQZBE3N+tqZQbIy09Fbgz68W6l+FnJmp2WRPsHBzIwz
FxCoDImJVxYvXrhl898pyUnoeGZdFWhZ8wtN+Ez08c1bNnwtL4KquHPX1mnT
J4WEBuCSB/hsbKi5e+fG4kXzfLwPlhTno0+X8q6svezM+jAzHVJxz9PB9UtF
p7031qvX1VF0YWZ59nME03ZE/Xazy/69ncysKi51ItSPZ2dHx5ysq68ku6Vh
YDxlT3VqHZLDzHlit6TIHnHN3+o+p6XOmDl1xMjBr5NfkK3niCU5Lj560uRx
o12HQ4Axbi4w1J5LiJ07byZcXL1mOdxupAytRl3Xj+hV4kc4ZrZbRupiQUcX
fHyyDBPmFFs2b1i6ZMHZ2NOPHt4tKy0EeC4u+gKfz1888g/w3rptY9TRcGCY
Bw/vrFq9FLJ0ypRJbm6uI0YMGzRowMCBf+Fhf8C348a5AaACAmVnZ6IFGD0Q
zp2Lg37Dx8cLWBcYde/e3Rs3rgdATQZM4szLZGcM+JKa+nbChHGgHKJIS/uE
YciZJkibwNKhocGRkeEnThx78fzpwwf3tm3dvGb1ynVrV0eEhwIwIzfev38X
UgvADEi8cuVy4hddWJgfGxt95EjEjh3bIBZ4BAgD6ffw2BMdffru3du447RR
lb+xzS2UP3NM9OmC/Dz0zSDMrAWYdWdmLbSsiJmxIJqbG58/f/r33xs2b9r4
7OljQrw4Z4T6CZVz+45N4RHBMCOGGvj+Qwrw89+b1lWUl5gsvlvQWE6fOrZj
++ZbNxNx+YND1wC2PTMr6EP0s2f+kPp/DFHKzErpUSlz/kP0C/PTfj5b7CHI
zInXLhptmVmk/utKvyZjo0Jh5Tp9WVEvEcaIawBpVjRyG0GoeBalsSvVw55L
dvRYelEDtydV/LkYl1FDJ08Z//HTW+JjYORQEHBu/ARXs+fABFe3saPGjhuN
XyZOcgPqM1EbrBG1ji5HpSUeGRES4O/tOGY2WdwtyAmA5Azxz59Svb0OhIUe
Pnhg76mTR0+eiIqJPglffLwPhocFxcSerKr+iqa/1PcpANLAvbdv37x37w4I
fAEuBcjEnw8f3v/8+SPSIHo1oIn4/ft3wKggp06dCAsLgbsQhsl5fOQ7fCkv
LwsI8Fu9euXatavxRD8j54eMe2jg99zcbCDnjIy06DOnjh09EgRd09XLaZ8/
km3l4K6vX0u9vT1Bz9Kli4HYkSEbG+uTkl4CQi9btmTVqhUA+fC5YsUyEPiy
YcM6wHvcjgPj0sK09Jkmly9frK+vlaTr9mZm7bQsdaAJT0iJm91pSoqgSmzd
sikk+HBmxqfyr8VAwo0NNTBZzsnNgLrnsW8nTNbwjVJNbcWNm1e3bf/74oV4
qLTJr1/ExpzatXMr1NXKilJ0K1Ilncz84+v/MYSF33jhnYE5O7p+u3neycxa
mFMHEWxCgmsA37xNMnKbThipzZn1Tb92Pey5ZDekgVvfB1R8JCoMSBjGUHqH
PfwO/54+cyzwsE9AoM/hID9fP08f30P+Ad5+/l4hoQEZmZ9oV17UrNc5gLqI
iWJmIAeTY5iZNssTO7M5G1saa2sqKspLrlw+H33mBHDIufiY8wlnryVeAoAH
YDZxG25gHtInWSPHom8wsQbjtm94hWxqge4QwMM1NVWI06iB7JhB64EwZWUl
AFSoB4OR7Z0JauKV6qoKEPTQIBsvmDjMBkwtLS0GIavtELxBeXFxIXwCV4NA
dOQTEkn8QFjW6LEw8/HjR2/cuEZf1GEju47JzMQ3A+dTMC2KiT7t4+0ZdNgv
Pi765YsnAMNPnz08lxALbflM9PHColwyyYXvANL+fl57dm/32LvT1+fQ/Xu3
6uuqoHICaZukFx7KivMyMztGqvad6ND6HS1Szh5S7iWOTo9SZjYyY6R84I6u
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
LwjQ3FSXmfFpn8cutzEuHnt35mSn48JDYgslKGigPCo1Cq+q2H1GGWb28/WM
O3sG5wLWEwAlJjLydVIqqWT9IzH01dVXAuKOGD4YpiGQXfV1VSbOmbmpuba6
pvzS5YS582YePRbR2GTOxkOeHouXzF+9ZjnQMh4OWN9QDUog2GjX4X/27jZt
+qQnTx9ALIUFud5eBxYumBMfFw3EiPZegFL4Diw6fvxYIFuAHyBbcsAfWaYH
GPO1rCTp1YtZM6cPHTIIsPn6tat5udlohExJTtq+bcv8+XNfv34FoIVuzHBv
Rkaap+fBWbNmLFq0ID7+LK43fP/+HQDzX3/169u3NzA22ZguOTlp9uyZK1cu
f/HiGTksu6Li66VLF1xdRw0Y0H/Pnl319bX0ptA6MjMD5erPzPJzbX2ZWWhn
trFCc4GhntTV1Xz4kHr8+NGjR488uH8Xt0wBSfv8EUoZZr4B/t4NjdU3byW6
jR0FdWzz5r+fPHlE1pM2NtQ9f/ZkxnT3iRPcTp6IMnG7XAqbjCI7szC1bU/L
SkUdE3bqb1v9jqo5YrRsvZc3ykj5CqIeXdBX3Y2OKxqjrswsE0woMDJ2OGZm
SaHSgtPChFYNmplZ5i6T2J7VjqBlLXnCwswmem3g95YveVmjRw3v1vW3p88e
0rvGIQ+XlhU+uH97z+7t48aOHuUy7H1qSvnX4hfPH9+/d+vR47tG7hQ8I7UC
ThfRkZl9fQ6di48h5mXdmZnsUI07XRgspuZPn1NhfrFi+WJA3JcvniS9egb5
VlFZ+uHjG2jva9au8PP3wu2s4d7snPSoo+GhYYFv3ialvk9JTnn5OvlF4rWL
02dMmTDRDYCZnBsIBVdWWhgc5L950/p9+/YmJb189eoFkCqA65o1qzZt2hgR
EQa8RLaAM1r2o8MX9LU1VRfOnwvw9129asX0aVNnzpi2ZMkiuPHr11Kk68+f
Px48uN/b2zMhIf7duzdv36aA+EP41SvXrVtz48Y1ovP27ZtDhw7u1q1Lnz5/
zpw5HSEWyBlg+8qVS9u2bQkPD/306QPQcmFh/v37d3ft2uHiMgKUAEsTGm9L
ZlZK0c7AzGL1UJyZ6fA47YVsh4KbPHkiSGCAn8FCwnW11RcvJEyaOH7e3JkX
L8RDjSoozPH2OThp8rjQ0OCSkiLr2eiGb7k5Wb4+Xj17dJs00e3hgzuMTk2M
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
hup/AjOrI0+ZctFajoJ/tTAhS8rZ08/VNNkRzWHpl38cxuvyqVWaHrvsxI6s
ejGzUv0OBWmHimTKLSP41SsXgg77yT+a6pFdF2a2uoWIqbVL2m0vkr23Tsws
OSgIG3J7Z4WUWM/4w6ewOPqy1CUnEak+RKqqR0SGnD5zrLqm3ETtfGLXzsye
mHbPEHERY2ZFu0M4m/wTmFmKN1iYmQfDrfdSOvFf4XWTBmZWJ1zyHOKbYXQY
M8uEYYlR3l9FOHhpTzkjM1M1Ta4PtMvMqnNe/nHs6teXme0iq2qmlR8vtDOz
cEx03hFKXTodycws+SwT0iYWVcysNN/U9roCPbZtqnW8sHRN5BPXAHoe2kfv
myH0fxaKpBXFyZhZJn+M3BI/eulZRxGZObVo+LDww4DNBYU5ZK82Fpdm9sS0
e4aIyz+emaU5U1yYiJrKYSdkZhqJrW5Isq/+FTKzUmkjZuatAaSfUWmrEb1F
JgOV6rfLzPRFdcysKP0if2lmZi35w6iHUb8wqXZjlHp3afc6+Zflot3Y9dLP
AurOIOzpxJqZePVicJC/KAO0qlKyBpC9gGQSbBOL2DmPoiFVUIddPdr1yzMz
vT8zi351uy60vchXURxhGee/TiUyzCx6HYD5bNyZuvpKsmtWp29GB2VmsjUH
pr+oMN8ZmNlErTtrR2YW78aJxUDg1dxezKyXb4YtOfNbri7MJiOqmVk0Q6Qy
SjRSKTBWmh5xPfaYmf2iXvnvaP0ojGwsdV2pED3yydCu3zkHd1G2Z6oMssws
FZ6FiBSxEB1Sph3J69ROHToyIV8zNSLQJmV1zMyeHn2pTK/8IR0vvSyuHZuV
fKuXDy+jh1wHZo6OOVlRWWq+bqFleceM9soHnUWamZ1kDaDzM7NIGJv2KHLd
Ycws5FhxvqLxGH9CtSc7adCNpSMys3DTXaXM7GiWkxdFzCzsi/RlZvGHotLD
+MhS8Tp0zqKjfpmhx3HMbKDsw/KJ0a7f+ZlZvkRsCr2TmWU1OJqZvzXX68XM
ou/RnJOZSUHjuPmtpUHHM69ViPaeQUoPXj9+IjI4xD8z67MVJyxzJRk7cztm
hZ5ij5nbfa+5H5KZjY7BZhZmxltIzef5ZtA/aZuzRmam9otmZWbbVqaPnZl+
A6u0pWhBL6W9h+PGOO3P+2P0h4rIR/72H0B0zExRberSIPxXGFJqfMdmzuLP
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
x6gXn1/Xoa1rfX5g+az9FfOuPdFR299nvh1WZuZPVvTXYpqvpay/mg7i+1HI
eN7pjU217R3N2VnviovyurvaWLwjQHJXZ2tG+uu3b1LxmZ72KjXlRcrr589f
PE7PeJWdkynj4mBTaeSsjtKWBS6cHeBTV19FxtHwCZbBJIEe3mdwCfpmCN+O
+Oer3PuVZ4BIFCYnxUXv7GptaW3IzcvJy8/J+fj+c25WUXFeR2czO4ssZVgo
GW9ep6S+wNNBQrVfv3qGz7TUl2mpr2trqtBhaItAtq/f16/d7e2tnz7l5ORk
IX1TwLBMsfcQfw8UIHdnR1vFl7LPn3KQsj5kZme9z8x8W1iY39LSJOX2xVbf
o4R2F8K/+fm5GRlp1AlxnO3XySCWzu3u7qT8+FJdXVleXlpcXFhSUoRP2mKb
bS0q1bQRBr9MAWZmX/h7mkj747R+zKwrdbMRreKPIdW+jZ3Gg9qSrvxDvU4Z
s5QmQpXB0Hi7mdBWkopnQXvlyKTcRtu9UtpJ55tiF0j6l21oonEfwH8HZtYo
NPg0ojId/W/CzBqPq5+un1QfUOALP6lBapPBlybcPoMpU7+zREoPPVr7RzFz
1I6tfH9m9RH6ZxrCJBlxZtbUhYSYWZnUdRAXm5q9j8CR+oaq5Ed3k25eDVy2
CMZXS3M9Pxrz82ePZvl4OM+0d3F2mOlkZ29nZWdraWdvaWNrHrIikPmKszAp
SA+T706dZuDq5lRbV8n3zdDYjPyfI5w0Xl3Z4NqZWYxA0Elo9PUozvSgg4TE
3T1tWdnv0KT79u86dHgvPvfsjcXnvfs3KypLYOmw4DBgaZ9Z7oZTDSZPGY/2
nz5t0ozpk60sTR3srT3cXa9cTlTul027YHd3lipY9O7d2xs3bliyZFFoaAj4
uZcDIcJm2v0N31Nevzx9Kv5UQtz+fXvQ4Xds34ZTtm6NuHbtSm1ttYTbd1vC
7Z1NnwTAYPLVq8NCQoLZhoN8VGYQS7tmIz9o+fnzp8nJDy5cOHfx4vlTp+Lj
4k68fv2yqqoCEM5QmTYWHCpmlmnKMNzMzAavSB9mqRZm1sbPOiOQYiyzJWnk
gqV4famEYeJe2p+ReJhhsxyMFXjch9C8n7QZ5b8zM2uTEsJyafBpuJlZW51F
Cl6NAnOQUl18q+pa8yFUOnropkE2kX4niu9F2qo6tP1Tj1Em/ZOZf3SSjDgz
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
F5A=
    "], {{0, 246.}, {478., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{478., 246.},
  PlotRange->{{0, 478.}, {0, 246.}}]], "Input",ExpressionUUID->"4d0483d5-1b10-\
4997-80f3-65331de41f84"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"B0x", ",", "B0y", ",", "B0z"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fstates", "=", 
   RowBox[{"SolveStates", "[", 
    RowBox[{"13", ",", 
     RowBox[{"1", "/", "2"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fstates", "=", 
   RowBox[{"ShiftedLevels", "[", "fstates", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"energies", "=", 
   RowBox[{"First", "/@", "fstates"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"EnergyLevelDiagram", "[", 
  RowBox[{"fstates", ",", 
   RowBox[{
   "\"\<Title\>\"", "->", 
    "\"\<Energy Level Diagram of \!\(\*SuperscriptBox[\(Yb\), \(\(3\)\(+\)\)]\
\):\!\(\*SubscriptBox[\(Y\), \(2\)]\)\!\(\*SubscriptBox[\(SiO\), \
\(4\)]\)\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.868283776594784*^9, 3.868283777281296*^9}, {
  3.868284417571608*^9, 3.86828444247787*^9}, {3.868284488468992*^9, 
  3.868284489670035*^9}, {3.868285640115612*^9, 3.868285652289023*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"73fcbc6e-edf8-4838-8982-ab8f4a5bd05a"],

Cell[BoxData[
 DynamicModuleBox[{qlanth`dragging$$ = False, qlanth`first$$, qlanth`second$$,
   qlanth`rx1$$ = -2.842170943040401*^-14, qlanth`rx2$$ = 10852.229817299165`,
   qlanth`ry1$$ = 0., qlanth`ry2$$ = 1., 
  qlanth`range$$ = {{-2.842170943040401*^-14, 10852.229817299165`}, {0., 
  1.}}}, 
  PanelBox[
   TagBox[
    DynamicBox[ToBoxes[
      Graphics[
       If[qlanth`dragging$$, {{{}, {{{}, {}, 
            Tooltip[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.011000000000000001`], 
               AbsoluteThickness[1.6], FontFamily -> "Arial", 
               GrayLevel[0]], 
              
              Line[{{10852.229817299165`, 0.}, {10852.229817299165`, 1.}, {
               10852.229817299165`, 1.}}]}, {
              Quantity[1.3455049562810304`, "Electronvolts"], 
              Quantity[10852.229817299165`, "Centimeters"^(-1)]}], 
            Tooltip[{
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[0.011000000000000001`], 
               AbsoluteThickness[1.6], FontFamily -> "Arial", 
               GrayLevel[0]], 
              
              Line[{{10852.222791524826`, 0.}, {10852.222791524826`, 1.}, {
               10852.222791524826`, 1.}}]}, {
              Quantity[1.3455040851960687`, "Electronvolts"], 
              Quantity[10852.222791524826`, "Centimeters"^(-1)]}], 
            Tooltip[{
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[0.011000000000000001`], 
               AbsoluteThickness[1.6], FontFamily -> "Arial", 
               GrayLevel[0]], 
              
              Line[{{10852.192092352725`, 0.}, {10852.192092352725`, 1.}, {
               10852.192092352725`, 1.}}]}, {
              Quantity[1.3455002789839896`, "Electronvolts"], 
              Quantity[10852.192092352725`, "Centimeters"^(-1)]}], 
            Tooltip[{
              Hue[0.37820393249936934`, 0.6, 0.6], 
              Directive[
               PointSize[0.011000000000000001`], 
               AbsoluteThickness[1.6], FontFamily -> "Arial", 
               GrayLevel[0]], 
              
              Line[{{10852.190213426431`, 0.}, {10852.190213426431`, 1.}, {
               10852.190213426431`, 1.}}]}, {
              Quantity[1.3455000460268294`, "Electronvolts"], 
              Quantity[10852.190213426431`, "Centimeters"^(-1)]}], 
            Tooltip[{
              Hue[0.6142719099991583, 0.6, 0.6], 
              Directive[
               PointSize[0.011000000000000001`], 
               AbsoluteThickness[1.6], FontFamily -> "Arial", 
               GrayLevel[0]], 
              
              Line[{{10653.16244614757, 0.}, {10653.16244614757, 1.}, {
               10653.16244614757, 1.}}]}, {
              Quantity[1.320823748913735, "Electronvolts"], 
              Quantity[10653.16244614757, "Centimeters"^(-1)]}], 
            Tooltip[{
              Hue[0.8503398874989481, 0.6, 0.6], 
              Directive[
               PointSize[0.011000000000000001`], 
               AbsoluteThickness[1.6], FontFamily -> "Arial", 
               GrayLevel[0]], 
              
              Line[{{10653.155410860338`, 0.}, {10653.155410860338`, 1.}, {
               10653.155410860338`, 1.}}]}, {
              Quantity[1.320822876649325, "Electronvolts"], 
              Quantity[10653.155410860338`, "Centimeters"^(-1)]}], 
            Tooltip[{
              Hue[0.08640786499873876, 0.6, 0.6], 
              Directive[
               PointSize[0.011000000000000001`], 
               AbsoluteThickness[1.6], FontFamily -> "Arial", 
               GrayLevel[0]], 
              
              Line[{{10653.131503798668`, 0.}, {10653.131503798668`, 1.}, {
               10653.131503798668`, 1.}}]}, {
              Quantity[1.3208199125515765`, "Electronvolts"], 
              Quantity[10653.131503798668`, "Centimeters"^(-1)]}], 
            Tooltip[{
              Hue[0.3224758424985268, 0.6, 0.6], 
              Directive[
               PointSize[0.011000000000000001`], 
               AbsoluteThickness[1.6], FontFamily -> "Arial", 
               GrayLevel[0]], 
              
              Line[{{10653.12476642664, 0.}, {10653.12476642664, 1.}, {
               10653.12476642664, 1.}}]}, {
              Quantity[1.3208190772239425`, "Electronvolts"], 
              Quantity[10653.12476642664, "Centimeters"^(-1)]}], 
            Tooltip[{
              Hue[0.5585438199983166, 0.6, 0.6], 
              Directive[
               PointSize[0.011000000000000001`], 
               AbsoluteThickness[1.6], FontFamily -> "Arial", 
               GrayLevel[0]], 
              
              Line[{{10180.78287677533, 0.}, {10180.78287677533, 1.}, {
               10180.78287677533, 1.}}]}, {
              Quantity[1.2622561492096562`, "Electronvolts"], 
              Quantity[10180.78287677533, "Centimeters"^(-1)]}], 
            Tooltip[{
              Hue[0.7946117974981064, 0.6, 0.6], 
              Directive[
               PointSize[0.011000000000000001`], 
               AbsoluteThickness[1.6], FontFamily -> "Arial", 
               GrayLevel[0]], 
              
              Line[{{10180.759980009048`, 0.}, {10180.759980009048`, 1.}, {
               10180.759980009048`, 1.}}]}, {
              Quantity[1.2622533103725662`, "Electronvolts"], 
              Quantity[10180.759980009048`, "Centimeters"^(-1)]}], 
            Tooltip[{
              Hue[0.030679774997896203`, 0.6, 0.6], 
              Directive[
               PointSize[0.011000000000000001`], 
               AbsoluteThickness[1.6], FontFamily -> "Arial", 
               GrayLevel[0]], 
              
              Line[{{10180.749490526947`, 0.}, {10180.749490526947`, 1.}, {
               10180.749490526947`, 1.}}]}, {
              Quantity[1.2622520098425927`, "Electronvolts"], 
              Quantity[10180.749490526947`, "Centimeters"^(-1)]}], 
            Tooltip[{
              Hue[0.266747752497686, 0.6, 0.6], 
              Directive[
               PointSize[0.011000000000000001`], 
               AbsoluteThickness[1.6], FontFamily -> "Arial", 
               GrayLevel[0]], 
              
              Line[{{10180.741350496653`, 0.}, {10180.741350496653`, 1.}, {
               10180.741350496653`, 1.}}]}, {
              Quantity[1.2622510006075056`, "Electronvolts"], 
              Quantity[10180.741350496653`, "Centimeters"^(-1)]}], 
            Tooltip[{
              Hue[0.5028157299974758, 0.6, 0.6], 
              Directive[
               PointSize[0.011000000000000001`], 
               AbsoluteThickness[1.6], FontFamily -> "Arial", 
               GrayLevel[0]], 
              Line[{{0., 0.}, {0., 1.}, {0., 1.}}]}, {
              Quantity[0., "Electronvolts"], 
              Quantity[0., "Centimeters"^(-1)]}], 
            Tooltip[{
              Hue[0.7388837074972656, 0.6, 0.6], 
              Directive[
               PointSize[0.011000000000000001`], 
               AbsoluteThickness[1.6], FontFamily -> "Arial", 
               GrayLevel[0]], 
              
              Line[{{0.0001728929637465626, 0.}, {0.0001728929637465626, 
               1.}, {0.0001728929637465626, 1.}}]}, {
              Quantity[2.1435994587609237`*^-8, "Electronvolts"], 
              Quantity[0.0001728929637465626, "Centimeters"^(-1)]}], 
            Tooltip[{
              Hue[0.9749516849970554, 0.6, 0.6], 
              Directive[
               PointSize[0.011000000000000001`], 
               AbsoluteThickness[1.6], FontFamily -> "Arial", 
               GrayLevel[0]], 
              
              Line[{{0.021904148536123103`, 0.}, {0.021904148536123103`, 
               1.}, {0.021904148536123103`, 1.}}]}, {
              Quantity[2.715768179871107*^-6, "Electronvolts"], 
              Quantity[0.021904148536123103`, "Centimeters"^(-1)]}], 
            Tooltip[{
              Hue[0.21101966249684523`, 0.6, 0.6], 
              Directive[
               PointSize[0.011000000000000001`], 
               AbsoluteThickness[1.6], FontFamily -> "Arial", 
               GrayLevel[0]], 
              Line[{{0.025400655890734924`, 0.}, {0.025400655890734924`, 
               1.}, {0.025400655890734924`, 1.}}]}, {
              Quantity[3.1492798225939598`*^-6, "Electronvolts"], 
              Quantity[0.025400655890734924`, "Centimeters"^(-1)]}], 
            Tooltip[{
              Hue[0.44708763999663503`, 0.6, 0.6], 
              Directive[
               PointSize[0.011000000000000001`], 
               AbsoluteThickness[1.6], FontFamily -> "Arial", 
               GrayLevel[0]], 
              
              Line[{{243.3386669508809, 0.}, {243.3386669508809, 1.}, {
               243.3386669508809, 1.}}]}, {
              Quantity[0.030170148250575277`, "Electronvolts"], 
              Quantity[243.3386669508809, "Centimeters"^(-1)]}], 
            Tooltip[{
              Hue[0.6831556174964248, 0.6, 0.6], 
              Directive[
               PointSize[0.011000000000000001`], 
               AbsoluteThickness[1.6], FontFamily -> "Arial", 
               GrayLevel[0]], 
              
              Line[{{243.3438650698181, 0.}, {243.3438650698181, 1.}, {
               243.3438650698181, 1.}}]}, {
              Quantity[0.030170792735156885`, "Electronvolts"], 
              Quantity[243.3438650698181, "Centimeters"^(-1)]}], 
            Tooltip[{
              Hue[0.9192235949962146, 0.6, 0.6], 
              Directive[
               PointSize[0.011000000000000001`], 
               AbsoluteThickness[1.6], FontFamily -> "Arial", 
               GrayLevel[0]], 
              
              Line[{{243.34973922972404`, 0.}, {243.34973922972404`, 1.}, {
               243.34973922972404`, 1.}}]}, {
              Quantity[0.03017152103813245, "Electronvolts"], 
              Quantity[243.34973922972404`, "Centimeters"^(-1)]}], 
            Tooltip[{
              Hue[0.15529157249600445`, 0.6, 0.6], 
              Directive[
               PointSize[0.011000000000000001`], 
               AbsoluteThickness[1.6], FontFamily -> "Arial", 
               GrayLevel[0]], 
              
              Line[{{243.36537448275158`, 0.}, {243.36537448275158`, 1.}, {
               243.36537448275158`, 1.}}]}, {
              Quantity[0.03017345956236161, "Electronvolts"], 
              Quantity[243.36537448275158`, "Centimeters"^(-1)]}], 
            Tooltip[{
              Hue[0.39135954999579425`, 0.6, 0.6], 
              Directive[
               PointSize[0.011000000000000001`], 
               AbsoluteThickness[1.6], FontFamily -> "Arial", 
               GrayLevel[0]], 
              
              Line[{{617.4618081520957, 0.}, {617.4618081520957, 1.}, {
               617.4618081520957, 1.}}]}, {
              Quantity[0.07655550399960617, "Electronvolts"], 
              Quantity[617.4618081520957, "Centimeters"^(-1)]}], 
            Tooltip[{
              Hue[0.6274275274955841, 0.6, 0.6], 
              Directive[
               PointSize[0.011000000000000001`], 
               AbsoluteThickness[1.6], FontFamily -> "Arial", 
               GrayLevel[0]], 
              
              Line[{{617.4624109842844, 0.}, {617.4624109842844, 1.}, {
               617.4624109842844, 1.}}]}, {
              Quantity[0.0765555787412686, "Electronvolts"], 
              Quantity[617.4624109842844, "Centimeters"^(-1)]}], 
            Tooltip[{
              Hue[0.8634955049953739, 0.6, 0.6], 
              Directive[
               PointSize[0.011000000000000001`], 
               AbsoluteThickness[1.6], FontFamily -> "Arial", 
               GrayLevel[0]], 
              
              Line[{{617.4871727486307, 0.}, {617.4871727486307, 1.}, {
               617.4871727486307, 1.}}]}, {
              Quantity[0.07655864880863864, "Electronvolts"], 
              Quantity[617.4871727486307, "Centimeters"^(-1)]}], 
            Tooltip[{
              Hue[0.09956348249516367, 0.6, 0.6], 
              Directive[
               PointSize[0.011000000000000001`], 
               AbsoluteThickness[1.6], FontFamily -> "Arial", 
               GrayLevel[0]], 
              
              Line[{{617.4897888688783, 0.}, {617.4897888688783, 1.}, {
               617.4897888688783, 1.}}]}, {
              Quantity[0.07655897316619636, "Electronvolts"], 
              Quantity[617.4897888688783, "Centimeters"^(-1)]}], 
            Tooltip[{
              Hue[0.3356314599949535, 0.6, 0.6], 
              Directive[
               PointSize[0.011000000000000001`], 
               AbsoluteThickness[1.6], FontFamily -> "Arial", 
               GrayLevel[0]], 
              
              Line[{{791.8607739349609, 0.}, {791.8607739349609, 1.}, {
               791.8607739349609, 1.}}]}, {
              Quantity[0.09817821903436115, "Electronvolts"], 
              Quantity[791.8607739349609, "Centimeters"^(-1)]}], 
            Tooltip[{
              Hue[0.5716994374947433, 0.6, 0.6], 
              Directive[
               PointSize[0.011000000000000001`], 
               AbsoluteThickness[1.6], FontFamily -> "Arial", 
               GrayLevel[0]], 
              
              Line[{{791.8631458187178, 0.}, {791.8631458187178, 1.}, {
               791.8631458187178, 1.}}]}, {
              Quantity[0.09817851311045467, "Electronvolts"], 
              Quantity[791.8631458187178, "Centimeters"^(-1)]}], 
            Tooltip[{
              Hue[0.8077674149945295, 0.6, 0.6], 
              Directive[
               PointSize[0.011000000000000001`], 
               AbsoluteThickness[1.6], FontFamily -> "Arial", 
               GrayLevel[0]], 
              
              Line[{{791.8853182677744, 0.}, {791.8853182677744, 1.}, {
               791.8853182677744, 1.}}]}, {
              Quantity[0.09818126214365806, "Electronvolts"], 
              Quantity[791.8853182677744, "Centimeters"^(-1)]}], 
            Tooltip[{
              Hue[0.04383539249432289, 0.6, 0.6], 
              Directive[
               PointSize[0.011000000000000001`], 
               AbsoluteThickness[1.6], FontFamily -> "Arial", 
               GrayLevel[0]], 
              
              Line[{{791.8882554593379, 0.}, {791.8882554593379, 1.}, {
               791.8882554593379, 1.}}]}, {
              Quantity[0.09818162630898378, "Electronvolts"], 
              Quantity[
              791.8882554593379, "Centimeters"^(-1)]}]}}, {{}, {}}}, 
         ({
          Dashing[Small], 
          Line[{#, {
             First[#2], 
             Last[#]}, #2, {
             First[#], 
             Last[#2]}, #}]}& )[
         qlanth`first$$, qlanth`second$$]}, {{}, {{{}, {}, 
           Tooltip[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], FontFamily -> "Arial", 
              GrayLevel[0]], 
             
             Line[{{10852.229817299165`, 0.}, {10852.229817299165`, 1.}, {
              10852.229817299165`, 1.}}]}, {
             Quantity[1.3455049562810304`, "Electronvolts"], 
             Quantity[10852.229817299165`, "Centimeters"^(-1)]}], 
           Tooltip[{
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], FontFamily -> "Arial", 
              GrayLevel[0]], 
             
             Line[{{10852.222791524826`, 0.}, {10852.222791524826`, 1.}, {
              10852.222791524826`, 1.}}]}, {
             Quantity[1.3455040851960687`, "Electronvolts"], 
             Quantity[10852.222791524826`, "Centimeters"^(-1)]}], 
           Tooltip[{
             Hue[0.1421359549995791, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], FontFamily -> "Arial", 
              GrayLevel[0]], 
             
             Line[{{10852.192092352725`, 0.}, {10852.192092352725`, 1.}, {
              10852.192092352725`, 1.}}]}, {
             Quantity[1.3455002789839896`, "Electronvolts"], 
             Quantity[10852.192092352725`, "Centimeters"^(-1)]}], 
           Tooltip[{
             Hue[0.37820393249936934`, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], FontFamily -> "Arial", 
              GrayLevel[0]], 
             
             Line[{{10852.190213426431`, 0.}, {10852.190213426431`, 1.}, {
              10852.190213426431`, 1.}}]}, {
             Quantity[1.3455000460268294`, "Electronvolts"], 
             Quantity[10852.190213426431`, "Centimeters"^(-1)]}], 
           Tooltip[{
             Hue[0.6142719099991583, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], FontFamily -> "Arial", 
              GrayLevel[0]], 
             
             Line[{{10653.16244614757, 0.}, {10653.16244614757, 1.}, {
              10653.16244614757, 1.}}]}, {
             Quantity[1.320823748913735, "Electronvolts"], 
             Quantity[10653.16244614757, "Centimeters"^(-1)]}], 
           Tooltip[{
             Hue[0.8503398874989481, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], FontFamily -> "Arial", 
              GrayLevel[0]], 
             
             Line[{{10653.155410860338`, 0.}, {10653.155410860338`, 1.}, {
              10653.155410860338`, 1.}}]}, {
             Quantity[1.320822876649325, "Electronvolts"], 
             Quantity[10653.155410860338`, "Centimeters"^(-1)]}], 
           Tooltip[{
             Hue[0.08640786499873876, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], FontFamily -> "Arial", 
              GrayLevel[0]], 
             
             Line[{{10653.131503798668`, 0.}, {10653.131503798668`, 1.}, {
              10653.131503798668`, 1.}}]}, {
             Quantity[1.3208199125515765`, "Electronvolts"], 
             Quantity[10653.131503798668`, "Centimeters"^(-1)]}], 
           Tooltip[{
             Hue[0.3224758424985268, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], FontFamily -> "Arial", 
              GrayLevel[0]], 
             
             Line[{{10653.12476642664, 0.}, {10653.12476642664, 1.}, {
              10653.12476642664, 1.}}]}, {
             Quantity[1.3208190772239425`, "Electronvolts"], 
             Quantity[10653.12476642664, "Centimeters"^(-1)]}], 
           Tooltip[{
             Hue[0.5585438199983166, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], FontFamily -> "Arial", 
              GrayLevel[0]], 
             
             Line[{{10180.78287677533, 0.}, {10180.78287677533, 1.}, {
              10180.78287677533, 1.}}]}, {
             Quantity[1.2622561492096562`, "Electronvolts"], 
             Quantity[10180.78287677533, "Centimeters"^(-1)]}], 
           Tooltip[{
             Hue[0.7946117974981064, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], FontFamily -> "Arial", 
              GrayLevel[0]], 
             
             Line[{{10180.759980009048`, 0.}, {10180.759980009048`, 1.}, {
              10180.759980009048`, 1.}}]}, {
             Quantity[1.2622533103725662`, "Electronvolts"], 
             Quantity[10180.759980009048`, "Centimeters"^(-1)]}], 
           Tooltip[{
             Hue[0.030679774997896203`, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], FontFamily -> "Arial", 
              GrayLevel[0]], 
             
             Line[{{10180.749490526947`, 0.}, {10180.749490526947`, 1.}, {
              10180.749490526947`, 1.}}]}, {
             Quantity[1.2622520098425927`, "Electronvolts"], 
             Quantity[10180.749490526947`, "Centimeters"^(-1)]}], 
           Tooltip[{
             Hue[0.266747752497686, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], FontFamily -> "Arial", 
              GrayLevel[0]], 
             
             Line[{{10180.741350496653`, 0.}, {10180.741350496653`, 1.}, {
              10180.741350496653`, 1.}}]}, {
             Quantity[1.2622510006075056`, "Electronvolts"], 
             Quantity[10180.741350496653`, "Centimeters"^(-1)]}], 
           Tooltip[{
             Hue[0.5028157299974758, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], FontFamily -> "Arial", 
              GrayLevel[0]], 
             Line[{{0., 0.}, {0., 1.}, {0., 1.}}]}, {
             Quantity[0., "Electronvolts"], 
             Quantity[0., "Centimeters"^(-1)]}], 
           Tooltip[{
             Hue[0.7388837074972656, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], FontFamily -> "Arial", 
              GrayLevel[0]], 
             
             Line[{{0.0001728929637465626, 0.}, {0.0001728929637465626, 1.}, {
              0.0001728929637465626, 1.}}]}, {
             Quantity[2.1435994587609237`*^-8, "Electronvolts"], 
             Quantity[0.0001728929637465626, "Centimeters"^(-1)]}], 
           Tooltip[{
             Hue[0.9749516849970554, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], FontFamily -> "Arial", 
              GrayLevel[0]], 
             
             Line[{{0.021904148536123103`, 0.}, {0.021904148536123103`, 1.}, {
              0.021904148536123103`, 1.}}]}, {
             Quantity[2.715768179871107*^-6, "Electronvolts"], 
             Quantity[0.021904148536123103`, "Centimeters"^(-1)]}], 
           Tooltip[{
             Hue[0.21101966249684523`, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], FontFamily -> "Arial", 
              GrayLevel[0]], 
             
             Line[{{0.025400655890734924`, 0.}, {0.025400655890734924`, 1.}, {
              0.025400655890734924`, 1.}}]}, {
             Quantity[3.1492798225939598`*^-6, "Electronvolts"], 
             Quantity[0.025400655890734924`, "Centimeters"^(-1)]}], 
           Tooltip[{
             Hue[0.44708763999663503`, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], FontFamily -> "Arial", 
              GrayLevel[0]], 
             
             Line[{{243.3386669508809, 0.}, {243.3386669508809, 1.}, {
              243.3386669508809, 1.}}]}, {
             Quantity[0.030170148250575277`, "Electronvolts"], 
             Quantity[243.3386669508809, "Centimeters"^(-1)]}], 
           Tooltip[{
             Hue[0.6831556174964248, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], FontFamily -> "Arial", 
              GrayLevel[0]], 
             
             Line[{{243.3438650698181, 0.}, {243.3438650698181, 1.}, {
              243.3438650698181, 1.}}]}, {
             Quantity[0.030170792735156885`, "Electronvolts"], 
             Quantity[243.3438650698181, "Centimeters"^(-1)]}], 
           Tooltip[{
             Hue[0.9192235949962146, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], FontFamily -> "Arial", 
              GrayLevel[0]], 
             
             Line[{{243.34973922972404`, 0.}, {243.34973922972404`, 1.}, {
              243.34973922972404`, 1.}}]}, {
             Quantity[0.03017152103813245, "Electronvolts"], 
             Quantity[243.34973922972404`, "Centimeters"^(-1)]}], 
           Tooltip[{
             Hue[0.15529157249600445`, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], FontFamily -> "Arial", 
              GrayLevel[0]], 
             
             Line[{{243.36537448275158`, 0.}, {243.36537448275158`, 1.}, {
              243.36537448275158`, 1.}}]}, {
             Quantity[0.03017345956236161, "Electronvolts"], 
             Quantity[243.36537448275158`, "Centimeters"^(-1)]}], 
           Tooltip[{
             Hue[0.39135954999579425`, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], FontFamily -> "Arial", 
              GrayLevel[0]], 
             
             Line[{{617.4618081520957, 0.}, {617.4618081520957, 1.}, {
              617.4618081520957, 1.}}]}, {
             Quantity[0.07655550399960617, "Electronvolts"], 
             Quantity[617.4618081520957, "Centimeters"^(-1)]}], 
           Tooltip[{
             Hue[0.6274275274955841, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], FontFamily -> "Arial", 
              GrayLevel[0]], 
             
             Line[{{617.4624109842844, 0.}, {617.4624109842844, 1.}, {
              617.4624109842844, 1.}}]}, {
             Quantity[0.0765555787412686, "Electronvolts"], 
             Quantity[617.4624109842844, "Centimeters"^(-1)]}], 
           Tooltip[{
             Hue[0.8634955049953739, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], FontFamily -> "Arial", 
              GrayLevel[0]], 
             
             Line[{{617.4871727486307, 0.}, {617.4871727486307, 1.}, {
              617.4871727486307, 1.}}]}, {
             Quantity[0.07655864880863864, "Electronvolts"], 
             Quantity[617.4871727486307, "Centimeters"^(-1)]}], 
           Tooltip[{
             Hue[0.09956348249516367, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], FontFamily -> "Arial", 
              GrayLevel[0]], 
             
             Line[{{617.4897888688783, 0.}, {617.4897888688783, 1.}, {
              617.4897888688783, 1.}}]}, {
             Quantity[0.07655897316619636, "Electronvolts"], 
             Quantity[617.4897888688783, "Centimeters"^(-1)]}], 
           Tooltip[{
             Hue[0.3356314599949535, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], FontFamily -> "Arial", 
              GrayLevel[0]], 
             
             Line[{{791.8607739349609, 0.}, {791.8607739349609, 1.}, {
              791.8607739349609, 1.}}]}, {
             Quantity[0.09817821903436115, "Electronvolts"], 
             Quantity[791.8607739349609, "Centimeters"^(-1)]}], 
           Tooltip[{
             Hue[0.5716994374947433, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], FontFamily -> "Arial", 
              GrayLevel[0]], 
             
             Line[{{791.8631458187178, 0.}, {791.8631458187178, 1.}, {
              791.8631458187178, 1.}}]}, {
             Quantity[0.09817851311045467, "Electronvolts"], 
             Quantity[791.8631458187178, "Centimeters"^(-1)]}], 
           Tooltip[{
             Hue[0.8077674149945295, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], FontFamily -> "Arial", 
              GrayLevel[0]], 
             
             Line[{{791.8853182677744, 0.}, {791.8853182677744, 1.}, {
              791.8853182677744, 1.}}]}, {
             Quantity[0.09818126214365806, "Electronvolts"], 
             Quantity[791.8853182677744, "Centimeters"^(-1)]}], 
           Tooltip[{
             Hue[0.04383539249432289, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], FontFamily -> "Arial", 
              GrayLevel[0]], 
             
             Line[{{791.8882554593379, 0.}, {791.8882554593379, 1.}, {
              791.8882554593379, 1.}}]}, {
             Quantity[0.09818162630898378, "Electronvolts"], 
             Quantity[791.8882554593379, "Centimeters"^(-1)]}]}}, {{}, {}}}], 
       PlotRange -> Dynamic[qlanth`range$$], AspectRatio -> 0.125, AxesOrigin -> 
       If[False, 
         Dynamic[
          Mean[
           Transpose[qlanth`range$$]]], 
         AbsoluteOptions[AxesOrigin]], 
       Apply[
       Sequence, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         Rational[1, 8], Axes -> {True, True}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial"}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {
            HoldForm[
            "\!\(\*FractionBox[\(E\), SuperscriptBox[\(cm\), \(-1\)]]\)"], 
            None}}, FrameStyle -> Directive[15, 
           Dashing[{Small, Small}], 
           Thickness[Tiny]], 
         FrameTicks -> {{None, None}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 1000, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         Style["Energy Level Diagram of \!\(\*SuperscriptBox[\(Yb\), \
\(\(3\)\(+\)\)]\):\!\(\*SubscriptBox[\(Y\), \
\(2\)]\)\!\(\*SubscriptBox[\(SiO\), \(4\)]\)", 15, Bold], 
         PlotRange -> {{0, 10852.229817299165`}, {0., 1.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}]], 
      StandardForm],
     ImageSizeCache->{1000., {106., 110.}}],
    EventHandlerTag[{{"MouseDown", 1} :> (qlanth`first$$ = 
       MousePosition["Graphics"]), {"MouseDragged", 1} :> (
       qlanth`dragging$$ = True; qlanth`second$$ = MousePosition["Graphics"]),
       "MouseClicked" :> (
       If[CurrentValue["MouseClickCount"] == 2, 
         qlanth`range$$ = {{-2.842170943040401*^-14, 10852.229817299165`}, {
          0., 1.}}]; Null), {"MouseUp", 1} :> 
      If[qlanth`dragging$$, qlanth`dragging$$ = False; 
        qlanth`range$$ = ({{qlanth`rx1$$, qlanth`rx2$$}, {
            qlanth`ry1$$, qlanth`ry2$$}} = 
          Transpose[{qlanth`first$$, qlanth`second$$}]); 
        Part[qlanth`range$$, 2] = {0, 1}], {"MouseDown", 2} :> (
       qlanth`first$$ = ({qlanth`sx1, qlanth`sy1} = 
        MousePosition["Graphics"])), {"MouseDragged", 2} :> (
       qlanth`second$$ = ({qlanth`sx2, qlanth`sy2} = 
         MousePosition["Graphics"]); 
       qlanth`rx1$$ = qlanth`rx1$$ - (qlanth`sx2 - qlanth`sx1); 
       qlanth`rx2$$ = qlanth`rx2$$ - (qlanth`sx2 - qlanth`sx1); 
       qlanth`ry1$$ = qlanth`ry1$$ - (qlanth`sy2 - qlanth`sy1); 
       qlanth`ry2$$ = qlanth`ry2$$ - (qlanth`sy2 - qlanth`sy1); 
       qlanth`range$$ = {{qlanth`rx1$$, qlanth`rx2$$}, {
          qlanth`ry1$$, qlanth`ry2$$}}; Part[qlanth`range$$, 2] = {0, 1}; 
       Null), Method -> "Preemptive", PassEventsDown -> Automatic, 
      PassEventsUp -> True}]]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{
  3.868284442830289*^9, {3.868284490088318*^9, 3.868284501025043*^9}, 
   3.86828459926934*^9, 3.868284972900281*^9, {3.868285642103294*^9, 
   3.868285652684791*^9}, {3.868286343908519*^9, 3.868286389072064*^9}, {
   3.868286464190816*^9, 3.868286485915724*^9}},
 CellLabel->"Out[99]=",ExpressionUUID->"ee4dfb0d-6a9b-41f9-8707-416767831330"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{"energies", ",", 
     RowBox[{
      RowBox[{"#", "<", "2000"}], "&"}]}], "]"}], "//", "Length"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"ground", " ", "term", " ", "splits"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Length", "[", "energies", "]"}], "-", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Select", "[", 
     RowBox[{"energies", ",", 
      RowBox[{
       RowBox[{"#", "<", "2000"}], "&"}]}], "]"}], "//", "Length"}], ")"}], 
  " ", 
  RowBox[{"(*", " ", 
   RowBox[{"excited", " ", "term", " ", "splits"}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.868284684092814*^9, 3.868284688440631*^9}, 
   3.8682856120417843`*^9, {3.868285688376914*^9, 3.86828573046065*^9}, {
   3.8682863590590897`*^9, 3.8682863600665493`*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"d19ceeba-f3a2-4eb7-b031-f0bdb2d732cb"],

Cell[BoxData["16"], "Output",
 CellChangeTimes->{
  3.86828468868787*^9, 3.868285612595026*^9, {3.868285708470427*^9, 
   3.8682857359502077`*^9}, {3.868286351587134*^9, 3.868286372983036*^9}, 
   3.86828648904574*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"740bd88f-84d2-4729-9a25-d9ab273e7f9b"],

Cell[BoxData["12"], "Output",
 CellChangeTimes->{
  3.86828468868787*^9, 3.868285612595026*^9, {3.868285708470427*^9, 
   3.8682857359502077`*^9}, {3.868286351587134*^9, 3.868286372983036*^9}, 
   3.868286489120104*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"80f343c7-53cb-4bba-b947-9339d367da20"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1287, 1052},
WindowMargins->{{0, Automatic}, {Automatic, 37}},
TaggingRules-><|"TryRealOnly" -> False|>,
SpellingDictionaries->{"CorrectWords"->{
 "Sugano", "Kurvits", "Tanabe", "Dq", "Undoped", "Nielson", "Koster", "numpy",
   "mrays", "Velkov", "qlanth"}},
FrontEndVersion->"13.1 for Mac OS X ARM (64-bit) (June 16, 2022)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"77e6bb94-2926-4014-bb5f-43edbd668f7c"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 241, 4, 97, "Title",ExpressionUUID->"f3dab00c-756e-4b1f-9a29-d532363347ff"],
Cell[824, 28, 495, 11, 63, "Input",ExpressionUUID->"8d8b9646-d0e9-44da-9701-014892f72aa1",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[1344, 43, 159, 3, 69, "Section",ExpressionUUID->"02bfc85c-5f7c-4df2-8203-7f7d357f9a49"],
Cell[1506, 48, 804, 23, 57, "Text",ExpressionUUID->"38c828a5-9915-4f2c-9893-d0919483d186"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2347, 76, 213, 4, 69, "Section",ExpressionUUID->"b1e5c459-b6b4-4d58-9b1b-d3a21fdbf9ad"],
Cell[CellGroupData[{
Cell[2585, 84, 154, 3, 34, "Subsection",ExpressionUUID->"a35938e8-a923-48b7-966d-1ace9bee8789"],
Cell[CellGroupData[{
Cell[2764, 91, 195, 3, 30, "Input",ExpressionUUID->"14cd0db4-97d9-4b87-9aa7-efaa98cb75ff"],
Cell[2962, 96, 10225, 255, 216, "Output",ExpressionUUID->"fbde862f-1978-4776-94f7-d440b9e039bb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13224, 356, 347, 7, 30, "Input",ExpressionUUID->"62ea71cd-c856-4630-ae21-3b1fb3500a11"],
Cell[13574, 365, 404, 6, 34, "Output",ExpressionUUID->"28c4105e-c23c-40b0-ad5d-94319fed4a61"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[14027, 377, 224, 4, 34, "Subsection",ExpressionUUID->"758b18dc-7115-4285-88db-96a2b0631b92"],
Cell[CellGroupData[{
Cell[14276, 385, 194, 3, 30, "Input",ExpressionUUID->"f2cf1ce0-0562-4d8f-a15a-fcdd59e33903"],
Cell[14473, 390, 11152, 273, 279, "Output",ExpressionUUID->"1575ecfa-0767-48fd-838e-0c4afb27ce86"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25662, 668, 214, 3, 30, "Input",ExpressionUUID->"f6307838-ad18-40b7-a815-5c12f63c024f"],
Cell[25879, 673, 266, 6, 49, "Output",ExpressionUUID->"9155f0b2-00c6-480c-8dc5-bfef6470cde1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26182, 684, 204, 3, 30, "Input",ExpressionUUID->"bfc81ded-373a-47b0-b4ef-a9f1c0ffa414"],
Cell[26389, 689, 13579, 321, 404, "Output",ExpressionUUID->"837ac2b2-32c6-43bc-a0b0-417f0a1e7fa1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40005, 1015, 220, 3, 30, "Input",ExpressionUUID->"4c3d4cdf-05c9-4506-a8b6-b6199fd96a81"],
Cell[40228, 1020, 249, 5, 49, "Output",ExpressionUUID->"96c34e9d-c3af-4150-9599-90ed5cbe3160"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[40526, 1031, 221, 4, 34, "Subsection",ExpressionUUID->"d6cf5e8d-7b7b-4181-a77d-23af839fcbd3"],
Cell[CellGroupData[{
Cell[40772, 1039, 199, 3, 30, "Input",ExpressionUUID->"08ea74e4-99b2-4f40-8c45-86019d3757c0"],
Cell[40974, 1044, 11406, 279, 261, "Output",ExpressionUUID->"26543ad7-174e-4478-9210-c67afe69e135"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52417, 1328, 290, 6, 30, "Input",ExpressionUUID->"77a77870-c763-4231-9666-575e6f1ec9bb"],
Cell[52710, 1336, 282, 9, 48, "Output",ExpressionUUID->"7e7602f9-d262-4a3b-97c6-0606233da03c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53029, 1350, 198, 3, 30, "Input",ExpressionUUID->"bc60f52f-1915-4504-8d13-a598187382fc"],
Cell[53230, 1355, 11736, 286, 261, "Output",ExpressionUUID->"847db067-cc53-4325-a56b-75180e3e8510"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65003, 1646, 321, 7, 30, "Input",ExpressionUUID->"5abf072b-9698-4d0c-8ef8-01da16aaf9a0"],
Cell[65327, 1655, 355, 12, 51, "Output",ExpressionUUID->"db5ace3b-82ec-4327-9de6-d962c1e695de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65719, 1672, 196, 3, 30, "Input",ExpressionUUID->"01eaca09-62e7-46f6-b698-54e8c5e9dc6e"],
Cell[65918, 1677, 8468, 212, 151, "Output",ExpressionUUID->"c62e2578-f094-409c-b844-07a283d6ccc7"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[74435, 1895, 197, 4, 34, "Subsection",ExpressionUUID->"6458ae67-262a-4243-9b1f-1eb53a85417d"],
Cell[CellGroupData[{
Cell[74657, 1903, 197, 3, 30, "Input",ExpressionUUID->"ef2a2554-8a78-48ea-ba74-ea102d6edec5"],
Cell[74857, 1908, 14010, 335, 429, "Output",ExpressionUUID->"c9bdaf00-3632-405f-8896-b07f230ed3d2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88904, 2248, 242, 4, 30, "Input",ExpressionUUID->"b5386314-beb7-484d-873e-d12886a6b980"],
Cell[89149, 2254, 305, 6, 34, "Output",ExpressionUUID->"b9632145-d018-47fa-9981-e8e69163db72"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89491, 2265, 203, 3, 30, "Input",ExpressionUUID->"d7eedc1a-bfbb-4f6b-af2b-b3e394d31221"],
Cell[89697, 2270, 12526, 302, 366, "Output",ExpressionUUID->"b49ec814-1e5e-4acc-863c-3465b75f863a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102260, 2577, 256, 5, 30, "Input",ExpressionUUID->"73548385-db81-4891-a049-c093d5474cb3"],
Cell[102519, 2584, 879, 21, 113, "Output",ExpressionUUID->"14bfe215-4e25-4006-96e9-5678a5f51485"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[103447, 2611, 150, 3, 34, "Subsection",ExpressionUUID->"b1c26abc-1689-4ecb-82fb-87c8c31699f6"],
Cell[CellGroupData[{
Cell[103622, 2618, 193, 3, 41, "Input",ExpressionUUID->"8729518a-7473-46b7-a6a1-e2a370a23cd6"],
Cell[103818, 2623, 11684, 283, 308, "Output",ExpressionUUID->"d1020201-5479-4d39-95e2-1eccf39b8652"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115539, 2911, 288, 7, 41, "Input",ExpressionUUID->"dc031124-f659-4bfe-9813-693e8af9dce0"],
Cell[115830, 2920, 193, 3, 41, "Output",ExpressionUUID->"d42b84aa-06fa-40a4-a2b2-2247392df2de"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[116084, 2930, 239, 4, 69, "Section",ExpressionUUID->"596bfaf1-919e-4fcc-9ba9-5576b5486cf6"],
Cell[CellGroupData[{
Cell[116348, 2938, 129, 2, 34, "Subsection",ExpressionUUID->"1afeb280-b7db-4f7b-b0c7-1ccaac0f8662"],
Cell[CellGroupData[{
Cell[116502, 2944, 321, 5, 41, "Input",ExpressionUUID->"70994d3d-4996-41e0-9480-768389897beb"],
Cell[116826, 2951, 18742, 410, 389, "Output",ExpressionUUID->"faf66ec9-582f-464f-9f89-dd1e5ca499f5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135605, 3366, 333497, 5473, 332, "Input",ExpressionUUID->"7fdf19a0-eaae-4efb-a216-64b8414bd923"],
Cell[469105, 8841, 33138, 995, 862, "Output",ExpressionUUID->"d5040d0b-7721-4e97-bf88-ea89e79b3bdf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[502280, 9841, 44424, 734, 190, "Input",ExpressionUUID->"e5f01068-639a-4dd6-994a-1ad5f3579d00"],
Cell[546707, 10577, 753, 22, 67, "Output",ExpressionUUID->"7b828eb0-7a21-4a8d-ae17-5a061c9f8749"]
}, Open  ]],
Cell[CellGroupData[{
Cell[547497, 10604, 263, 5, 41, "Input",ExpressionUUID->"a110e6f9-5e81-4074-be24-54b29c729888"],
Cell[547763, 10611, 704, 21, 67, "Output",ExpressionUUID->"ae8ac867-bd88-4f2b-9f9d-689452a01063"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[548516, 10638, 352, 6, 34, "Subsection",ExpressionUUID->"9d5287ab-891e-459f-9b25-b378de501cca"],
Cell[CellGroupData[{
Cell[548893, 10648, 345, 5, 41, "Input",ExpressionUUID->"d01e3e1f-52ad-4a82-98a1-6c6da77afefb"],
Cell[549241, 10655, 10962, 266, 149, "Output",ExpressionUUID->"4db6a4e2-1cd2-4278-bf4b-95fedbf1f57d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[560240, 10926, 315, 5, 41, "Input",ExpressionUUID->"7ff3c07e-e5a4-49a0-9079-12de1a25d43b"],
Cell[560558, 10933, 1655, 56, 94, "Output",ExpressionUUID->"39db39d7-f3c7-4960-9253-8c92f27efdb5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[562250, 10994, 233, 4, 41, "Input",ExpressionUUID->"94ac4cb0-b532-49e9-9644-fed5a2a73f09"],
Cell[562486, 11000, 10417, 256, 126, "Output",ExpressionUUID->"5b88b807-37c6-4111-8fe8-e7433a1624fc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[572940, 11261, 265, 4, 41, "Input",ExpressionUUID->"38bb69e5-b221-4782-9b94-29815c66cb10"],
Cell[573208, 11267, 624, 11, 41, "Output",ExpressionUUID->"ccb214e7-32ee-4564-862a-5d48ca6a3cc7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[573869, 11283, 869, 22, 84, "Input",ExpressionUUID->"7e4f13aa-2090-41bc-a98d-9e59c2042a49"],
Cell[574741, 11307, 1088, 38, 176, "Output",ExpressionUUID->"c2462ad4-fdee-476d-ae0a-344a19fbea4e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[575866, 11350, 570, 14, 41, "Input",ExpressionUUID->"28ff8f90-c500-42d2-9935-0e315c4b62a2"],
Cell[576439, 11366, 15428, 227, 176, "Output",ExpressionUUID->"424aff4f-5af3-450e-bcb9-439564756558"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[591916, 11599, 332, 6, 34, "Subsection",ExpressionUUID->"78615389-47e4-47ce-8153-38f4b2a94086"],
Cell[CellGroupData[{
Cell[592273, 11609, 221, 4, 41, "Input",ExpressionUUID->"e03596e7-5401-4359-bbfc-a1e9007ad4a1"],
Cell[592497, 11615, 10018, 252, 102, "Output",ExpressionUUID->"92e575bb-fbbd-49e1-a59e-618f6c25b353"]
}, Open  ]],
Cell[CellGroupData[{
Cell[602552, 11872, 167, 3, 41, "Input",ExpressionUUID->"05aa8938-b099-4d75-b224-c9277703c42a"],
Cell[602722, 11877, 10475, 263, 102, "Output",ExpressionUUID->"3421e8df-195d-495b-929c-bc7fe42ae56d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[613234, 12145, 797, 23, 67, "Input",ExpressionUUID->"9472be04-e23c-4fbe-8690-26dd9c2077d8"],
Cell[614034, 12170, 2623, 79, 206, "Output",ExpressionUUID->"ef681d5d-a580-4a0d-a32a-955765367125"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[616718, 12256, 418, 12, 70, "Section",ExpressionUUID->"31f91f9b-7c98-451a-84d3-d977d58a2cf5"],
Cell[CellGroupData[{
Cell[617161, 12272, 167, 3, 34, "Subsection",ExpressionUUID->"1b584a63-3ca4-4b11-9729-9bcbc6a4d684"],
Cell[CellGroupData[{
Cell[617353, 12279, 278, 4, 41, "Input",ExpressionUUID->"6331c936-3adc-4ca8-b85c-be8ddec2739d"],
Cell[617634, 12285, 14247, 335, 150, "Output",ExpressionUUID->"8c31d20a-ec77-4a7f-9963-7cf1bf72cd05"]
}, Open  ]],
Cell[CellGroupData[{
Cell[631918, 12625, 151, 3, 41, "Input",ExpressionUUID->"153fe5cd-ee78-4c91-a805-bd033e0642da"],
Cell[632072, 12630, 1075, 31, 63, "Output",ExpressionUUID->"0476a590-f5d8-4658-b649-6a853cbac262"]
}, Open  ]],
Cell[633162, 12664, 544, 13, 57, "Text",ExpressionUUID->"eecd7b14-ed4b-48bc-951e-07fcde844b2f"],
Cell[CellGroupData[{
Cell[633731, 12681, 556, 16, 41, "Input",ExpressionUUID->"f3bbe617-3564-48bf-8c2c-6f3ae9d2cad9"],
Cell[634290, 12699, 507, 13, 41, "Output",ExpressionUUID->"6a34e094-3490-454a-9f07-c20950ea2ed3"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[634846, 12718, 143, 3, 34, "Subsection",ExpressionUUID->"9100b6f3-9350-4cd2-90aa-1a3b468f0e29"],
Cell[CellGroupData[{
Cell[635014, 12725, 279, 4, 41, "Input",ExpressionUUID->"b9f3fd8f-2a94-4234-96de-2613dbf8342f"],
Cell[635296, 12731, 14506, 342, 126, "Output",ExpressionUUID->"ec5e419c-1092-4eea-9914-da5fd618ad0d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[649839, 13078, 221, 4, 41, "Input",ExpressionUUID->"a33106bc-a96e-42d2-9aa2-d12b828f8173"],
Cell[650063, 13084, 4003, 128, 208, "Output",ExpressionUUID->"4b9209ba-6258-4c60-8fb5-7973826483b7"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[654115, 13218, 147, 3, 34, "Subsection",ExpressionUUID->"28f9f584-b1ea-44d2-8371-b311689b44e8"],
Cell[CellGroupData[{
Cell[654287, 13225, 239, 4, 41, "Input",ExpressionUUID->"60a0c9db-8635-429e-9baf-6d9756eb65e5"],
Cell[654529, 13231, 15250, 354, 150, "Output",ExpressionUUID->"065e6179-3dbc-4136-a068-122f2bfc40a6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[669816, 13590, 287, 6, 41, "Input",ExpressionUUID->"e7dc8470-c381-4dec-9588-c19cf587ea0a"],
Cell[670106, 13598, 423, 12, 41, "Output",ExpressionUUID->"2259801e-c52d-4f39-9e36-d5aa9cb5d76a"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[670578, 13616, 146, 3, 34, "Subsection",ExpressionUUID->"12016904-2d32-46ba-8359-327c8cbe3414"],
Cell[CellGroupData[{
Cell[670749, 13623, 236, 4, 41, "Input",ExpressionUUID->"f02dfdbd-8977-447a-8ebe-66d4467a7ec4"],
Cell[670988, 13629, 15112, 349, 126, "Output",ExpressionUUID->"c5e6c3c7-e4b0-461d-8f1b-9f580605058f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[686137, 13983, 320, 6, 41, "Input",ExpressionUUID->"02f35f98-c147-47d3-ba6a-c4672d2f287a"],
Cell[686460, 13991, 3654, 124, 126, "Output",ExpressionUUID->"62f3a109-32d8-4061-8ad4-a68c4eab9924"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[690163, 14121, 173, 3, 34, "Subsection",ExpressionUUID->"d749deaa-6cc6-40a9-8443-77f1b8d1c837"],
Cell[CellGroupData[{
Cell[690361, 14128, 239, 4, 41, "Input",ExpressionUUID->"05fdc824-41a1-469f-9599-98c5b6aacb5e"],
Cell[690603, 14134, 11415, 277, 150, "Output",ExpressionUUID->"c1bc74a2-033c-46e8-85aa-69e003568943"]
}, Open  ]],
Cell[CellGroupData[{
Cell[702055, 14416, 260, 5, 41, "Input",ExpressionUUID->"7215f170-a7bf-4bbf-a945-4537b28a1c98"],
Cell[702318, 14423, 3040, 110, 105, "Output",ExpressionUUID->"2decfc02-a3bc-4e2c-9c23-d41a8ca19598"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[705407, 14539, 132, 3, 34, "Subsection",ExpressionUUID->"57c3d1cb-9a91-490b-957e-3cfb158dca30"],
Cell[CellGroupData[{
Cell[705564, 14546, 230, 5, 41, "Input",ExpressionUUID->"b0a90998-7600-411d-94ed-435a9b8d3374"],
Cell[705797, 14553, 10276, 256, 102, "Output",ExpressionUUID->"c8337507-409c-4ef3-9c12-681fc3387a6c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[716110, 14814, 212, 4, 41, "Input",ExpressionUUID->"4b8a2625-3168-40ef-a584-1c3f61a88050"],
Cell[716325, 14820, 540, 15, 56, "Output",ExpressionUUID->"6762a68a-6d28-4fa4-80f2-e28ae92b3cf2"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[716926, 14842, 703, 18, 70, "Section",ExpressionUUID->"b969dfbf-4279-4371-8e7d-a989bebf0460"],
Cell[717632, 14862, 374, 10, 34, "Text",ExpressionUUID->"5ae251a2-1886-4b32-9a7c-6438f9b8c207"],
Cell[718009, 14874, 216, 3, 41, "Input",ExpressionUUID->"701435d9-d5b4-47a5-adba-c112a15b2592"],
Cell[CellGroupData[{
Cell[718250, 14881, 212, 3, 41, "Input",ExpressionUUID->"11f4d3f0-db74-48c7-8546-eb024f2a37d5"],
Cell[718465, 14886, 40404, 805, 127, "Output",ExpressionUUID->"ecdd1ceb-01db-4784-b391-03ed9e494964"]
}, Open  ]],
Cell[758884, 15694, 792, 24, 39, "Text",ExpressionUUID->"f2c4a3e1-1580-4408-b825-e0fe1e204d28"],
Cell[CellGroupData[{
Cell[759701, 15722, 162, 2, 41, "Input",ExpressionUUID->"63c9b9c9-01fe-4553-9751-7414e56c36b2"],
Cell[759866, 15726, 737, 13, 41, "Output",ExpressionUUID->"962c4492-e040-491a-911f-f812c05404ee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[760640, 15744, 200, 3, 41, "Input",ExpressionUUID->"8ff81005-feb9-4bf0-8578-d90386ee4824"],
Cell[760843, 15749, 20846, 464, 292, "Output",ExpressionUUID->"2a29a697-42f7-4fd0-a78d-4ce3b9dc5fb4"]
}, Open  ]],
Cell[781704, 16216, 1247, 29, 80, "Text",ExpressionUUID->"46b007b3-84c3-4f57-92f2-5d985f4c3fd0"],
Cell[782954, 16247, 269203, 4419, 270, "Input",ExpressionUUID->"4d0483d5-1b10-4997-80f3-65331de41f84"],
Cell[CellGroupData[{
Cell[1052182, 20670, 1182, 30, 128, "Input",ExpressionUUID->"73fcbc6e-edf8-4838-8982-ab8f4a5bd05a"],
Cell[1053367, 20702, 32151, 702, 260, "Output",ExpressionUUID->"ee4dfb0d-6a9b-41f9-8707-416767831330"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1085555, 21409, 919, 25, 63, "Input",ExpressionUUID->"d19ceeba-f3a2-4eb7-b031-f0bdb2d732cb"],
Cell[1086477, 21436, 301, 6, 55, "Output",ExpressionUUID->"740bd88f-84d2-4729-9a25-d9ab273e7f9b"],
Cell[1086781, 21444, 302, 6, 55, "Output",ExpressionUUID->"80f343c7-53cb-4bba-b947-9339d367da20"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

